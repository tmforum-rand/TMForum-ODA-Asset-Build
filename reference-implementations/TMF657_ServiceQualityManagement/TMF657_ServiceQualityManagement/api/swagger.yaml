---
swagger: "2.0"
info:
  description: "This is Swagger UI environment generated for the TMF Service Quality\
    \ Management specification"
  version: "4.0.0"
  title: "Service Quality Management"
host: "serverRoot:8080"
basePath: "/tmf-api/serviceQualityManagement/v4/"
tags:
- name: "serviceLevelObjective"
- name: "serviceLevelSpecification"
- name: "notification listeners (client side)"
- name: "events subscription"
schemes:
- "https"
consumes:
- "application/json;charset=utf-8"
produces:
- "application/json;charset=utf-8"
paths:
  /serviceLevelObjective:
    get:
      tags:
      - "serviceLevelObjective"
      summary: "List or find ServiceLevelObjective objects"
      description: "This operation list or find ServiceLevelObjective entities"
      operationId: "listServiceLevelObjective"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceLevelObjective"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceLevelObjective"
    post:
      tags:
      - "serviceLevelObjective"
      summary: "Creates a ServiceLevelObjective"
      description: "This operation creates a ServiceLevelObjective entity."
      operationId: "createServiceLevelObjective"
      parameters:
      - in: "body"
        name: "serviceLevelObjective"
        description: "The ServiceLevelObjective to be created"
        required: true
        schema:
          $ref: "#/definitions/ServiceLevelObjective_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ServiceLevelObjective"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceLevelObjective"
  /serviceLevelObjective/{id}:
    get:
      tags:
      - "serviceLevelObjective"
      summary: "Retrieves a ServiceLevelObjective by ID"
      description: "This operation retrieves a ServiceLevelObjective entity. Attribute\
        \ selection is enabled for all first level attributes."
      operationId: "retrieveServiceLevelObjective"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceLevelObjective"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceLevelObjective"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceLevelObjective"
    delete:
      tags:
      - "serviceLevelObjective"
      summary: "Deletes a ServiceLevelObjective"
      description: "This operation deletes a ServiceLevelObjective entity."
      operationId: "deleteServiceLevelObjective"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceLevelObjective"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceLevelObjective"
    patch:
      tags:
      - "serviceLevelObjective"
      summary: "Updates partially a ServiceLevelObjective"
      description: "This operation updates partially a ServiceLevelObjective entity."
      operationId: "patchServiceLevelObjective"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceLevelObjective"
        required: true
        type: "string"
      - in: "body"
        name: "serviceLevelObjective"
        description: "The ServiceLevelObjective to be updated"
        required: true
        schema:
          $ref: "#/definitions/ServiceLevelObjective_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/ServiceLevelObjective"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceLevelObjective"
  /serviceLevelSpecification:
    get:
      tags:
      - "serviceLevelSpecification"
      summary: "List or find ServiceLevelSpecification objects"
      description: "This operation list or find ServiceLevelSpecification entities"
      operationId: "listServiceLevelSpecification"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceLevelSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceLevelSpecification"
    post:
      tags:
      - "serviceLevelSpecification"
      summary: "Creates a ServiceLevelSpecification"
      description: "This operation creates a ServiceLevelSpecification entity."
      operationId: "createServiceLevelSpecification"
      parameters:
      - in: "body"
        name: "serviceLevelSpecification"
        description: "The ServiceLevelSpecification to be created"
        required: true
        schema:
          $ref: "#/definitions/ServiceLevelSpecification_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ServiceLevelSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceLevelSpecification"
  /serviceLevelSpecification/{id}:
    get:
      tags:
      - "serviceLevelSpecification"
      summary: "Retrieves a ServiceLevelSpecification by ID"
      description: "This operation retrieves a ServiceLevelSpecification entity. Attribute\
        \ selection is enabled for all first level attributes."
      operationId: "retrieveServiceLevelSpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceLevelSpecification"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceLevelSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceLevelSpecification"
    delete:
      tags:
      - "serviceLevelSpecification"
      summary: "Deletes a ServiceLevelSpecification"
      description: "This operation deletes a ServiceLevelSpecification entity."
      operationId: "deleteServiceLevelSpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceLevelSpecification"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceLevelSpecification"
    patch:
      tags:
      - "serviceLevelSpecification"
      summary: "Updates partially a ServiceLevelSpecification"
      description: "This operation updates partially a ServiceLevelSpecification entity."
      operationId: "patchServiceLevelSpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ServiceLevelSpecification"
        required: true
        type: "string"
      - in: "body"
        name: "serviceLevelSpecification"
        description: "The ServiceLevelSpecification to be updated"
        required: true
        schema:
          $ref: "#/definitions/ServiceLevelSpecification_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/ServiceLevelSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ServiceLevelSpecification"
  /hub:
    post:
      tags:
      - "events subscription"
      summary: "Register a listener"
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
      operationId: "registerListener"
      parameters:
      - in: "body"
        name: "data"
        description: "Data containing the callback endpoint to deliver the information"
        required: true
        schema:
          $ref: "#/definitions/EventSubscriptionInput"
      responses:
        201:
          description: "Subscribed"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /hub/{id}:
    delete:
      tags:
      - "events subscription"
      summary: "Unregister a listener"
      description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
      operationId: "unregisterListener"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the registered listener"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /listener/serviceLevelObjectiveCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceLevelObjectiveCreateEvent"
      description: "Example of a client listener for receiving the notification ServiceLevelObjectiveCreateEvent"
      operationId: "listenToServiceLevelObjectiveCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceLevelObjectiveCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceLevelObjectiveAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceLevelObjectiveAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification ServiceLevelObjectiveAttributeValueChangeEvent"
      operationId: "listenToServiceLevelObjectiveAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceLevelObjectiveAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceLevelObjectiveDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceLevelObjectiveDeleteEvent"
      description: "Example of a client listener for receiving the notification ServiceLevelObjectiveDeleteEvent"
      operationId: "listenToServiceLevelObjectiveDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceLevelObjectiveDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceLevelSpecificationCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceLevelSpecificationCreateEvent"
      description: "Example of a client listener for receiving the notification ServiceLevelSpecificationCreateEvent"
      operationId: "listenToServiceLevelSpecificationCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceLevelSpecificationCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceLevelSpecificationAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceLevelSpecificationAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification ServiceLevelSpecificationAttributeValueChangeEvent"
      operationId: "listenToServiceLevelSpecificationAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceLevelSpecificationAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/serviceLevelSpecificationDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ServiceLevelSpecificationDeleteEvent"
      description: "Example of a client listener for receiving the notification ServiceLevelSpecificationDeleteEvent"
      operationId: "listenToServiceLevelSpecificationDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ServiceLevelSpecificationDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
definitions:
  Addressable:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        description: "Hyperlink reference"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Base schema for adressable entities"
  EntityRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      '@baseType':
        type: "string"
        example: "ResourceSpecification"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        example: "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        example: "LogicalResourceSpecification"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Entity reference schema to be use for all entityRef class."
  Extensible:
    type: "object"
    properties:
      '@baseType':
        type: "string"
        example: "ResourceSpecification"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        example: "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        example: "LogicalResourceSpecification"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Base Extensible schema for use in TMForum Open-APIs"
  RelatedEntity:
    type: "object"
    required:
    - "@referredType"
    - "id"
    - "role"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      role:
        type: "string"
        description: "The role of an entity."
      '@baseType':
        type: "string"
        example: "ResourceSpecification"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        example: "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        example: "LogicalResourceSpecification"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "A reference to an entity, where the type of the entity is not known\
      \ in advance."
    example:
      '@referredType': "@referredType"
      role: "role"
      '@baseType': "ResourceSpecification"
      '@type': "LogicalResourceSpecification"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
  ServiceLevelObjective:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The identifier of a service level objectives."
      href:
        type: "string"
        description: "The hyperlink to access a service level objective."
      conformanceComparator:
        type: "string"
        description: "An operator that specifies whether a Service Level Objective\
          \ is \nviolated above or below the conformanceTarget."
      conformanceTarget:
        type: "string"
        description: "A value used to determine if Service Level Objective is met.\
          \ \nThe data type should be adjusted case by case."
      graceTimes:
        type: "string"
        description: "The number of times an objective can remain un-updated without\
          \ \na violation of a Service Level Agreement in reference to a measurement\
          \ period and/or Service Level Agreement reporting period."
      name:
        type: "string"
        description: "The name of the service level objectives."
      thresholdTarget:
        type: "string"
        description: "A value that used to specify when a warning should be used \n\
          that indicates an objective is danger of not being met. Notice, the data\
          \ type should be adjusted case by case."
      toleranceTarget:
        type: "string"
        description: "A value that specifies the allowable variation of a conformance\
          \ \nTarget. The data type should be adjusted case by case."
      conformancePeriod:
        description: "An interval of time during which the Conformance Target must\
          \ be measured."
        $ref: "#/definitions/TimePeriod"
      serviceLevelObjectiveConsequence:
        type: "array"
        description: "A list of consequences for this objective."
        items:
          $ref: "#/definitions/ServiceLevelSpecConsequence"
      serviceLevelObjectiveParameter:
        description: "A parameter for this objective"
        $ref: "#/definitions/ServiceLevelSpecParameter"
      tolerancePeriod:
        description: "A value that specifies the allowable time variation of a conformance"
        $ref: "#/definitions/TimePeriod"
      validFor:
        description: "A valid duration of a thing."
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Service level objectives are defined in terms of parameters and\
      \ metrics, thresholds, and tolerances \nassociated with the parameters."
    example:
      conformanceComparator: "conformanceComparator"
      graceTimes: "graceTimes"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      '@type': "@type"
      serviceLevelObjectiveConsequence:
      - prescribedAction: "prescribedAction"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        '@schemaLocation': "http://example.com/aeiou"
      - prescribedAction: "prescribedAction"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        '@schemaLocation': "http://example.com/aeiou"
      conformanceTarget: "conformanceTarget"
      toleranceTarget: "toleranceTarget"
      '@baseType': "@baseType"
      tolerancePeriod:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      name: "name"
      serviceLevelObjectiveParameter:
        parameterType: "parameterType"
        serviceParmCategory: "serviceParmCategory"
        transformationAlgorithmOfKQI: "transformationAlgorithmOfKQI"
        serviceParmPerspective: "serviceParmPerspective"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        relatedEntity:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "ResourceSpecification"
          '@type': "LogicalResourceSpecification"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "ResourceSpecification"
          '@type': "LogicalResourceSpecification"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
        name: "name"
        '@schemaLocation': "http://example.com/aeiou"
      thresholdTarget: "thresholdTarget"
      conformancePeriod:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelObjective_Create:
    type: "object"
    required:
    - "conformanceComparator"
    - "conformanceTarget"
    - "serviceLevelObjectiveParameter"
    properties:
      conformanceComparator:
        type: "string"
        description: "An operator that specifies whether a Service Level Objective\
          \ is \nviolated above or below the conformanceTarget."
      conformanceTarget:
        type: "string"
        description: "A value used to determine if Service Level Objective is met.\
          \ \nThe data type should be adjusted case by case."
      graceTimes:
        type: "string"
        description: "The number of times an objective can remain un-updated without\
          \ \na violation of a Service Level Agreement in reference to a measurement\
          \ period and/or Service Level Agreement reporting period."
      name:
        type: "string"
        description: "The name of the service level objectives."
      thresholdTarget:
        type: "string"
        description: "A value that used to specify when a warning should be used \n\
          that indicates an objective is danger of not being met. Notice, the data\
          \ type should be adjusted case by case."
      toleranceTarget:
        type: "string"
        description: "A value that specifies the allowable variation of a conformance\
          \ \nTarget. The data type should be adjusted case by case."
      conformancePeriod:
        description: "An interval of time during which the Conformance Target must\
          \ be measured."
        $ref: "#/definitions/TimePeriod"
      serviceLevelObjectiveConsequence:
        type: "array"
        description: "A list of consequences for this objective."
        items:
          $ref: "#/definitions/ServiceLevelSpecConsequence"
      serviceLevelObjectiveParameter:
        description: "A parameter for this objective"
        $ref: "#/definitions/ServiceLevelSpecParameter"
      tolerancePeriod:
        description: "A value that specifies the allowable time variation of a conformance"
        $ref: "#/definitions/TimePeriod"
      validFor:
        description: "A valid duration of a thing."
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Service level objectives are defined in terms of parameters and\
      \ metrics, thresholds, and tolerances \nassociated with the parameters.\nSkipped\
      \ properties: id,href"
    example:
      conformanceComparator: "conformanceComparator"
      graceTimes: "graceTimes"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      '@type': "@type"
      serviceLevelObjectiveConsequence:
      - prescribedAction: "prescribedAction"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        '@schemaLocation': "http://example.com/aeiou"
      - prescribedAction: "prescribedAction"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        '@schemaLocation': "http://example.com/aeiou"
      conformanceTarget: "conformanceTarget"
      toleranceTarget: "toleranceTarget"
      '@baseType': "@baseType"
      tolerancePeriod:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      name: "name"
      serviceLevelObjectiveParameter:
        parameterType: "parameterType"
        serviceParmCategory: "serviceParmCategory"
        transformationAlgorithmOfKQI: "transformationAlgorithmOfKQI"
        serviceParmPerspective: "serviceParmPerspective"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        relatedEntity:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "ResourceSpecification"
          '@type': "LogicalResourceSpecification"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "ResourceSpecification"
          '@type': "LogicalResourceSpecification"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
        name: "name"
        '@schemaLocation': "http://example.com/aeiou"
      thresholdTarget: "thresholdTarget"
      conformancePeriod:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelObjective_Update:
    type: "object"
    properties:
      conformanceComparator:
        type: "string"
        description: "An operator that specifies whether a Service Level Objective\
          \ is \nviolated above or below the conformanceTarget."
      conformanceTarget:
        type: "string"
        description: "A value used to determine if Service Level Objective is met.\
          \ \nThe data type should be adjusted case by case."
      graceTimes:
        type: "string"
        description: "The number of times an objective can remain un-updated without\
          \ \na violation of a Service Level Agreement in reference to a measurement\
          \ period and/or Service Level Agreement reporting period."
      name:
        type: "string"
        description: "The name of the service level objectives."
      thresholdTarget:
        type: "string"
        description: "A value that used to specify when a warning should be used \n\
          that indicates an objective is danger of not being met. Notice, the data\
          \ type should be adjusted case by case."
      toleranceTarget:
        type: "string"
        description: "A value that specifies the allowable variation of a conformance\
          \ \nTarget. The data type should be adjusted case by case."
      conformancePeriod:
        description: "An interval of time during which the Conformance Target must\
          \ be measured."
        $ref: "#/definitions/TimePeriod"
      serviceLevelObjectiveConsequence:
        type: "array"
        description: "A list of consequences for this objective."
        items:
          $ref: "#/definitions/ServiceLevelSpecConsequence"
      serviceLevelObjectiveParameter:
        description: "A parameter for this objective"
        $ref: "#/definitions/ServiceLevelSpecParameter"
      tolerancePeriod:
        description: "A value that specifies the allowable time variation of a conformance"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Service level objectives are defined in terms of parameters and\
      \ metrics, thresholds, and tolerances \nassociated with the parameters.\nSkipped\
      \ properties: id,href,validFor"
    example:
      conformanceComparator: "conformanceComparator"
      graceTimes: "graceTimes"
      '@type': "@type"
      serviceLevelObjectiveConsequence:
      - prescribedAction: "prescribedAction"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        '@schemaLocation': "http://example.com/aeiou"
      - prescribedAction: "prescribedAction"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        '@schemaLocation': "http://example.com/aeiou"
      conformanceTarget: "conformanceTarget"
      toleranceTarget: "toleranceTarget"
      '@baseType': "@baseType"
      tolerancePeriod:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      name: "name"
      serviceLevelObjectiveParameter:
        parameterType: "parameterType"
        serviceParmCategory: "serviceParmCategory"
        transformationAlgorithmOfKQI: "transformationAlgorithmOfKQI"
        serviceParmPerspective: "serviceParmPerspective"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        relatedEntity:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "ResourceSpecification"
          '@type': "LogicalResourceSpecification"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "ResourceSpecification"
          '@type': "LogicalResourceSpecification"
          name: "name"
          id: "id"
          href: "href"
          '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
        name: "name"
        '@schemaLocation': "http://example.com/aeiou"
      thresholdTarget: "thresholdTarget"
      conformancePeriod:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelObjectiveRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "The identifier of a service level object."
      href:
        type: "string"
        description: "The hyperlink to access a service level object."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "A set of Service Level Objectives that are contained in the Service\
      \ Level Specification."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelSpecConsequence:
    type: "object"
    properties:
      prescribedAction:
        type: "string"
        description: "Recommended remedy for a violated Service Level Objective. \n\
          This could be a hyperlink to the recommended action."
      validFor:
        description: "A valid duration of a thing."
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Some consequences for the provider of the Service are resulted when\
      \ the service level objective\ndoes not meet."
    example:
      prescribedAction: "prescribedAction"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      '@type': "@type"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelSpecParameter:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the parameter"
      parameterType:
        type: "string"
        description: "Types of Service Level Specification parameters are KQI or KPI"
      serviceParmCategory:
        type: "string"
        description: "A string that specifies whether the Service Level Specification\
          \ Parameter is technology specific, service specific, or technology/service\
          \ independent"
      serviceParmPerspective:
        type: "string"
        description: "A string that specifies whether the Service Level Specification\
          \ Parameter represents a single user instance parameter or a parameter that\
          \ represents an aggregation"
      transformationAlgorithmOfKQI:
        type: "string"
        description: "The description of a logical step-by-step procedure used to\
          \ calculate the value of a KQI"
      relatedEntity:
        type: "array"
        description: "A list of entities related to this parameter"
        items:
          $ref: "#/definitions/RelatedEntity"
      validFor:
        description: "A valid duration of a thing"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Service Level Specification parameters can be one of two types.\
      \ A Key Quality Indicator (KQI) \nprovides a measurement of a specific aspect\
      \ of the performance of a Product (i.e., Product \nSpecification, Product Offering,\
      \ or Product) or a Service (i.e., Service Specification or Service)."
    example:
      parameterType: "parameterType"
      serviceParmCategory: "serviceParmCategory"
      transformationAlgorithmOfKQI: "transformationAlgorithmOfKQI"
      serviceParmPerspective: "serviceParmPerspective"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      '@type': "@type"
      relatedEntity:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "ResourceSpecification"
        '@type': "LogicalResourceSpecification"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "ResourceSpecification"
        '@type': "LogicalResourceSpecification"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
      name: "name"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelSpecification:
    type: "object"
    properties:
      id:
        type: "string"
        description: "The identifier to a service level specification."
      href:
        type: "string"
        description: "The hyperlink to access a service level specification."
      description:
        type: "string"
        description: "A brief introduction of a service level specification."
      name:
        type: "string"
        description: "The name of Service Level Specification"
      relatedServiceLevelObjective:
        type: "array"
        description: "A list of objectives related to this service level specification"
        items:
          $ref: "#/definitions/ServiceLevelObjectiveRef"
      validFor:
        description: "A valid duration of a thing."
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "A Service Level Specification represents a pre-defined or negotiated\
      \ set of Service Level \nObjectives. In addition, certain consequences are associated\
      \ with not meeting the Service Level \nObjectives. Service Level Agreements\
      \ are expressed in terms of Service Level Specifications."
    example:
      relatedServiceLevelObjective:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      '@type': "@type"
      name: "name"
      description: "description"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelSpecification_Create:
    type: "object"
    required:
    - "name"
    - "relatedServiceLevelObjective"
    properties:
      description:
        type: "string"
        description: "A brief introduction of a service level specification."
      name:
        type: "string"
        description: "The name of Service Level Specification"
      relatedServiceLevelObjective:
        type: "array"
        description: "A list of objectives related to this service level specification"
        items:
          $ref: "#/definitions/ServiceLevelObjectiveRef"
        minItems: 1
      validFor:
        description: "A valid duration of a thing."
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "A Service Level Specification represents a pre-defined or negotiated\
      \ set of Service Level \nObjectives. In addition, certain consequences are associated\
      \ with not meeting the Service Level \nObjectives. Service Level Agreements\
      \ are expressed in terms of Service Level Specifications.\nSkipped properties:\
      \ id,href"
    example:
      relatedServiceLevelObjective:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        '@baseType': "@baseType"
        '@type': "@type"
        endDateTime: "1985-04-12T23:20:50.52Z"
        '@schemaLocation': "http://example.com/aeiou"
      '@type': "@type"
      name: "name"
      description: "description"
      '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelSpecification_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "A brief introduction of a service level specification."
      name:
        type: "string"
        description: "The name of Service Level Specification"
      relatedServiceLevelObjective:
        type: "array"
        description: "A list of objectives related to this service level specification"
        items:
          $ref: "#/definitions/ServiceLevelObjectiveRef"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "A Service Level Specification represents a pre-defined or negotiated\
      \ set of Service Level \nObjectives. In addition, certain consequences are associated\
      \ with not meeting the Service Level \nObjectives. Service Level Agreements\
      \ are expressed in terms of Service Level Specifications.\nSkipped properties:\
      \ id,href,validFor"
    example:
      relatedServiceLevelObjective:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      description: "description"
      '@schemaLocation': "http://example.com/aeiou"
  TimePeriod:
    type: "object"
    properties:
      endDateTime:
        type: "string"
        format: "date-time"
        example: "1985-04-12T23:20:50.52Z"
        description: "End of the time period, using IETC-RFC-3339 format"
      startDateTime:
        type: "string"
        format: "date-time"
        example: "1985-04-12T23:20:50.52Z"
        description: "Start of the time period, using IETC-RFC-3339 format. If you\
          \ define a start, you must also define an end"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
      \ only, or both"
    example:
      startDateTime: "1985-04-12T23:20:50.52Z"
      '@baseType': "@baseType"
      '@type': "@type"
      endDateTime: "1985-04-12T23:20:50.52Z"
      '@schemaLocation': "http://example.com/aeiou"
  EventSubscription:
    type: "object"
    required:
    - "callback"
    - "id"
    properties:
      id:
        type: "string"
        description: "Id of the listener"
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
      id: "id"
  EventSubscriptionInput:
    type: "object"
    required:
    - "callback"
    properties:
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
  ServiceLevelObjectiveCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/ServiceLevelObjectiveCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        serviceLevelObjective:
          conformanceComparator: "conformanceComparator"
          graceTimes: "graceTimes"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          serviceLevelObjectiveConsequence:
          - prescribedAction: "prescribedAction"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              '@baseType': "@baseType"
              '@type': "@type"
              endDateTime: "1985-04-12T23:20:50.52Z"
              '@schemaLocation': "http://example.com/aeiou"
            '@type': "@type"
            '@schemaLocation': "http://example.com/aeiou"
          - prescribedAction: "prescribedAction"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              '@baseType': "@baseType"
              '@type': "@type"
              endDateTime: "1985-04-12T23:20:50.52Z"
              '@schemaLocation': "http://example.com/aeiou"
            '@type': "@type"
            '@schemaLocation': "http://example.com/aeiou"
          conformanceTarget: "conformanceTarget"
          toleranceTarget: "toleranceTarget"
          '@baseType': "@baseType"
          tolerancePeriod:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          name: "name"
          serviceLevelObjectiveParameter:
            parameterType: "parameterType"
            serviceParmCategory: "serviceParmCategory"
            transformationAlgorithmOfKQI: "transformationAlgorithmOfKQI"
            serviceParmPerspective: "serviceParmPerspective"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              '@baseType': "@baseType"
              '@type': "@type"
              endDateTime: "1985-04-12T23:20:50.52Z"
              '@schemaLocation': "http://example.com/aeiou"
            '@type': "@type"
            relatedEntity:
            - '@referredType': "@referredType"
              role: "role"
              '@baseType': "ResourceSpecification"
              '@type': "LogicalResourceSpecification"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
            - '@referredType': "@referredType"
              role: "role"
              '@baseType': "ResourceSpecification"
              '@type': "LogicalResourceSpecification"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
            name: "name"
            '@schemaLocation': "http://example.com/aeiou"
          thresholdTarget: "thresholdTarget"
          conformancePeriod:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  ServiceLevelObjectiveCreateEventPayload:
    type: "object"
    properties:
      serviceLevelObjective:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceLevelObjective"
    description: "The event data structure"
    example:
      serviceLevelObjective:
        conformanceComparator: "conformanceComparator"
        graceTimes: "graceTimes"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        serviceLevelObjectiveConsequence:
        - prescribedAction: "prescribedAction"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          '@schemaLocation': "http://example.com/aeiou"
        - prescribedAction: "prescribedAction"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          '@schemaLocation': "http://example.com/aeiou"
        conformanceTarget: "conformanceTarget"
        toleranceTarget: "toleranceTarget"
        '@baseType': "@baseType"
        tolerancePeriod:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        name: "name"
        serviceLevelObjectiveParameter:
          parameterType: "parameterType"
          serviceParmCategory: "serviceParmCategory"
          transformationAlgorithmOfKQI: "transformationAlgorithmOfKQI"
          serviceParmPerspective: "serviceParmPerspective"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          relatedEntity:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "ResourceSpecification"
            '@type': "LogicalResourceSpecification"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "ResourceSpecification"
            '@type': "LogicalResourceSpecification"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
          name: "name"
          '@schemaLocation': "http://example.com/aeiou"
        thresholdTarget: "thresholdTarget"
        conformancePeriod:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelObjectiveAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/ServiceLevelObjectiveAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        serviceLevelObjective:
          conformanceComparator: "conformanceComparator"
          graceTimes: "graceTimes"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          serviceLevelObjectiveConsequence:
          - prescribedAction: "prescribedAction"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              '@baseType': "@baseType"
              '@type': "@type"
              endDateTime: "1985-04-12T23:20:50.52Z"
              '@schemaLocation': "http://example.com/aeiou"
            '@type': "@type"
            '@schemaLocation': "http://example.com/aeiou"
          - prescribedAction: "prescribedAction"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              '@baseType': "@baseType"
              '@type': "@type"
              endDateTime: "1985-04-12T23:20:50.52Z"
              '@schemaLocation': "http://example.com/aeiou"
            '@type': "@type"
            '@schemaLocation': "http://example.com/aeiou"
          conformanceTarget: "conformanceTarget"
          toleranceTarget: "toleranceTarget"
          '@baseType': "@baseType"
          tolerancePeriod:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          name: "name"
          serviceLevelObjectiveParameter:
            parameterType: "parameterType"
            serviceParmCategory: "serviceParmCategory"
            transformationAlgorithmOfKQI: "transformationAlgorithmOfKQI"
            serviceParmPerspective: "serviceParmPerspective"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              '@baseType': "@baseType"
              '@type': "@type"
              endDateTime: "1985-04-12T23:20:50.52Z"
              '@schemaLocation': "http://example.com/aeiou"
            '@type': "@type"
            relatedEntity:
            - '@referredType': "@referredType"
              role: "role"
              '@baseType': "ResourceSpecification"
              '@type': "LogicalResourceSpecification"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
            - '@referredType': "@referredType"
              role: "role"
              '@baseType': "ResourceSpecification"
              '@type': "LogicalResourceSpecification"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
            name: "name"
            '@schemaLocation': "http://example.com/aeiou"
          thresholdTarget: "thresholdTarget"
          conformancePeriod:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  ServiceLevelObjectiveAttributeValueChangeEventPayload:
    type: "object"
    properties:
      serviceLevelObjective:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceLevelObjective"
    description: "The event data structure"
    example:
      serviceLevelObjective:
        conformanceComparator: "conformanceComparator"
        graceTimes: "graceTimes"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        serviceLevelObjectiveConsequence:
        - prescribedAction: "prescribedAction"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          '@schemaLocation': "http://example.com/aeiou"
        - prescribedAction: "prescribedAction"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          '@schemaLocation': "http://example.com/aeiou"
        conformanceTarget: "conformanceTarget"
        toleranceTarget: "toleranceTarget"
        '@baseType': "@baseType"
        tolerancePeriod:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        name: "name"
        serviceLevelObjectiveParameter:
          parameterType: "parameterType"
          serviceParmCategory: "serviceParmCategory"
          transformationAlgorithmOfKQI: "transformationAlgorithmOfKQI"
          serviceParmPerspective: "serviceParmPerspective"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          relatedEntity:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "ResourceSpecification"
            '@type': "LogicalResourceSpecification"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "ResourceSpecification"
            '@type': "LogicalResourceSpecification"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
          name: "name"
          '@schemaLocation': "http://example.com/aeiou"
        thresholdTarget: "thresholdTarget"
        conformancePeriod:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelObjectiveDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/ServiceLevelObjectiveDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        serviceLevelObjective:
          conformanceComparator: "conformanceComparator"
          graceTimes: "graceTimes"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          serviceLevelObjectiveConsequence:
          - prescribedAction: "prescribedAction"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              '@baseType': "@baseType"
              '@type': "@type"
              endDateTime: "1985-04-12T23:20:50.52Z"
              '@schemaLocation': "http://example.com/aeiou"
            '@type': "@type"
            '@schemaLocation': "http://example.com/aeiou"
          - prescribedAction: "prescribedAction"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              '@baseType': "@baseType"
              '@type': "@type"
              endDateTime: "1985-04-12T23:20:50.52Z"
              '@schemaLocation': "http://example.com/aeiou"
            '@type': "@type"
            '@schemaLocation': "http://example.com/aeiou"
          conformanceTarget: "conformanceTarget"
          toleranceTarget: "toleranceTarget"
          '@baseType': "@baseType"
          tolerancePeriod:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          name: "name"
          serviceLevelObjectiveParameter:
            parameterType: "parameterType"
            serviceParmCategory: "serviceParmCategory"
            transformationAlgorithmOfKQI: "transformationAlgorithmOfKQI"
            serviceParmPerspective: "serviceParmPerspective"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              '@baseType': "@baseType"
              '@type': "@type"
              endDateTime: "1985-04-12T23:20:50.52Z"
              '@schemaLocation': "http://example.com/aeiou"
            '@type': "@type"
            relatedEntity:
            - '@referredType': "@referredType"
              role: "role"
              '@baseType': "ResourceSpecification"
              '@type': "LogicalResourceSpecification"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
            - '@referredType': "@referredType"
              role: "role"
              '@baseType': "ResourceSpecification"
              '@type': "LogicalResourceSpecification"
              name: "name"
              id: "id"
              href: "href"
              '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
            name: "name"
            '@schemaLocation': "http://example.com/aeiou"
          thresholdTarget: "thresholdTarget"
          conformancePeriod:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  ServiceLevelObjectiveDeleteEventPayload:
    type: "object"
    properties:
      serviceLevelObjective:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceLevelObjective"
    description: "The event data structure"
    example:
      serviceLevelObjective:
        conformanceComparator: "conformanceComparator"
        graceTimes: "graceTimes"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        serviceLevelObjectiveConsequence:
        - prescribedAction: "prescribedAction"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          '@schemaLocation': "http://example.com/aeiou"
        - prescribedAction: "prescribedAction"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          '@schemaLocation': "http://example.com/aeiou"
        conformanceTarget: "conformanceTarget"
        toleranceTarget: "toleranceTarget"
        '@baseType': "@baseType"
        tolerancePeriod:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        name: "name"
        serviceLevelObjectiveParameter:
          parameterType: "parameterType"
          serviceParmCategory: "serviceParmCategory"
          transformationAlgorithmOfKQI: "transformationAlgorithmOfKQI"
          serviceParmPerspective: "serviceParmPerspective"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          relatedEntity:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "ResourceSpecification"
            '@type': "LogicalResourceSpecification"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "ResourceSpecification"
            '@type': "LogicalResourceSpecification"
            name: "name"
            id: "id"
            href: "href"
            '@schemaLocation': "https://mycsp.com:8080/tmf-api/schema/Resource/LogicalResourceSpecification.schema.json"
          name: "name"
          '@schemaLocation': "http://example.com/aeiou"
        thresholdTarget: "thresholdTarget"
        conformancePeriod:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelSpecificationCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/ServiceLevelSpecificationCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        serviceLevelSpecification:
          relatedServiceLevelObjective:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          name: "name"
          description: "description"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  ServiceLevelSpecificationCreateEventPayload:
    type: "object"
    properties:
      serviceLevelSpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceLevelSpecification"
    description: "The event data structure"
    example:
      serviceLevelSpecification:
        relatedServiceLevelObjective:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        name: "name"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelSpecificationAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/ServiceLevelSpecificationAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        serviceLevelSpecification:
          relatedServiceLevelObjective:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          name: "name"
          description: "description"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  ServiceLevelSpecificationAttributeValueChangeEventPayload:
    type: "object"
    properties:
      serviceLevelSpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceLevelSpecification"
    description: "The event data structure"
    example:
      serviceLevelSpecification:
        relatedServiceLevelObjective:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        name: "name"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  ServiceLevelSpecificationDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/ServiceLevelSpecificationDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        serviceLevelSpecification:
          relatedServiceLevelObjective:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "href"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            '@baseType': "@baseType"
            '@type': "@type"
            endDateTime: "1985-04-12T23:20:50.52Z"
            '@schemaLocation': "http://example.com/aeiou"
          '@type': "@type"
          name: "name"
          description: "description"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  ServiceLevelSpecificationDeleteEventPayload:
    type: "object"
    properties:
      serviceLevelSpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ServiceLevelSpecification"
    description: "The event data structure"
    example:
      serviceLevelSpecification:
        relatedServiceLevelObjective:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "href"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          '@baseType': "@baseType"
          '@type': "@type"
          endDateTime: "1985-04-12T23:20:50.52Z"
          '@schemaLocation': "http://example.com/aeiou"
        '@type': "@type"
        name: "name"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
  Error:
    type: "object"
    required:
    - "code"
    - "reason"
    properties:
      code:
        type: "string"
        description: "Application relevant detail, defined in the API or a common\
          \ list."
      reason:
        type: "string"
        description: "Explanation of the reason for the error which can be shown to\
          \ a client user."
      message:
        type: "string"
        description: "More details and corrective actions related to the error which\
          \ can be shown to a client user."
      status:
        type: "string"
        description: "HTTP Error code extension"
      referenceError:
        type: "string"
        format: "uri"
        description: "URI of documentation describing the error."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class."
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name."
    description: "Used when an API throws an Error, typically with a HTTP error response-code\
      \ (3xx, 4xx, 5xx)"
