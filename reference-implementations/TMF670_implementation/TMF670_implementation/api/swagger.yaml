---
swagger: "2.0"
info:
  description: "TMF670 Defines a specific method of payment (e.g. direct debit with\
    \ all details associated)\n-\tMain payment method attributes are its type, details,\
    \ name, description, isPreffered, status, status date\nPayment Method API performs\
    \ the following operations on payment method.\n-\tRetrieval of a payment method\
    \ or a collection of payment method depending on filter criteria\n-\tPartial update\
    \ of a payment method\n-\tCreation of a payment method \n-\tNotification of events\
    \ on payment method:\no\tPayment method state change\no\tPayment method change\n\
    o\tPayment method created\no\tPayment method deleted \n\n\\n\\n\\nCopyright Â©\
    \ TM Forum 2020. All Rights Reserved\\n\\n\\n\"\n"
  version: "4.0.0"
  title: "Payment Method"
host: "serverRoot:8080"
basePath: "/tmf-api/paymentMethod/v4/"
tags:
- name: "paymentMethod"
- name: "notification listeners (client side)"
- name: "events subscription"
schemes:
- "https"
consumes:
- "application/json;charset=utf-8"
produces:
- "application/json;charset=utf-8"
paths:
  /paymentMethod:
    get:
      tags:
      - "paymentMethod"
      summary: "List or find PaymentMethod objects"
      description: "This operation list or find PaymentMethod entities"
      operationId: "listPaymentMethod"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PaymentMethod"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PaymentMethod"
    post:
      tags:
      - "paymentMethod"
      summary: "Creates a PaymentMethod"
      description: "This operation creates a PaymentMethod entity."
      operationId: "createPaymentMethod"
      parameters:
      - in: "body"
        name: "paymentMethod"
        description: "The PaymentMethod to be created"
        required: true
        schema:
          $ref: "#/definitions/PaymentMethod_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/PaymentMethod"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PaymentMethod"
  /paymentMethod/{id}:
    get:
      tags:
      - "paymentMethod"
      summary: "Retrieves a PaymentMethod by ID"
      description: "This operation retrieves a PaymentMethod entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrievePaymentMethod"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the PaymentMethod"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/PaymentMethod"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PaymentMethod"
    delete:
      tags:
      - "paymentMethod"
      summary: "Deletes a PaymentMethod"
      description: "This operation deletes a PaymentMethod entity."
      operationId: "deletePaymentMethod"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the PaymentMethod"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PaymentMethod"
    patch:
      tags:
      - "paymentMethod"
      summary: "Updates partially a PaymentMethod"
      description: "This operation updates partially a PaymentMethod entity."
      operationId: "patchPaymentMethod"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the PaymentMethod"
        required: true
        type: "string"
      - in: "body"
        name: "paymentMethod"
        description: "The PaymentMethod to be updated"
        required: true
        schema:
          $ref: "#/definitions/PaymentMethod_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/PaymentMethod"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "PaymentMethod"
  /hub:
    post:
      tags:
      - "events subscription"
      summary: "Register a listener"
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
      operationId: "registerListener"
      parameters:
      - in: "body"
        name: "data"
        description: "Data containing the callback endpoint to deliver the information"
        required: true
        schema:
          $ref: "#/definitions/EventSubscriptionInput"
      responses:
        201:
          description: "Subscribed"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /hub/{id}:
    delete:
      tags:
      - "events subscription"
      summary: "Unregister a listener"
      description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
      operationId: "unregisterListener"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the registered listener"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /listener/paymentMethodCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity PaymentMethodCreateEvent"
      description: "Example of a client listener for receiving the notification PaymentMethodCreateEvent"
      operationId: "listenToPaymentMethodCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/PaymentMethodCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/paymentMethodAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity PaymentMethodAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification PaymentMethodAttributeValueChangeEvent"
      operationId: "listenToPaymentMethodAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/PaymentMethodAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/paymentMethodStatusChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity PaymentMethodStatusChangeEvent"
      description: "Example of a client listener for receiving the notification PaymentMethodStatusChangeEvent"
      operationId: "listenToPaymentMethodStatusChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/PaymentMethodStatusChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/paymentMethodDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity PaymentMethodDeleteEvent"
      description: "Example of a client listener for receiving the notification PaymentMethodDeleteEvent"
      operationId: "listenToPaymentMethodDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/PaymentMethodDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
definitions:
  AccountRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the account"
      href:
        type: "string"
        description: "Reference of the account"
      description:
        type: "string"
        description: "Detailed description of the account"
      name:
        type: "string"
        description: "Name of the account"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Account reference. A account may be a party account or a financial\
      \ account."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      description: "description"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  Addressable:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
    description: "Base schema for adressable entities"
  Entity:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Base entity schema for use in TMForum Open-APIs"
  EntityRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Entity reference schema to be use for all entityRef class."
  Extensible:
    type: "object"
    properties:
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Base Extensible schema for use in TMForum Open-APIs"
  PaymentMethod:
    allOf:
    - $ref: "#/definitions/Entity"
    description: "A Payment Method is a pure-virtual super-class that defines a specific\
      \ method of payment such as Direct Debit, Cash, Digital Wallet,Tokenized Card,\
      \ Bank Account Transfer, Bank Account Debit, Bank Card, Voucher, Check, Bucket\
      \ PaymentMethod, Account PaymentMethod, and Loyalty PaymentMethod with all details\
      \ associated. Use the @type attribute to specify the concrete type in the API\
      \ calls.Defines a specific method of payment (e.g. direct debit with all details\
      \ associated)"
  PaymentMethod_Create:
    type: "object"
    required:
    - "@type"
    - "name"
    properties:
      authorizationCode:
        type: "string"
        example: "1234567890"
        description: "Review: Authorization code provided by a financial institution.\
          \ Typically this would be populated for recurring payments using the method,\
          \ as payments have an authorization code of their own."
      description:
        type: "string"
        example: "My gold mastercard."
        description: "Text description of the contents of the payment method"
      isPreferred:
        type: "boolean"
        example: true
        description: "If the method is the preferred one by the owner. Typically used\
          \ when querying for the payment methods of a specific customer or account"
      name:
        type: "string"
        example: "Main credit card"
        description: "Friendly name assigned to the payment method"
      status:
        type: "string"
        example: "Active"
        description: "Status of the payment method"
      statusDate:
        type: "string"
        format: "date-time"
        example: "2020-07-17T10:12:26+0000"
        description: "The last time the payment method status changed."
      statusReason:
        type: "string"
        example: "This payment method has expired, therefore its status is now inactive."
        description: "The reason for the last status change."
      account:
        type: "array"
        description: "Reference to the accounts that are linked to the payment method.\
          \ May be a party account or a financial account."
        items:
          $ref: "#/definitions/AccountRef"
      relatedParty:
        description: "Reference to the customer or party that owns that payment method\
          \ or can use it."
        $ref: "#/definitions/RelatedParty"
      relatedPlace:
        description: "Reference to a place for billing or delivery address, if different\
          \ to that of the related party."
        $ref: "#/definitions/RelatedPlace"
      validFor:
        description: "Date interval in which the payment method is valid"
        $ref: "#/definitions/TimePeriod"
      service:
        type: "string"
      walletId:
        type: "string"
      walletUrl:
        type: "string"
      accountNumber:
        type: "string"
      owner:
        type: "string"
      bank:
        type: "string"
      brand:
        type: "string"
      expirationDate:
        type: "string"
      nameOnCard:
        type: "string"
      drawer:
        type: "string"
      payee:
        type: "string"
      signedDate:
        type: "string"
      mandateId:
        type: "string"
      mandateType:
        type: "string"
      firstDebitDate:
        type: "string"
      lastDebitDate:
        type: "string"
      cardNumber:
        type: "string"
      lastFourDigits:
        type: "string"
      code:
        type: "string"
      checkId:
        type: "string"
      value:
        type: "object"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "Type of payment method (e.g.: bank card, cash, voucher, etc)."
    description: "A Payment Method is a pure-virtual super-class that defines a specific\
      \ method of payment such as Direct Debit, Cash, Digital Wallet,Tokenized Card,\
      \ Bank Account Transfer, Bank Account Debit, Bank Card, Voucher, Check, Bucket\
      \ PaymentMethod, Account PaymentMethod, and Loyalty PaymentMethod with all details\
      \ associated. Use the @type attribute to specify the concrete type in the API\
      \ calls.\nSkipped properties: id,href"
    example:
      statusDate: "2020-07-17T10:12:26+0000"
      relatedPlace:
        '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      authorizationCode: "1234567890"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "My gold mastercard."
      isPreferred: true
      relatedParty:
        '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      statusReason: "This payment method has expired, therefore its status is now\
        \ inactive."
      '@baseType': "@baseType"
      name: "Main credit card"
      '@schemaLocation': "http://example.com/aeiou"
      account:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      status: "Active"
  PaymentMethod_Update:
    type: "object"
    required:
    - "name"
    properties:
      authorizationCode:
        type: "string"
        example: "1234567890"
        description: "Review: Authorization code provided by a financial institution.\
          \ Typically this would be populated for recurring payments using the method,\
          \ as payments have an authorization code of their own."
      description:
        type: "string"
        example: "My gold mastercard."
        description: "Text description of the contents of the payment method"
      isPreferred:
        type: "boolean"
        example: true
        description: "If the method is the preferred one by the owner. Typically used\
          \ when querying for the payment methods of a specific customer or account"
      name:
        type: "string"
        example: "Main credit card"
        description: "Friendly name assigned to the payment method"
      status:
        type: "string"
        example: "Active"
        description: "Status of the payment method"
      statusDate:
        type: "string"
        format: "date-time"
        example: "2020-07-17T10:12:26+0000"
        description: "The last time the payment method status changed."
      statusReason:
        type: "string"
        example: "This payment method has expired, therefore its status is now inactive."
        description: "The reason for the last status change."
      account:
        type: "array"
        description: "Reference to the accounts that are linked to the payment method.\
          \ May be a party account or a financial account."
        items:
          $ref: "#/definitions/AccountRef"
      relatedParty:
        description: "Reference to the customer or party that owns that payment method\
          \ or can use it."
        $ref: "#/definitions/RelatedParty"
      relatedPlace:
        description: "Reference to a place for billing or delivery address, if different\
          \ to that of the related party."
        $ref: "#/definitions/RelatedPlace"
      validFor:
        description: "Date interval in which the payment method is valid"
        $ref: "#/definitions/TimePeriod"
    description: "A Payment Method is a pure-virtual super-class that defines a specific\
      \ method of payment such as Direct Debit, Cash, Digital Wallet,Tokenized Card,\
      \ Bank Account Transfer, Bank Account Debit, Bank Card, Voucher, Check, Bucket\
      \ PaymentMethod, Account PaymentMethod, and Loyalty PaymentMethod with all details\
      \ associated. Use the @type attribute to specify the concrete type in the API\
      \ calls.\nSkipped properties: id,href,@baseType,@schemaLocation,@type"
    example:
      statusDate: "2020-07-17T10:12:26+0000"
      relatedPlace:
        '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      statusReason: "This payment method has expired, therefore its status is now\
        \ inactive."
      authorizationCode: "1234567890"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      name: "Main credit card"
      description: "My gold mastercard."
      isPreferred: true
      relatedParty:
        '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      account:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        description: "description"
        id: "id"
        href: "href"
        '@schemaLocation': "http://example.com/aeiou"
      status: "Active"
  RelatedParty:
    type: "object"
    required:
    - "@referredType"
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      role:
        type: "string"
        description: "Role played by the related party"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Related Entity reference. A related party defines party or party\
      \ role linked to a specific entity."
    example:
      '@referredType': "@referredType"
      role: "role"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  RelatedPlace:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the place"
      href:
        type: "string"
        description: "Unique reference of the place"
      name:
        type: "string"
        description: "A user-friendly name for the place, such as [Paris Store], [London\
          \ Store], [Main Home]"
      role:
        type: "string"
        description: "Role of the place, such as: [home delivery], [shop retrieval])"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "A  Place and an associated role as installation adress, delivery\
      \ address, etc...."
    example:
      '@referredType': "@referredType"
      role: "role"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "href"
      '@schemaLocation': "http://example.com/aeiou"
  TimePeriod:
    type: "object"
    properties:
      endDateTime:
        type: "string"
        format: "date-time"
        example: "1985-04-12T23:20:50.52Z"
        description: "End of the time period, using IETC-RFC-3339 format"
      startDateTime:
        type: "string"
        format: "date-time"
        example: "1985-04-12T23:20:50.52Z"
        description: "Start of the time period, using IETC-RFC-3339 format"
    description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
      \ only, or both"
    example:
      startDateTime: "1985-04-12T23:20:50.52Z"
      endDateTime: "1985-04-12T23:20:50.52Z"
  EventSubscription:
    type: "object"
    required:
    - "callback"
    - "id"
    properties:
      id:
        type: "string"
        description: "Id of the listener"
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
      id: "id"
  EventSubscriptionInput:
    type: "object"
    required:
    - "callback"
    properties:
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
  PaymentMethodCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/PaymentMethodCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        paymentMethod: ""
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  PaymentMethodCreateEventPayload:
    type: "object"
    properties:
      paymentMethod:
        description: "The involved resource data for the event"
        $ref: "#/definitions/PaymentMethod"
    description: "The event data structure"
    example:
      paymentMethod: ""
  PaymentMethodAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/PaymentMethodAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        paymentMethod: ""
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  PaymentMethodAttributeValueChangeEventPayload:
    type: "object"
    properties:
      paymentMethod:
        description: "The involved resource data for the event"
        $ref: "#/definitions/PaymentMethod"
    description: "The event data structure"
    example:
      paymentMethod: ""
  PaymentMethodStatusChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/PaymentMethodStatusChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        paymentMethod: ""
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  PaymentMethodStatusChangeEventPayload:
    type: "object"
    properties:
      paymentMethod:
        description: "The involved resource data for the event"
        $ref: "#/definitions/PaymentMethod"
    description: "The event data structure"
    example:
      paymentMethod: ""
  PaymentMethodDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/PaymentMethodDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        paymentMethod: ""
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  PaymentMethodDeleteEventPayload:
    type: "object"
    properties:
      paymentMethod:
        description: "The involved resource data for the event"
        $ref: "#/definitions/PaymentMethod"
    description: "The event data structure"
    example:
      paymentMethod: ""
  DirectDebit:
    allOf:
    - $ref: "#/definitions/PaymentMethod"
    description: "Direct Debit is a fully automated payment instrument which is generally\
      \ used for recurrent payments. It allows a creditor to initiate the payment\
      \ order. In doing so, it exempts the debtor from having to send a separate payment\
      \ order at each due date"
  AttachmentRefOrValue:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier for this particular attachment"
      href:
        type: "string"
        format: "uri"
        description: "URI for this Attachment"
      attachmentType:
        type: "string"
        description: "Attachment type such as video, picture"
      content:
        type: "string"
        format: "base64"
        description: "The actual contents of the attachment object, if embedded, encoded\
          \ as base64"
      description:
        type: "string"
        description: "A narrative text describing the content of the attachment"
      mimeType:
        type: "string"
        description: "Attachment mime type such as extension file for video, picture\
          \ and document"
      name:
        type: "string"
        description: "The name of the attachment"
      url:
        type: "string"
        format: "uri"
        description: "Uniform Resource Locator, is a web page address (a subset of\
          \ URI)"
      size:
        description: "The size of the attachment."
        $ref: "#/definitions/Quantity"
      validFor:
        description: "The period of time for which the attachment is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "An attachment by value or by reference. An attachment complements\
      \ the description of an element, for example through a document, a video, a\
      \ picture."
  Voucher:
    allOf:
    - $ref: "#/definitions/PaymentMethod"
    description: "A voucher method of payment."
  TokenizedCard:
    allOf:
    - $ref: "#/definitions/PaymentMethod"
    description: "A Tokenized Card method of payment."
  DigitalWallet:
    allOf:
    - $ref: "#/definitions/PaymentMethod"
    description: "A digital wallet method of payment."
  Check:
    allOf:
    - $ref: "#/definitions/PaymentMethod"
    description: "A check method of payment."
  Cash:
    allOf:
    - $ref: "#/definitions/PaymentMethod"
    description: "A cash method of payment. It has no additional data, but it could\
      \ be extended to add information e.g.: the cashier who took the payment, the\
      \ person who paid, etc"
  BankCard:
    allOf:
    - $ref: "#/definitions/PaymentMethod"
    description: "A bank card method of payment."
  BankAccountTransfer:
    allOf:
    - $ref: "#/definitions/PaymentMethod"
    description: "A bank transfer method of payment."
  BankAccountDebit:
    allOf:
    - $ref: "#/definitions/PaymentMethod"
    description: "A bank account debit method of payment. This could be extended to\
      \ add any required authorization fields to allow recurring payments"
  Quantity:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "float"
        description: "Numeric value in a given unit"
        default: 1.0
      units:
        type: "string"
        description: "Unit"
    description: "An amount in a given unit"
  Error:
    type: "object"
    required:
    - "code"
    - "reason"
    properties:
      code:
        type: "string"
        description: "Application relevant detail, defined in the API or a common\
          \ list."
      reason:
        type: "string"
        description: "Explanation of the reason for the error which can be shown to\
          \ a client user."
      message:
        type: "string"
        description: "More details and corrective actions related to the error which\
          \ can be shown to a client user."
      status:
        type: "string"
        description: "HTTP Error code extension"
      referenceError:
        type: "string"
        format: "uri"
        description: "URI of documentation describing the error."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class."
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name."
    description: "Used when an API throws an Error, typically with a HTTP error response-code\
      \ (3xx, 4xx, 5xx)"
