---
swagger: "2.0"
info:
  description: "**TMF API Reference : TMF - 724 Incident**\n\n**Release : 22.5 - November\
    \ 2022**\n\nThe Incident API provides a standardized client interface to Incident\
    \ Management Systems for creating, tracking and managing Incidents as a result\
    \ of an issue or problem identified by a customer or another system. \nExamples\
    \ of Incident API originators (clients) include CRM applications, network management\
    \ or fault management systems, or other Incident management systems (e.g. B2B).\n\
    \nThe API supports the ability to send requests to create a new Incident specifying\
    \ the nature and severity of the trouble or issue as well as all necessary related\
    \ information. The API also includes mechanisms to search for and update existing\
    \ Incidents. Notifications are defined to provide information when a Incident\
    \ has been updated, including status changes. A basic set of states of a Incident\
    \ has been specified (as an example) to handle Incident lifecycle management.\n\
    Incident API manages Incident resource:\n\n  -\tA Incident represents a record,\
    \ or an issue raised by requestor that need to be solved, used for reporting and\
    \ managing the resolution of problems, incidents or request -\tThe main Incident\
    \ attributes are its name, priority, type,  dateTime attributes (occurTime, expected\
    \ resolution, resolution), state and related information (change reason and change\
    \ date), related parties (originator, owner, reviser, etc.), related entities\
    \ (product, product order, customer bill) and notes Incident API performs the\
    \ following operations on Incident -\tRetrieval of an Incident or a collection\
    \ of Incident depending on filter criteria -\tPartial update of a Incident -\t\
    Creation of an Incident -\tNotification of events on Incident: o\tIncident state\
    \ change o\tIncident change o\tIncident resolved o\tIncident created o\tIncident\
    \ Information required\n\n\n\nCopyright Â© TM Forum 2022. All Rights Reserved\n\
    \n\n"
  version: "4.0.1"
  title: "Incident"
host: "localhost:8080"
basePath: "/tmf-api/Incident/v4/"
tags:
- name: "incident"
- name: "diagnoseIncident"
- name: "resolveIncident"
- name: "notification listeners (client side)"
- name: "events subscription"
schemes:
- "http"
consumes:
- "application/json;charset=utf-8"
produces:
- "application/json;charset=utf-8"
paths:
  /incident:
    get:
      tags:
      - "incident"
      summary: "List or find Incident objects"
      description: "This operation list or find Incident entities"
      operationId: "listIncident"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Incident"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Incident"
    post:
      tags:
      - "incident"
      summary: "Creates a Incident"
      description: "This operation creates a Incident entity."
      operationId: "createIncident"
      parameters:
      - in: "body"
        name: "incident"
        description: "The Incident to be created"
        required: true
        schema:
          $ref: "#/definitions/Incident_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Incident"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Incident"
  /incident/{id}:
    get:
      tags:
      - "incident"
      summary: "Retrieves a Incident by ID"
      description: "This operation retrieves a Incident entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveIncident"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Incident"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Incident"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Incident"
  /diagnoseIncident:
    get:
      tags:
      - "diagnoseIncident"
      summary: "List or find DiagnoseIncident objects"
      description: "This operation list or find DiagnoseIncident entities"
      operationId: "listDiagnoseIncident"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DiagnoseIncident"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DiagnoseIncident"
    post:
      tags:
      - "diagnoseIncident"
      summary: "Creates a DiagnoseIncident"
      description: "This operation creates a DiagnoseIncident entity."
      operationId: "createDiagnoseIncident"
      parameters:
      - in: "body"
        name: "diagnoseIncident"
        description: "The DiagnoseIncident to be created"
        required: true
        schema:
          $ref: "#/definitions/DiagnoseIncident_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/DiagnoseIncident"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DiagnoseIncident"
  /diagnoseIncident/{id}:
    get:
      tags:
      - "diagnoseIncident"
      summary: "Retrieves a DiagnoseIncident by ID"
      description: "This operation retrieves a DiagnoseIncident entity. Attribute\
        \ selection is enabled for all first level attributes."
      operationId: "retrieveDiagnoseIncident"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the DiagnoseIncident"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/DiagnoseIncident"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "DiagnoseIncident"
  /resolveIncident:
    get:
      tags:
      - "resolveIncident"
      summary: "List or find ResolveIncident objects"
      description: "This operation list or find ResolveIncident entities"
      operationId: "listResolveIncident"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ResolveIncident"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ResolveIncident"
    post:
      tags:
      - "resolveIncident"
      summary: "Creates a ResolveIncident"
      description: "This operation creates a ResolveIncident entity."
      operationId: "createResolveIncident"
      parameters:
      - in: "body"
        name: "resolveIncident"
        description: "The ResolveIncident to be created"
        required: true
        schema:
          $ref: "#/definitions/ResolveIncident_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ResolveIncident"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ResolveIncident"
  /resolveIncident/{id}:
    get:
      tags:
      - "resolveIncident"
      summary: "Retrieves a ResolveIncident by ID"
      description: "This operation retrieves a ResolveIncident entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveResolveIncident"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ResolveIncident"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ResolveIncident"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ResolveIncident"
  /hub:
    post:
      tags:
      - "events subscription"
      summary: "Register a listener"
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
      operationId: "registerListener"
      parameters:
      - in: "body"
        name: "data"
        description: "Data containing the callback endpoint to deliver the information"
        required: true
        schema:
          $ref: "#/definitions/EventSubscriptionInput"
      responses:
        201:
          description: "Subscribed"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /hub/{id}:
    delete:
      tags:
      - "events subscription"
      summary: "Unregister a listener"
      description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
      operationId: "unregisterListener"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the registered listener"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /listener/incidentCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity IncidentCreateEvent"
      description: "Example of a client listener for receiving the notification IncidentCreateEvent"
      operationId: "listenToIncidentCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/IncidentCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/incidentStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity IncidentStateChangeEvent"
      description: "Example of a client listener for receiving the notification IncidentStateChangeEvent"
      operationId: "listenToIncidentStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/IncidentStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/diagnoseIncidentCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity DiagnoseIncidentCreateEvent"
      description: "Example of a client listener for receiving the notification DiagnoseIncidentCreateEvent"
      operationId: "listenToDiagnoseIncidentCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/DiagnoseIncidentCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/diagnoseIncidentStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity DiagnoseIncidentStateChangeEvent"
      description: "Example of a client listener for receiving the notification DiagnoseIncidentStateChangeEvent"
      operationId: "listenToDiagnoseIncidentStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/DiagnoseIncidentStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/resolveIncidentCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ResolveIncidentCreateEvent"
      description: "Example of a client listener for receiving the notification ResolveIncidentCreateEvent"
      operationId: "listenToResolveIncidentCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ResolveIncidentCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/resolveIncidentStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity ResolveIncidentStateChangeEvent"
      description: "Example of a client listener for receiving the notification ResolveIncidentStateChangeEvent"
      operationId: "listenToResolveIncidentStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/ResolveIncidentStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
definitions:
  Addressable:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
    description: "Base schema for adressable entities"
  Any: {}
  Characteristic:
    type: "object"
    required:
    - "name"
    - "value"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the characteristic"
      name:
        type: "string"
        description: "Name of the characteristic"
      valueType:
        type: "string"
        description: "Data type of the value of the characteristic"
      characteristicRelationship:
        type: "array"
        items:
          $ref: "#/definitions/CharacteristicRelationship"
      value:
        description: "The value of the characteristic"
        $ref: "#/definitions/Any"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Describes a given characteristic of an object or entity through\
      \ a name/value pair."
    example:
      characteristicRelationship:
      - relationshipType: "relationshipType"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - relationshipType: "relationshipType"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      '@type': "@type"
      valueType: "valueType"
      name: "name"
      id: "id"
      '@schemaLocation': "http://example.com/aeiou"
      value: {}
  CharacteristicRelationship:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique identifier of the characteristic"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      relationshipType:
        type: "string"
        description: "The type of relationship"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Another Characteristic that is related to the current Characteristic."
    example:
      relationshipType: "relationshipType"
      '@baseType': "@baseType"
      '@type': "@type"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  DiagnoseIncident:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Reference of the diagnose incident task"
      errorLog:
        type: "string"
        description: "Reason for failure"
      incident:
        $ref: "#/definitions/IncidentRef"
      state:
        $ref: "#/definitions/TaskStateType"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "A stage in the incident lifecycle. The purpose of diagnosis is to\
      \ identify a workaround for an incident (ITIL Service Operation). \nDiagnosing\
      \ Incidents by Incident SN"
    example:
      '@baseType': "@baseType"
      '@type': "@type"
      errorLog: "errorLog"
      id: "id"
      href: "http://example.com/aeiou"
      state: {}
      '@schemaLocation': "http://example.com/aeiou"
      incident:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  DiagnoseIncident_Create:
    type: "object"
    required:
    - "incident"
    properties:
      errorLog:
        type: "string"
        description: "Reason for failure"
      incident:
        $ref: "#/definitions/IncidentRef"
      state:
        $ref: "#/definitions/TaskStateType"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "A stage in the incident lifecycle. The purpose of diagnosis is to\
      \ identify a workaround for an incident (ITIL Service Operation). \nDiagnosing\
      \ Incidents by Incident SN\nSkipped properties: id,href"
    example:
      '@baseType': "@baseType"
      '@type': "@type"
      errorLog: "errorLog"
      state: {}
      '@schemaLocation': "http://example.com/aeiou"
      incident:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  Entity:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Base entity schema for use in TMForum Open-APIs"
  EntityRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Entity reference schema to be use for all entityRef class."
  Extensible:
    type: "object"
    properties:
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Base Extensible schema for use in TMForum Open-APIs"
  ExternalIdentifier:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        example: "MC2255771199555"
        description: "identification of the entity within the external system."
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      externalIdentifierType:
        type: "string"
        example: "ProductOrder"
        description: "Type of the identification, typically would be the type of the\
          \ entity within the external system"
      owner:
        type: "string"
        example: "MagentoCommerce"
        description: "Name of the external system that owns the entity."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An identification of an entity that is owned by or originates in\
      \ a software system different from the current system, for example a ProductOrder\
      \ handed off from a commerce platform into an order handling system. The structure\
      \ identifies the system itself, the nature of the entity within the system (e.g.\
      \ class name) and the unique ID of the entity within the system. It is anticipated\
      \ that multiple external IDs can be held for a single entity, e.g. if the entity\
      \ passed through multiple systems on the way to the current system. In this\
      \ case the consumer is expected to sequence the IDs in the array in reverse\
      \ order of provenance, i.e. most recent system first in the list."
    example:
      owner: "MagentoCommerce"
      externalIdentifierType: "ProductOrder"
      '@baseType': "@baseType"
      '@type': "@type"
      id: "MC2255771199555"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  ImpactType:
    type: "string"
    description: "Possible values for the impact of an Incident"
    enum:
    - "extensive"
    - "significant"
    - "moderate"
    - "minor"
  Incident:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        description: "Hyperlink, a reference to the incident entity"
      ackTime:
        type: "string"
        format: "date-time"
        example: "2022-03-10T04:01:12Z"
        description: "The ackTime or acknowledgeTime of the incident. An acknowledged\
          \ incident is being worked on, but is not yet resolved"
      category:
        type: "string"
        example: "BTS Software Fault"
        description: "The category of the incident  (category is the term used by\
          \ ITU) "
      clearTime:
        type: "string"
        format: "date-time"
        example: "2022-03-10T04:01:12Z"
        description: "The clear time of the incident"
      domain:
        type: "string"
        description: "The domain of the incident, for example RAN, PON, OTN, Cross-Domain\
          \ etc"
      incidentDetail:
        type: "string"
        description: "A textual succinct description of the nature, symptoms, cause,\
          \ or effect of the incident."
      incidentResolutionSuggestion:
        type: "string"
        description: "Incident resolution suggestion or tip to resolve the incident"
      name:
        type: "string"
        description: "The name of the incident. A short-form string that provides\
          \ succinct, important information about the incident"
      occurTime:
        type: "string"
        format: "date-time"
        example: "2022-03-10T04:01:12Z"
        description: "Indicates the time (as a date + time) at which the incident\
          \ occurred at its source"
      updateTime:
        type: "string"
        example: "2022-03-10T04:01:12Z"
        description: "The last update time  of the incident"
      ackState:
        description: "Provides the Acknowledgement State of the incident (unacknowledged\
          \ | acknowledged)."
        $ref: "#/definitions/IncidentAckStateType"
      affectedEntity:
        type: "array"
        example: "e.g  a ref to a service or resource"
        description: "List of affected entities "
        items:
          $ref: "#/definitions/EntityRef"
      eventId:
        type: "array"
        description: "The correlation event object such as alarm, externalAlarm, performance,\
          \ etc."
        items:
          $ref: "#/definitions/ResourceEntity"
      extensionInfo:
        type: "array"
        description: "This is used for extend the incident with attributes"
        items:
          $ref: "#/definitions/Characteristic"
      externalIdentifier:
        type: "array"
        description: "An identification of an entity that is owned by or originates\
          \ in a software system different from the current system, for example a\
          \ ProductOrder handed off from a commerce platform into an order handling\
          \ system. The structure identifies the system itself, the nature of the\
          \ entity within the system (e.g. class name) and the unique ID of the entity\
          \ within the system. It is anticipated that multiple external IDs can be\
          \ held for a single entity, e.g. if the entity passed through multiple systems\
          \ on the way to the current system. In this case the consumer is expected\
          \ to sequence the IDs in the array in reverse order of provenance, i.e.\
          \ most recent system first in the list."
        items:
          $ref: "#/definitions/ExternalIdentifier"
      impact:
        description: "Impact which indicates the degree of impact on affected services\
          \ or users. This field is optional. The options are extensive, significant,\
          \ moderate, and minor"
        $ref: "#/definitions/ImpactType"
      priority:
        description: "The priority  of the incident, priority  critical/high/medium/low"
        $ref: "#/definitions/PriorityType"
      rootCause:
        type: "array"
        description: "A root cause is a fundamental or underlying reason behind why\
          \ an incident occurred that identifies one or more failures. An incident\
          \ many have multiple rootCauses"
        items:
          $ref: "#/definitions/RootCause"
      rootEventId:
        type: "array"
        description: "The root event object such as alarm, externalAlarm, performance,\
          \ etc."
        items:
          $ref: "#/definitions/ResourceEntity"
      sourceObject:
        type: "array"
        example: "e.g. weak optical signals, the fault object is a PON port, the root\
          \ cause is an optical splitter, and the affected object is an ONU"
        description: "The objects show the incident, it may be part of Network Equipment.\
          \ Fault object, which may be an NE or a port."
        items:
          $ref: "#/definitions/ResourceEntity"
      state:
        description: "Incident state. The options are raised | updated | cleared.\
          \ Cleared means Resolved)"
        $ref: "#/definitions/IncidentStateType"
      urgency:
        description: "Urgency is the speed required for resolving the service issues.\
          \ A measure of how long it will be until an incident has a significant impact\
          \ on the business. This field is optional. The options are critical, high,\
          \ medium, and low"
        $ref: "#/definitions/UrgencyType"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An Incident is a record of an event that has altered the operational\
      \ state of a entity (Resource, Service or Customers Product). An incident represents\
      \ an issue that needs to be diagnosed and resolved."
    example:
      ackTime: "2022-03-10T04:01:12Z"
      rootEventId:
      - '@baseType': "@baseType"
        '@type': "@type"
        id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
        href: "http://myservice.com/resource-path"
        '@schemaLocation': "http://example.com/aeiou"
      - '@baseType': "@baseType"
        '@type': "@type"
        id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
        href: "http://myservice.com/resource-path"
        '@schemaLocation': "http://example.com/aeiou"
      clearTime: "2022-03-10T04:01:12Z"
      affectedEntity: "e.g  a ref to a service or resource"
      '@type': "@type"
      occurTime: "2022-03-10T04:01:12Z"
      incidentDetail: "incidentDetail"
      '@baseType': "@baseType"
      urgency: {}
      rootCause:
      - '@baseType': "@baseType"
        '@type': "@type"
        location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - '@baseType': "@baseType"
        '@type': "@type"
        location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      externalIdentifier:
      - owner: "MagentoCommerce"
        externalIdentifierType: "ProductOrder"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "MC2255771199555"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - owner: "MagentoCommerce"
        externalIdentifierType: "ProductOrder"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "MC2255771199555"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      id: "id"
      href: "href"
      state: {}
      '@schemaLocation': "http://example.com/aeiou"
      eventId:
      - '@baseType': "@baseType"
        '@type': "@type"
        id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
        href: "http://myservice.com/resource-path"
        '@schemaLocation': "http://example.com/aeiou"
      - '@baseType': "@baseType"
        '@type': "@type"
        id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
        href: "http://myservice.com/resource-path"
        '@schemaLocation': "http://example.com/aeiou"
      extensionInfo:
      - characteristicRelationship:
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        valueType: "valueType"
        name: "name"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
        value: {}
      - characteristicRelationship:
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        valueType: "valueType"
        name: "name"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
        value: {}
      impact: {}
      updateTime: "2022-03-10T04:01:12Z"
      sourceObject: "e.g. weak optical signals, the fault object is a PON port, the\
        \ root cause is an optical splitter, and the affected object is an ONU"
      priority: {}
      incidentResolutionSuggestion: "incidentResolutionSuggestion"
      ackState: {}
      domain: "domain"
      name: "name"
      category: "BTS Software Fault"
  Incident_Create:
    type: "object"
    required:
    - "ackState"
    - "category"
    - "domain"
    - "name"
    - "occurTime"
    - "priority"
    - "sourceObject"
    - "state"
    properties:
      ackTime:
        type: "string"
        format: "date-time"
        example: "2022-03-10T04:01:12Z"
        description: "The ackTime or acknowledgeTime of the incident. An acknowledged\
          \ incident is being worked on, but is not yet resolved"
      category:
        type: "string"
        example: "BTS Software Fault"
        description: "The category of the incident  (category is the term used by\
          \ ITU) "
      clearTime:
        type: "string"
        format: "date-time"
        example: "2022-03-10T04:01:12Z"
        description: "The clear time of the incident"
      domain:
        type: "string"
        description: "The domain of the incident, for example RAN, PON, OTN, Cross-Domain\
          \ etc"
      incidentDetail:
        type: "string"
        description: "A textual succinct description of the nature, symptoms, cause,\
          \ or effect of the incident."
      incidentResolutionSuggestion:
        type: "string"
        description: "Incident resolution suggestion or tip to resolve the incident"
      name:
        type: "string"
        description: "The name of the incident. A short-form string that provides\
          \ succinct, important information about the incident"
      occurTime:
        type: "string"
        format: "date-time"
        example: "2022-03-10T04:01:12Z"
        description: "Indicates the time (as a date + time) at which the incident\
          \ occurred at its source"
      updateTime:
        type: "string"
        example: "2022-03-10T04:01:12Z"
        description: "The last update time  of the incident"
      ackState:
        description: "Provides the Acknowledgement State of the incident (unacknowledged\
          \ | acknowledged)."
        $ref: "#/definitions/IncidentAckStateType"
      affectedEntity:
        type: "array"
        example: "e.g  a ref to a service or resource"
        description: "List of affected entities "
        items:
          $ref: "#/definitions/EntityRef"
      eventId:
        type: "array"
        description: "The correlation event object such as alarm, externalAlarm, performance,\
          \ etc."
        items:
          $ref: "#/definitions/ResourceEntity"
      extensionInfo:
        type: "array"
        description: "This is used for extend the incident with attributes"
        items:
          $ref: "#/definitions/Characteristic"
      externalIdentifier:
        type: "array"
        description: "An identification of an entity that is owned by or originates\
          \ in a software system different from the current system, for example a\
          \ ProductOrder handed off from a commerce platform into an order handling\
          \ system. The structure identifies the system itself, the nature of the\
          \ entity within the system (e.g. class name) and the unique ID of the entity\
          \ within the system. It is anticipated that multiple external IDs can be\
          \ held for a single entity, e.g. if the entity passed through multiple systems\
          \ on the way to the current system. In this case the consumer is expected\
          \ to sequence the IDs in the array in reverse order of provenance, i.e.\
          \ most recent system first in the list."
        items:
          $ref: "#/definitions/ExternalIdentifier"
      impact:
        description: "Impact which indicates the degree of impact on affected services\
          \ or users. This field is optional. The options are extensive, significant,\
          \ moderate, and minor"
        $ref: "#/definitions/ImpactType"
      priority:
        description: "The priority  of the incident, priority  critical/high/medium/low"
        $ref: "#/definitions/PriorityType"
      rootCause:
        type: "array"
        description: "A root cause is a fundamental or underlying reason behind why\
          \ an incident occurred that identifies one or more failures. An incident\
          \ many have multiple rootCauses"
        items:
          $ref: "#/definitions/RootCause"
      rootEventId:
        type: "array"
        description: "The root event object such as alarm, externalAlarm, performance,\
          \ etc."
        items:
          $ref: "#/definitions/ResourceEntity"
      sourceObject:
        type: "array"
        example: "e.g. weak optical signals, the fault object is a PON port, the root\
          \ cause is an optical splitter, and the affected object is an ONU"
        description: "The objects show the incident, it may be part of Network Equipment.\
          \ Fault object, which may be an NE or a port."
        items:
          $ref: "#/definitions/ResourceEntity"
        minItems: 1
      state:
        description: "Incident state. The options are raised | updated | cleared.\
          \ Cleared means Resolved)"
        $ref: "#/definitions/IncidentStateType"
      urgency:
        description: "Urgency is the speed required for resolving the service issues.\
          \ A measure of how long it will be until an incident has a significant impact\
          \ on the business. This field is optional. The options are critical, high,\
          \ medium, and low"
        $ref: "#/definitions/UrgencyType"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An Incident is a record of an event that has altered the operational\
      \ state of a entity (Resource, Service or Customers Product). An incident represents\
      \ an issue that needs to be diagnosed and resolved.\nSkipped properties: id,href,lifecycleStatus,creationDate,statusChangeDate"
    example:
      ackTime: "2022-03-10T04:01:12Z"
      eventId:
      - '@baseType': "@baseType"
        '@type': "@type"
        id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
        href: "http://myservice.com/resource-path"
        '@schemaLocation': "http://example.com/aeiou"
      - '@baseType': "@baseType"
        '@type': "@type"
        id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
        href: "http://myservice.com/resource-path"
        '@schemaLocation': "http://example.com/aeiou"
      rootEventId:
      - '@baseType': "@baseType"
        '@type': "@type"
        id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
        href: "http://myservice.com/resource-path"
        '@schemaLocation': "http://example.com/aeiou"
      - '@baseType': "@baseType"
        '@type': "@type"
        id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
        href: "http://myservice.com/resource-path"
        '@schemaLocation': "http://example.com/aeiou"
      extensionInfo:
      - characteristicRelationship:
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        valueType: "valueType"
        name: "name"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
        value: {}
      - characteristicRelationship:
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        '@type': "@type"
        valueType: "valueType"
        name: "name"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
        value: {}
      clearTime: "2022-03-10T04:01:12Z"
      affectedEntity: "e.g  a ref to a service or resource"
      '@type': "@type"
      occurTime: "2022-03-10T04:01:12Z"
      impact: {}
      updateTime: "2022-03-10T04:01:12Z"
      sourceObject: "e.g. weak optical signals, the fault object is a PON port, the\
        \ root cause is an optical splitter, and the affected object is an ONU"
      priority: {}
      incidentResolutionSuggestion: "incidentResolutionSuggestion"
      ackState: {}
      incidentDetail: "incidentDetail"
      '@baseType': "@baseType"
      urgency: {}
      domain: "domain"
      name: "name"
      rootCause:
      - '@baseType': "@baseType"
        '@type': "@type"
        location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - '@baseType': "@baseType"
        '@type': "@type"
        location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      externalIdentifier:
      - owner: "MagentoCommerce"
        externalIdentifierType: "ProductOrder"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "MC2255771199555"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - owner: "MagentoCommerce"
        externalIdentifierType: "ProductOrder"
        '@baseType': "@baseType"
        '@type': "@type"
        id: "MC2255771199555"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      state: {}
      category: "BTS Software Fault"
      '@schemaLocation': "http://example.com/aeiou"
  IncidentAckStateType:
    type: "string"
    description: "Possible values for the ack state of an Incident"
    enum:
    - "acknowledged"
    - "unacknowledged"
  IncidentRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related incident"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Incident reference."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  IncidentStateType:
    type: "string"
    description: "Possible values for the state of an Incident"
    enum:
    - "raised"
    - "updated"
    - "cleared"
  PriorityType:
    type: "string"
    description: "Possible values for the Priority of an Incident"
    enum:
    - "critical"
    - "high"
    - "medium"
    - "low"
  ResolveIncident:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the  incident to resolve"
      href:
        type: "string"
        format: "uri"
        description: "Reference of the resolve incident task"
      clearTime:
        type: "string"
        description: "The clear time  of the incident, for example 2020-03-10T04:01:12Z"
      errorLog:
        type: "string"
        description: "Reason for failure"
      incident:
        $ref: "#/definitions/IncidentRef"
      state:
        $ref: "#/definitions/TaskStateType"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An incident resolution is an action taken to resolve/repair the\
      \ root cause of an incident or problem, or to implement a workaround"
    example:
      '@baseType': "@baseType"
      clearTime: "clearTime"
      '@type': "@type"
      errorLog: "errorLog"
      id: "id"
      href: "http://example.com/aeiou"
      state: {}
      '@schemaLocation': "http://example.com/aeiou"
      incident:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ResolveIncident_Create:
    type: "object"
    required:
    - "incident"
    properties:
      clearTime:
        type: "string"
        description: "The clear time  of the incident, for example 2020-03-10T04:01:12Z"
      errorLog:
        type: "string"
        description: "Reason for failure"
      incident:
        $ref: "#/definitions/IncidentRef"
      state:
        $ref: "#/definitions/TaskStateType"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An incident resolution is an action taken to resolve/repair the\
      \ root cause of an incident or problem, or to implement a workaround\nSkipped\
      \ properties: id,href"
    example:
      '@baseType': "@baseType"
      clearTime: "clearTime"
      '@type': "@type"
      errorLog: "errorLog"
      state: {}
      '@schemaLocation': "http://example.com/aeiou"
      incident:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  ResourceEntity:
    type: "object"
    properties:
      id:
        type: "string"
        example: "aac9969d-219d-4ff1-b256-1765dcf9b342"
        description: "ID created by the implementing service"
      href:
        type: "string"
        example: "http://myservice.com/resource-path"
        description: "Hyperlink to access the test resource"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Base schema for REST Resources"
    example:
      '@baseType': "@baseType"
      '@type': "@type"
      id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
      href: "http://myservice.com/resource-path"
      '@schemaLocation': "http://example.com/aeiou"
  RootCause:
    type: "object"
    required:
    - "location"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      location:
        type: "string"
        example: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "The name of RootCause, for example:Power Down"
    example:
      '@baseType': "@baseType"
      '@type': "@type"
      location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  TaskStateType:
    type: "string"
    description: "Possible values for the state of a task"
    enum:
    - "accepted"
    - "terminatedWithError"
    - "inProgress"
    - "done"
  UrgencyType:
    type: "string"
    description: "Possible values for the urgency of an Incident"
    enum:
    - "critical"
    - "high"
    - "medium"
    - "low"
  EventSubscription:
    type: "object"
    required:
    - "callback"
    - "id"
    properties:
      id:
        type: "string"
        description: "Id of the listener"
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
      id: "id"
  EventSubscriptionInput:
    type: "object"
    required:
    - "callback"
    properties:
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
  IncidentCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/IncidentCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        incident:
          ackTime: "2022-03-10T04:01:12Z"
          rootEventId:
          - '@baseType': "@baseType"
            '@type': "@type"
            id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
            href: "http://myservice.com/resource-path"
            '@schemaLocation': "http://example.com/aeiou"
          - '@baseType': "@baseType"
            '@type': "@type"
            id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
            href: "http://myservice.com/resource-path"
            '@schemaLocation': "http://example.com/aeiou"
          clearTime: "2022-03-10T04:01:12Z"
          affectedEntity: "e.g  a ref to a service or resource"
          '@type': "@type"
          occurTime: "2022-03-10T04:01:12Z"
          incidentDetail: "incidentDetail"
          '@baseType': "@baseType"
          urgency: {}
          rootCause:
          - '@baseType': "@baseType"
            '@type': "@type"
            location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@baseType': "@baseType"
            '@type': "@type"
            location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          externalIdentifier:
          - owner: "MagentoCommerce"
            externalIdentifierType: "ProductOrder"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "MC2255771199555"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - owner: "MagentoCommerce"
            externalIdentifierType: "ProductOrder"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "MC2255771199555"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          id: "id"
          href: "href"
          state: {}
          '@schemaLocation': "http://example.com/aeiou"
          eventId:
          - '@baseType': "@baseType"
            '@type': "@type"
            id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
            href: "http://myservice.com/resource-path"
            '@schemaLocation': "http://example.com/aeiou"
          - '@baseType': "@baseType"
            '@type': "@type"
            id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
            href: "http://myservice.com/resource-path"
            '@schemaLocation': "http://example.com/aeiou"
          extensionInfo:
          - characteristicRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            valueType: "valueType"
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
          - characteristicRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            valueType: "valueType"
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
          impact: {}
          updateTime: "2022-03-10T04:01:12Z"
          sourceObject: "e.g. weak optical signals, the fault object is a PON port,\
            \ the root cause is an optical splitter, and the affected object is an\
            \ ONU"
          priority: {}
          incidentResolutionSuggestion: "incidentResolutionSuggestion"
          ackState: {}
          domain: "domain"
          name: "name"
          category: "BTS Software Fault"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  IncidentCreateEventPayload:
    type: "object"
    properties:
      incident:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Incident"
    description: "The event data structure"
    example:
      incident:
        ackTime: "2022-03-10T04:01:12Z"
        rootEventId:
        - '@baseType': "@baseType"
          '@type': "@type"
          id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
          href: "http://myservice.com/resource-path"
          '@schemaLocation': "http://example.com/aeiou"
        - '@baseType': "@baseType"
          '@type': "@type"
          id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
          href: "http://myservice.com/resource-path"
          '@schemaLocation': "http://example.com/aeiou"
        clearTime: "2022-03-10T04:01:12Z"
        affectedEntity: "e.g  a ref to a service or resource"
        '@type': "@type"
        occurTime: "2022-03-10T04:01:12Z"
        incidentDetail: "incidentDetail"
        '@baseType': "@baseType"
        urgency: {}
        rootCause:
        - '@baseType': "@baseType"
          '@type': "@type"
          location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@baseType': "@baseType"
          '@type': "@type"
          location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        externalIdentifier:
        - owner: "MagentoCommerce"
          externalIdentifierType: "ProductOrder"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "MC2255771199555"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - owner: "MagentoCommerce"
          externalIdentifierType: "ProductOrder"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "MC2255771199555"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        id: "id"
        href: "href"
        state: {}
        '@schemaLocation': "http://example.com/aeiou"
        eventId:
        - '@baseType': "@baseType"
          '@type': "@type"
          id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
          href: "http://myservice.com/resource-path"
          '@schemaLocation': "http://example.com/aeiou"
        - '@baseType': "@baseType"
          '@type': "@type"
          id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
          href: "http://myservice.com/resource-path"
          '@schemaLocation': "http://example.com/aeiou"
        extensionInfo:
        - characteristicRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          valueType: "valueType"
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
        - characteristicRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          valueType: "valueType"
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
        impact: {}
        updateTime: "2022-03-10T04:01:12Z"
        sourceObject: "e.g. weak optical signals, the fault object is a PON port,\
          \ the root cause is an optical splitter, and the affected object is an ONU"
        priority: {}
        incidentResolutionSuggestion: "incidentResolutionSuggestion"
        ackState: {}
        domain: "domain"
        name: "name"
        category: "BTS Software Fault"
  IncidentStateChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/IncidentStateChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        incident:
          ackTime: "2022-03-10T04:01:12Z"
          rootEventId:
          - '@baseType': "@baseType"
            '@type': "@type"
            id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
            href: "http://myservice.com/resource-path"
            '@schemaLocation': "http://example.com/aeiou"
          - '@baseType': "@baseType"
            '@type': "@type"
            id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
            href: "http://myservice.com/resource-path"
            '@schemaLocation': "http://example.com/aeiou"
          clearTime: "2022-03-10T04:01:12Z"
          affectedEntity: "e.g  a ref to a service or resource"
          '@type': "@type"
          occurTime: "2022-03-10T04:01:12Z"
          incidentDetail: "incidentDetail"
          '@baseType': "@baseType"
          urgency: {}
          rootCause:
          - '@baseType': "@baseType"
            '@type': "@type"
            location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@baseType': "@baseType"
            '@type': "@type"
            location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          externalIdentifier:
          - owner: "MagentoCommerce"
            externalIdentifierType: "ProductOrder"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "MC2255771199555"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - owner: "MagentoCommerce"
            externalIdentifierType: "ProductOrder"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "MC2255771199555"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          id: "id"
          href: "href"
          state: {}
          '@schemaLocation': "http://example.com/aeiou"
          eventId:
          - '@baseType': "@baseType"
            '@type': "@type"
            id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
            href: "http://myservice.com/resource-path"
            '@schemaLocation': "http://example.com/aeiou"
          - '@baseType': "@baseType"
            '@type': "@type"
            id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
            href: "http://myservice.com/resource-path"
            '@schemaLocation': "http://example.com/aeiou"
          extensionInfo:
          - characteristicRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            valueType: "valueType"
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
          - characteristicRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              '@type': "@type"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@baseType': "@baseType"
            '@type': "@type"
            valueType: "valueType"
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
          impact: {}
          updateTime: "2022-03-10T04:01:12Z"
          sourceObject: "e.g. weak optical signals, the fault object is a PON port,\
            \ the root cause is an optical splitter, and the affected object is an\
            \ ONU"
          priority: {}
          incidentResolutionSuggestion: "incidentResolutionSuggestion"
          ackState: {}
          domain: "domain"
          name: "name"
          category: "BTS Software Fault"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  IncidentStateChangeEventPayload:
    type: "object"
    properties:
      incident:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Incident"
    description: "The event data structure"
    example:
      incident:
        ackTime: "2022-03-10T04:01:12Z"
        rootEventId:
        - '@baseType': "@baseType"
          '@type': "@type"
          id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
          href: "http://myservice.com/resource-path"
          '@schemaLocation': "http://example.com/aeiou"
        - '@baseType': "@baseType"
          '@type': "@type"
          id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
          href: "http://myservice.com/resource-path"
          '@schemaLocation': "http://example.com/aeiou"
        clearTime: "2022-03-10T04:01:12Z"
        affectedEntity: "e.g  a ref to a service or resource"
        '@type': "@type"
        occurTime: "2022-03-10T04:01:12Z"
        incidentDetail: "incidentDetail"
        '@baseType': "@baseType"
        urgency: {}
        rootCause:
        - '@baseType': "@baseType"
          '@type': "@type"
          location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@baseType': "@baseType"
          '@type': "@type"
          location: "Ne Name=cc_lte1, Cabinet No.=0, Subrack No.=0, Slot No.=0"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        externalIdentifier:
        - owner: "MagentoCommerce"
          externalIdentifierType: "ProductOrder"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "MC2255771199555"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - owner: "MagentoCommerce"
          externalIdentifierType: "ProductOrder"
          '@baseType': "@baseType"
          '@type': "@type"
          id: "MC2255771199555"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        id: "id"
        href: "href"
        state: {}
        '@schemaLocation': "http://example.com/aeiou"
        eventId:
        - '@baseType': "@baseType"
          '@type': "@type"
          id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
          href: "http://myservice.com/resource-path"
          '@schemaLocation': "http://example.com/aeiou"
        - '@baseType': "@baseType"
          '@type': "@type"
          id: "aac9969d-219d-4ff1-b256-1765dcf9b342"
          href: "http://myservice.com/resource-path"
          '@schemaLocation': "http://example.com/aeiou"
        extensionInfo:
        - characteristicRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          valueType: "valueType"
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
        - characteristicRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            '@type': "@type"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          '@type': "@type"
          valueType: "valueType"
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
        impact: {}
        updateTime: "2022-03-10T04:01:12Z"
        sourceObject: "e.g. weak optical signals, the fault object is a PON port,\
          \ the root cause is an optical splitter, and the affected object is an ONU"
        priority: {}
        incidentResolutionSuggestion: "incidentResolutionSuggestion"
        ackState: {}
        domain: "domain"
        name: "name"
        category: "BTS Software Fault"
  DiagnoseIncidentCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/DiagnoseIncidentCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        diagnoseIncident:
          '@baseType': "@baseType"
          '@type': "@type"
          errorLog: "errorLog"
          id: "id"
          href: "http://example.com/aeiou"
          state: {}
          '@schemaLocation': "http://example.com/aeiou"
          incident:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  DiagnoseIncidentCreateEventPayload:
    type: "object"
    properties:
      diagnoseIncident:
        description: "The involved resource data for the event"
        $ref: "#/definitions/DiagnoseIncident"
    description: "The event data structure"
    example:
      diagnoseIncident:
        '@baseType': "@baseType"
        '@type': "@type"
        errorLog: "errorLog"
        id: "id"
        href: "http://example.com/aeiou"
        state: {}
        '@schemaLocation': "http://example.com/aeiou"
        incident:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  DiagnoseIncidentStateChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/DiagnoseIncidentStateChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        diagnoseIncident:
          '@baseType': "@baseType"
          '@type': "@type"
          errorLog: "errorLog"
          id: "id"
          href: "http://example.com/aeiou"
          state: {}
          '@schemaLocation': "http://example.com/aeiou"
          incident:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  DiagnoseIncidentStateChangeEventPayload:
    type: "object"
    properties:
      diagnoseIncident:
        description: "The involved resource data for the event"
        $ref: "#/definitions/DiagnoseIncident"
    description: "The event data structure"
    example:
      diagnoseIncident:
        '@baseType': "@baseType"
        '@type': "@type"
        errorLog: "errorLog"
        id: "id"
        href: "http://example.com/aeiou"
        state: {}
        '@schemaLocation': "http://example.com/aeiou"
        incident:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ResolveIncidentCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/ResolveIncidentCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        resolveIncident:
          '@baseType': "@baseType"
          clearTime: "clearTime"
          '@type': "@type"
          errorLog: "errorLog"
          id: "id"
          href: "http://example.com/aeiou"
          state: {}
          '@schemaLocation': "http://example.com/aeiou"
          incident:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  ResolveIncidentCreateEventPayload:
    type: "object"
    properties:
      resolveIncident:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ResolveIncident"
    description: "The event data structure"
    example:
      resolveIncident:
        '@baseType': "@baseType"
        clearTime: "clearTime"
        '@type': "@type"
        errorLog: "errorLog"
        id: "id"
        href: "http://example.com/aeiou"
        state: {}
        '@schemaLocation': "http://example.com/aeiou"
        incident:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  ResolveIncidentStateChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/ResolveIncidentStateChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        resolveIncident:
          '@baseType': "@baseType"
          clearTime: "clearTime"
          '@type': "@type"
          errorLog: "errorLog"
          id: "id"
          href: "http://example.com/aeiou"
          state: {}
          '@schemaLocation': "http://example.com/aeiou"
          incident:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  ResolveIncidentStateChangeEventPayload:
    type: "object"
    properties:
      resolveIncident:
        description: "The involved resource data for the event"
        $ref: "#/definitions/ResolveIncident"
    description: "The event data structure"
    example:
      resolveIncident:
        '@baseType': "@baseType"
        clearTime: "clearTime"
        '@type': "@type"
        errorLog: "errorLog"
        id: "id"
        href: "http://example.com/aeiou"
        state: {}
        '@schemaLocation': "http://example.com/aeiou"
        incident:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
  Error:
    type: "object"
    required:
    - "code"
    - "reason"
    properties:
      code:
        type: "string"
        description: "Application relevant detail, defined in the API or a common\
          \ list."
      reason:
        type: "string"
        description: "Explanation of the reason for the error which can be shown to\
          \ a client user."
      message:
        type: "string"
        description: "More details and corrective actions related to the error which\
          \ can be shown to a client user."
      status:
        type: "string"
        description: "HTTP Error code extension"
      referenceError:
        type: "string"
        format: "uri"
        description: "URI of documentation describing the error."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class."
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name."
    description: "Used when an API throws an Error, typically with a HTTP error response-code\
      \ (3xx, 4xx, 5xx)"
