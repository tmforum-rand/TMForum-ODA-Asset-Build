---
swagger: "2.0"
info:
  description: "## TMF API Reference: TMF662 - Entity Catalog Management\n\n### Release\
    \ : V4.0 - Mar 2020\n\nEntity Catalog API is one of Catalog Management API Family.\
    \ Entity Catalog API goal is to provide a catalog of arbitrary entities, so that\
    \ there will be no need for specific catalogs in addition to product, service,\
    \ and resource. \n\n### Operations\nEntity Catalog API performs the following\
    \ operations on the resources :\n- Retrieve an entity or a collection of entities\
    \ depending on filter criteria\n- Partial update of an entity (including updating\
    \ rules)\n- Create an entity (including default values and creation rules)\n-\
    \ Delete an entity\n- Manage notification of events"
  version: "4.0.0"
  title: "Entity Catalog Management"
host: "serverRoot:8080"
basePath: "/tmf-api/entityCatalogManagement/v4/"
tags:
- name: "entityCatalog"
- name: "entityCategory"
- name: "entityCatalogItem"
- name: "entitySpecification"
- name: "associationSpecification"
- name: "association"
- name: "importJob"
- name: "exportJob"
- name: "notification listeners (client side)"
- name: "events subscription"
schemes:
- "https"
consumes:
- "application/json;charset=utf-8"
produces:
- "application/json;charset=utf-8"
paths:
  /entityCatalog:
    get:
      tags:
      - "entityCatalog"
      summary: "List or find EntityCatalog objects"
      description: "This operation list or find EntityCatalog entities"
      operationId: "listEntityCatalog"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntityCatalog"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCatalog"
    post:
      tags:
      - "entityCatalog"
      summary: "Creates a EntityCatalog"
      description: "This operation creates a EntityCatalog entity."
      operationId: "createEntityCatalog"
      parameters:
      - in: "body"
        name: "entityCatalog"
        description: "The EntityCatalog to be created"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalog_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/EntityCatalog"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCatalog"
  /entityCatalog/{id}:
    get:
      tags:
      - "entityCatalog"
      summary: "Retrieves a EntityCatalog by ID"
      description: "This operation retrieves a EntityCatalog entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveEntityCatalog"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntityCatalog"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/EntityCatalog"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCatalog"
    delete:
      tags:
      - "entityCatalog"
      summary: "Deletes a EntityCatalog"
      description: "This operation deletes a EntityCatalog entity."
      operationId: "deleteEntityCatalog"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntityCatalog"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCatalog"
    patch:
      tags:
      - "entityCatalog"
      summary: "Updates partially a EntityCatalog"
      description: "This operation updates partially a EntityCatalog entity."
      operationId: "patchEntityCatalog"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntityCatalog"
        required: true
        type: "string"
      - in: "body"
        name: "entityCatalog"
        description: "The EntityCatalog to be updated"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalog_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/EntityCatalog"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCatalog"
  /entityCategory:
    get:
      tags:
      - "entityCategory"
      summary: "List or find EntityCategory objects"
      description: "This operation list or find EntityCategory entities"
      operationId: "listEntityCategory"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntityCategory"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCategory"
    post:
      tags:
      - "entityCategory"
      summary: "Creates a EntityCategory"
      description: "This operation creates a EntityCategory entity."
      operationId: "createEntityCategory"
      parameters:
      - in: "body"
        name: "entityCategory"
        description: "The EntityCategory to be created"
        required: true
        schema:
          $ref: "#/definitions/EntityCategory_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/EntityCategory"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCategory"
  /entityCategory/{id}:
    get:
      tags:
      - "entityCategory"
      summary: "Retrieves a EntityCategory by ID"
      description: "This operation retrieves a EntityCategory entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveEntityCategory"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntityCategory"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/EntityCategory"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCategory"
    delete:
      tags:
      - "entityCategory"
      summary: "Deletes a EntityCategory"
      description: "This operation deletes a EntityCategory entity."
      operationId: "deleteEntityCategory"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntityCategory"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCategory"
    patch:
      tags:
      - "entityCategory"
      summary: "Updates partially a EntityCategory"
      description: "This operation updates partially a EntityCategory entity."
      operationId: "patchEntityCategory"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntityCategory"
        required: true
        type: "string"
      - in: "body"
        name: "entityCategory"
        description: "The EntityCategory to be updated"
        required: true
        schema:
          $ref: "#/definitions/EntityCategory_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/EntityCategory"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCategory"
  /entityCatalogItem:
    get:
      tags:
      - "entityCatalogItem"
      summary: "List or find EntityCatalogItem objects"
      description: "This operation list or find EntityCatalogItem entities"
      operationId: "listEntityCatalogItem"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntityCatalogItem"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCatalogItem"
    post:
      tags:
      - "entityCatalogItem"
      summary: "Creates a EntityCatalogItem"
      description: "This operation creates a EntityCatalogItem entity."
      operationId: "createEntityCatalogItem"
      parameters:
      - in: "body"
        name: "entityCatalogItem"
        description: "The EntityCatalogItem to be created"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogItem_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/EntityCatalogItem"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCatalogItem"
  /entityCatalogItem/{id}:
    get:
      tags:
      - "entityCatalogItem"
      summary: "Retrieves a EntityCatalogItem by ID"
      description: "This operation retrieves a EntityCatalogItem entity. Attribute\
        \ selection is enabled for all first level attributes."
      operationId: "retrieveEntityCatalogItem"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntityCatalogItem"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/EntityCatalogItem"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCatalogItem"
    delete:
      tags:
      - "entityCatalogItem"
      summary: "Deletes a EntityCatalogItem"
      description: "This operation deletes a EntityCatalogItem entity."
      operationId: "deleteEntityCatalogItem"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntityCatalogItem"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCatalogItem"
    patch:
      tags:
      - "entityCatalogItem"
      summary: "Updates partially a EntityCatalogItem"
      description: "This operation updates partially a EntityCatalogItem entity."
      operationId: "patchEntityCatalogItem"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntityCatalogItem"
        required: true
        type: "string"
      - in: "body"
        name: "entityCatalogItem"
        description: "The EntityCatalogItem to be updated"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogItem_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/EntityCatalogItem"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntityCatalogItem"
  /entitySpecification:
    get:
      tags:
      - "entitySpecification"
      summary: "List or find EntitySpecification objects"
      description: "This operation list or find EntitySpecification entities"
      operationId: "listEntitySpecification"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EntitySpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntitySpecification"
    post:
      tags:
      - "entitySpecification"
      summary: "Creates a EntitySpecification"
      description: "This operation creates a EntitySpecification entity."
      operationId: "createEntitySpecification"
      parameters:
      - in: "body"
        name: "entitySpecification"
        description: "The EntitySpecification to be created"
        required: true
        schema:
          $ref: "#/definitions/EntitySpecification_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/EntitySpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntitySpecification"
  /entitySpecification/{id}:
    get:
      tags:
      - "entitySpecification"
      summary: "Retrieves a EntitySpecification by ID"
      description: "This operation retrieves a EntitySpecification entity. Attribute\
        \ selection is enabled for all first level attributes."
      operationId: "retrieveEntitySpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntitySpecification"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/EntitySpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntitySpecification"
    delete:
      tags:
      - "entitySpecification"
      summary: "Deletes a EntitySpecification"
      description: "This operation deletes a EntitySpecification entity."
      operationId: "deleteEntitySpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntitySpecification"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntitySpecification"
    patch:
      tags:
      - "entitySpecification"
      summary: "Updates partially a EntitySpecification"
      description: "This operation updates partially a EntitySpecification entity."
      operationId: "patchEntitySpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the EntitySpecification"
        required: true
        type: "string"
      - in: "body"
        name: "entitySpecification"
        description: "The EntitySpecification to be updated"
        required: true
        schema:
          $ref: "#/definitions/EntitySpecification_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/EntitySpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EntitySpecification"
  /associationSpecification:
    get:
      tags:
      - "associationSpecification"
      summary: "List or find AssociationSpecification objects"
      description: "This operation list or find AssociationSpecification entities"
      operationId: "listAssociationSpecification"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AssociationSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "AssociationSpecification"
    post:
      tags:
      - "associationSpecification"
      summary: "Creates a AssociationSpecification"
      description: "This operation creates a AssociationSpecification entity."
      operationId: "createAssociationSpecification"
      parameters:
      - in: "body"
        name: "associationSpecification"
        description: "The AssociationSpecification to be created"
        required: true
        schema:
          $ref: "#/definitions/AssociationSpecification_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/AssociationSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "AssociationSpecification"
  /associationSpecification/{id}:
    get:
      tags:
      - "associationSpecification"
      summary: "Retrieves a AssociationSpecification by ID"
      description: "This operation retrieves a AssociationSpecification entity. Attribute\
        \ selection is enabled for all first level attributes."
      operationId: "retrieveAssociationSpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the AssociationSpecification"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/AssociationSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "AssociationSpecification"
    delete:
      tags:
      - "associationSpecification"
      summary: "Deletes a AssociationSpecification"
      description: "This operation deletes a AssociationSpecification entity."
      operationId: "deleteAssociationSpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the AssociationSpecification"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "AssociationSpecification"
    patch:
      tags:
      - "associationSpecification"
      summary: "Updates partially a AssociationSpecification"
      description: "This operation updates partially a AssociationSpecification entity."
      operationId: "patchAssociationSpecification"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the AssociationSpecification"
        required: true
        type: "string"
      - in: "body"
        name: "associationSpecification"
        description: "The AssociationSpecification to be updated"
        required: true
        schema:
          $ref: "#/definitions/AssociationSpecification_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/AssociationSpecification"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "AssociationSpecification"
  /association:
    get:
      tags:
      - "association"
      summary: "List or find Association objects"
      description: "This operation list or find Association entities"
      operationId: "listAssociation"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Association"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Association"
    post:
      tags:
      - "association"
      summary: "Creates a Association"
      description: "This operation creates a Association entity."
      operationId: "createAssociation"
      parameters:
      - in: "body"
        name: "association"
        description: "The Association to be created"
        required: true
        schema:
          $ref: "#/definitions/Association_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Association"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Association"
  /association/{id}:
    get:
      tags:
      - "association"
      summary: "Retrieves a Association by ID"
      description: "This operation retrieves a Association entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveAssociation"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Association"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Association"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Association"
    delete:
      tags:
      - "association"
      summary: "Deletes a Association"
      description: "This operation deletes a Association entity."
      operationId: "deleteAssociation"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Association"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Association"
    patch:
      tags:
      - "association"
      summary: "Updates partially a Association"
      description: "This operation updates partially a Association entity."
      operationId: "patchAssociation"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Association"
        required: true
        type: "string"
      - in: "body"
        name: "association"
        description: "The Association to be updated"
        required: true
        schema:
          $ref: "#/definitions/Association_Update"
      responses:
        200:
          description: "Updated"
          schema:
            $ref: "#/definitions/Association"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Association"
  /importJob:
    get:
      tags:
      - "importJob"
      summary: "List or find ImportJob objects"
      description: "This operation list or find ImportJob entities"
      operationId: "listImportJob"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ImportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ImportJob"
    post:
      tags:
      - "importJob"
      summary: "Creates a ImportJob"
      description: "This operation creates a ImportJob entity."
      operationId: "createImportJob"
      parameters:
      - in: "body"
        name: "importJob"
        description: "The ImportJob to be created"
        required: true
        schema:
          $ref: "#/definitions/ImportJob_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ImportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ImportJob"
  /importJob/{id}:
    get:
      tags:
      - "importJob"
      summary: "Retrieves a ImportJob by ID"
      description: "This operation retrieves a ImportJob entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveImportJob"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ImportJob"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ImportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ImportJob"
    delete:
      tags:
      - "importJob"
      summary: "Deletes a ImportJob"
      description: "This operation deletes a ImportJob entity."
      operationId: "deleteImportJob"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ImportJob"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ImportJob"
  /exportJob:
    get:
      tags:
      - "exportJob"
      summary: "List or find ExportJob objects"
      description: "This operation list or find ExportJob entities"
      operationId: "listExportJob"
      parameters:
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to be provided in response"
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Requested index for start of resources to be provided in response"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Requested number of resources to be provided in response"
        required: false
        type: "integer"
      responses:
        200:
          description: "Success"
          headers:
            X-Result-Count:
              type: "integer"
              description: "Actual number of items returned in the response body"
            X-Total-Count:
              type: "integer"
              description: "Total number of items matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ExportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ExportJob"
    post:
      tags:
      - "exportJob"
      summary: "Creates a ExportJob"
      description: "This operation creates a ExportJob entity."
      operationId: "createExportJob"
      parameters:
      - in: "body"
        name: "exportJob"
        description: "The ExportJob to be created"
        required: true
        schema:
          $ref: "#/definitions/ExportJob_Create"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/ExportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ExportJob"
  /exportJob/{id}:
    get:
      tags:
      - "exportJob"
      summary: "Retrieves a ExportJob by ID"
      description: "This operation retrieves a ExportJob entity. Attribute selection\
        \ is enabled for all first level attributes."
      operationId: "retrieveExportJob"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ExportJob"
        required: true
        type: "string"
      - name: "fields"
        in: "query"
        description: "Comma-separated properties to provide in response"
        required: false
        type: "string"
      responses:
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/ExportJob"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ExportJob"
    delete:
      tags:
      - "exportJob"
      summary: "Deletes a ExportJob"
      description: "This operation deletes a ExportJob entity."
      operationId: "deleteExportJob"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the ExportJob"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ExportJob"
  /hub:
    post:
      tags:
      - "events subscription"
      summary: "Register a listener"
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics."
      operationId: "registerListener"
      parameters:
      - in: "body"
        name: "data"
        description: "Data containing the callback endpoint to deliver the information"
        required: true
        schema:
          $ref: "#/definitions/EventSubscriptionInput"
      responses:
        201:
          description: "Subscribed"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /hub/{id}:
    delete:
      tags:
      - "events subscription"
      summary: "Unregister a listener"
      description: "Resets the communication endpoint address the service instance\
        \ must use to deliver information about its health state, execution state,\
        \ failures and metrics."
      operationId: "unregisterListener"
      parameters:
      - name: "id"
        in: "path"
        description: "The id of the registered listener"
        required: true
        type: "string"
      responses:
        204:
          description: "Deleted"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method not allowed"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "EventsSubscription"
  /listener/entityCatalogCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCatalogCreateEvent"
      description: "Example of a client listener for receiving the notification EntityCatalogCreateEvent"
      operationId: "listenToEntityCatalogCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCatalogAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCatalogAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification EntityCatalogAttributeValueChangeEvent"
      operationId: "listenToEntityCatalogAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCatalogStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCatalogStateChangeEvent"
      description: "Example of a client listener for receiving the notification EntityCatalogStateChangeEvent"
      operationId: "listenToEntityCatalogStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCatalogDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCatalogDeleteEvent"
      description: "Example of a client listener for receiving the notification EntityCatalogDeleteEvent"
      operationId: "listenToEntityCatalogDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCatalogBatchEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCatalogBatchEvent"
      description: "Example of a client listener for receiving the notification EntityCatalogBatchEvent"
      operationId: "listenToEntityCatalogBatchEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogBatchEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCategoryCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCategoryCreateEvent"
      description: "Example of a client listener for receiving the notification EntityCategoryCreateEvent"
      operationId: "listenToEntityCategoryCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCategoryCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCategoryAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCategoryAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification EntityCategoryAttributeValueChangeEvent"
      operationId: "listenToEntityCategoryAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCategoryAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCategoryStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCategoryStateChangeEvent"
      description: "Example of a client listener for receiving the notification EntityCategoryStateChangeEvent"
      operationId: "listenToEntityCategoryStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCategoryStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCategoryDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCategoryDeleteEvent"
      description: "Example of a client listener for receiving the notification EntityCategoryDeleteEvent"
      operationId: "listenToEntityCategoryDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCategoryDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCatalogItemCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCatalogItemCreateEvent"
      description: "Example of a client listener for receiving the notification EntityCatalogItemCreateEvent"
      operationId: "listenToEntityCatalogItemCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogItemCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCatalogItemAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCatalogItemAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification EntityCatalogItemAttributeValueChangeEvent"
      operationId: "listenToEntityCatalogItemAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogItemAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCatalogItemStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCatalogItemStateChangeEvent"
      description: "Example of a client listener for receiving the notification EntityCatalogItemStateChangeEvent"
      operationId: "listenToEntityCatalogItemStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogItemStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entityCatalogItemDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntityCatalogItemDeleteEvent"
      description: "Example of a client listener for receiving the notification EntityCatalogItemDeleteEvent"
      operationId: "listenToEntityCatalogItemDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntityCatalogItemDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entitySpecificationCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntitySpecificationCreateEvent"
      description: "Example of a client listener for receiving the notification EntitySpecificationCreateEvent"
      operationId: "listenToEntitySpecificationCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntitySpecificationCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entitySpecificationAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntitySpecificationAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification EntitySpecificationAttributeValueChangeEvent"
      operationId: "listenToEntitySpecificationAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntitySpecificationAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entitySpecificationStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntitySpecificationStateChangeEvent"
      description: "Example of a client listener for receiving the notification EntitySpecificationStateChangeEvent"
      operationId: "listenToEntitySpecificationStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntitySpecificationStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/entitySpecificationDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity EntitySpecificationDeleteEvent"
      description: "Example of a client listener for receiving the notification EntitySpecificationDeleteEvent"
      operationId: "listenToEntitySpecificationDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/EntitySpecificationDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/associationSpecificationCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity AssociationSpecificationCreateEvent"
      description: "Example of a client listener for receiving the notification AssociationSpecificationCreateEvent"
      operationId: "listenToAssociationSpecificationCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/AssociationSpecificationCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/associationSpecificationAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity AssociationSpecificationAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification AssociationSpecificationAttributeValueChangeEvent"
      operationId: "listenToAssociationSpecificationAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/AssociationSpecificationAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/associationSpecificationStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity AssociationSpecificationStateChangeEvent"
      description: "Example of a client listener for receiving the notification AssociationSpecificationStateChangeEvent"
      operationId: "listenToAssociationSpecificationStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/AssociationSpecificationStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/associationSpecificationDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity AssociationSpecificationDeleteEvent"
      description: "Example of a client listener for receiving the notification AssociationSpecificationDeleteEvent"
      operationId: "listenToAssociationSpecificationDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/AssociationSpecificationDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/associationCreateEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity AssociationCreateEvent"
      description: "Example of a client listener for receiving the notification AssociationCreateEvent"
      operationId: "listenToAssociationCreateEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/AssociationCreateEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/associationAttributeValueChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity AssociationAttributeValueChangeEvent"
      description: "Example of a client listener for receiving the notification AssociationAttributeValueChangeEvent"
      operationId: "listenToAssociationAttributeValueChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/AssociationAttributeValueChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/associationStateChangeEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity AssociationStateChangeEvent"
      description: "Example of a client listener for receiving the notification AssociationStateChangeEvent"
      operationId: "listenToAssociationStateChangeEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/AssociationStateChangeEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
  /listener/associationDeleteEvent:
    post:
      tags:
      - "notification listeners (client side)"
      summary: "Client listener for entity AssociationDeleteEvent"
      description: "Example of a client listener for receiving the notification AssociationDeleteEvent"
      operationId: "listenToAssociationDeleteEvent"
      parameters:
      - in: "body"
        name: "data"
        description: "The event data"
        required: true
        schema:
          $ref: "#/definitions/AssociationDeleteEvent"
      responses:
        201:
          description: "Notified"
          schema:
            $ref: "#/definitions/EventSubscription"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/Error"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        405:
          description: "Method Not allowed"
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "Conflict"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "NotificationListenersClientSide"
definitions:
  Addressable:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
    description: "Base schema for adressable entities"
  Any: {}
  Association:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of the association"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "The last modified date of this association object"
      lifecycleStatus:
        type: "string"
        description: "Indicates the current lifecycle status"
      name:
        type: "string"
        description: "Name given to this association"
      validFor:
        description: "The period for which this association is valid"
        $ref: "#/definitions/TimePeriod"
      version:
        type: "string"
        description: "Version of this REST resource"
      associationSpec:
        description: "The specification of this association"
        $ref: "#/definitions/AssociationSpecificationRef"
      associationRole:
        type: "array"
        description: "The end point roles of this association"
        items:
          $ref: "#/definitions/AssociationRole"
        minItems: 2
      constraint:
        type: "array"
        description: "Any constraints in this association"
        items:
          $ref: "#/definitions/ConstraintRef"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      id:
        type: "string"
        description: "unique identifier"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "Association is the class that describes a relationship between two\
      \ or more entities or entity specifications based on a given association specification.\
      \ The role of each endpoint in the relationship is given by an association role.\
      \ The type of endpoints in the relationship should match the ones as defined\
      \ in the corresponding association role specification. A relationship between\
      \ entity specifications may be governed by conditions and rules which are addressed\
      \ by constraint references in this resource. Constraints for a relationship\
      \ may include new rules and conditions in addition to those defined for the\
      \ corresponding association specification"
    example:
      associationSpec:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "description"
      associationRole:
      - role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        isSource: true
        '@schemaLocation': "http://example.com/aeiou"
        entity:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      - role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        isSource: true
        '@schemaLocation': "http://example.com/aeiou"
        entity:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      version: "version"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      constraint:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      href: "http://example.com/aeiou"
      id: "id"
      '@schemaLocation': "http://example.com/aeiou"
  Association_Create:
    type: "object"
    required:
    - "associationRole"
    - "name"
    properties:
      description:
        type: "string"
        description: "Description of the association"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "The last modified date of this association object"
      lifecycleStatus:
        type: "string"
        description: "Indicates the current lifecycle status"
      name:
        type: "string"
        description: "Name given to this association"
      version:
        type: "string"
        description: "Version of this REST resource"
      associationRole:
        description: "The end point roles of this association"
        $ref: "#/definitions/AssociationRole"
      associationSpec:
        description: "The specification of this association"
        $ref: "#/definitions/AssociationSpecificationRef"
      constraint:
        type: "array"
        description: "Any constraints in this association"
        items:
          $ref: "#/definitions/ConstraintRef"
      validFor:
        description: "The period for which this association is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Association is the class that describes a relationship between two\
      \ or more entities or entity specifications based on a given association specification.\
      \ The role of each endpoint in the relationship is given by an association role.\
      \ The type of endpoints in the relationship should match the ones as defined\
      \ in the corresponding association role specification. A relationship between\
      \ entity specifications may be governed by conditions and rules which are addressed\
      \ by constraint references in this resource. Constraints for a relationship\
      \ may include new rules and conditions in addition to those defined for the\
      \ corresponding association specification\nSkipped properties: id,href"
    example:
      associationSpec:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      description: "description"
      constraint:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      associationRole:
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        isSource: true
        '@schemaLocation': "http://example.com/aeiou"
        entity:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  Association_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of the association"
      lifecycleStatus:
        type: "string"
        description: "Indicates the current lifecycle status"
      name:
        type: "string"
        description: "Name given to this association"
      version:
        type: "string"
        description: "Version of this REST resource"
      associationRole:
        description: "The end point roles of this association"
        $ref: "#/definitions/AssociationRole"
      associationSpec:
        description: "The specification of this association"
        $ref: "#/definitions/AssociationSpecificationRef"
      constraint:
        type: "array"
        description: "Any constraints in this association"
        items:
          $ref: "#/definitions/ConstraintRef"
      validFor:
        description: "The period for which this association is valid"
        $ref: "#/definitions/TimePeriod"
    description: "Association is the class that describes a relationship between two\
      \ or more entities or entity specifications based on a given association specification.\
      \ The role of each endpoint in the relationship is given by an association role.\
      \ The type of endpoints in the relationship should match the ones as defined\
      \ in the corresponding association role specification. A relationship between\
      \ entity specifications may be governed by conditions and rules which are addressed\
      \ by constraint references in this resource. Constraints for a relationship\
      \ may include new rules and conditions in addition to those defined for the\
      \ corresponding association specification\nSkipped properties: id,href,lastUpdate,@type,@schemaLocation,@baseType"
    example:
      associationSpec:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      name: "name"
      description: "description"
      constraint:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      associationRole:
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        isSource: true
        '@schemaLocation': "http://example.com/aeiou"
        entity:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  AssociationRole:
    type: "object"
    required:
    - "entity"
    - "role"
    properties:
      isSource:
        type: "boolean"
        description: "A flag indicating if the participant involved in a relationship\
          \ is the source or not. If this flag is true for both roles in an association,\
          \ the association is bi-directional (both end points are navigable)"
      role:
        type: "string"
        description: "The association role of this relationship participant as defined\
          \ in the associationRoleSpecification"
      entity:
        description: "The entity being referred to"
        $ref: "#/definitions/EntityRef"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "This embedded object represents the role and type of each entity\
      \ involved in a relationship."
    example:
      role: "role"
      '@baseType': "@baseType"
      '@type': "@type"
      isSource: true
      '@schemaLocation': "http://example.com/aeiou"
      entity:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  AssociationRoleSpecification:
    type: "object"
    properties:
      aggregation:
        type: "string"
        description: "A flag indicates that if this role is an aggregation or a simple\
          \ relationship"
      defaultQuantity:
        type: "integer"
        description: "Default quantity of the association role"
      entityType:
        type: "string"
        description: "The target (root) entity type associated with this role"
      isNavigable:
        type: "boolean"
        description: "A flag indicating if access from the other end of association\
          \ is allowed or not"
      isSource:
        type: "boolean"
        description: "A flag indicating if the participant involved in a uni-directional\
          \ relationship is the source or not. This flag is true If the association\
          \ is bi-directional"
      maxQuantity:
        type: "integer"
        description: "Maximum allowed quantity of the association role"
      minQuantity:
        type: "integer"
        description: "Minimum allowed quantity of the association role"
      role:
        type: "string"
        description: "The association role of this relationship participant"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "This embedded object represents the role and type of each entity\
      \ involved in a relationship."
    example:
      role: "role"
      minQuantity: 1
      '@baseType': "@baseType"
      maxQuantity: 6
      entityType: "entityType"
      '@type': "@type"
      isSource: true
      aggregation: "aggregation"
      defaultQuantity: 0
      '@schemaLocation': "http://example.com/aeiou"
      isNavigable: true
  AssociationSpecification:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of the specification"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "The last modified date of this specification"
      lifecycleStatus:
        type: "string"
        description: "Indicates the current lifecycle status"
      name:
        type: "string"
        description: "Name given to this association specification"
      validFor:
        description: "The period for which this specification is valid"
        $ref: "#/definitions/TimePeriod"
      version:
        type: "string"
        description: "Version of this association"
      constraint:
        type: "array"
        description: "Constraints relating to this association"
        items:
          $ref: "#/definitions/ConstraintRef"
      associationRoleSpec:
        type: "array"
        description: "Role specifications for this association"
        items:
          $ref: "#/definitions/AssociationRoleSpecification"
        minItems: 2
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      id:
        type: "string"
        description: "unique identifier"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name"
    description: "AssociationSpecification is an association class that describes\
      \ a type of relationship between two entities. This is a generic construct that\
      \ may be used to describe relationship types and roles. The role and type of\
      \ each entity in the relationship is given by an association role specification.\
      \ Two role specifications are embedded in the association specification."
    example:
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "description"
      associationRoleSpec:
      - role: "role"
        minQuantity: 1
        '@baseType': "@baseType"
        maxQuantity: 6
        entityType: "entityType"
        '@type': "@type"
        isSource: true
        aggregation: "aggregation"
        defaultQuantity: 0
        '@schemaLocation': "http://example.com/aeiou"
        isNavigable: true
      - role: "role"
        minQuantity: 1
        '@baseType': "@baseType"
        maxQuantity: 6
        entityType: "entityType"
        '@type': "@type"
        isSource: true
        aggregation: "aggregation"
        defaultQuantity: 0
        '@schemaLocation': "http://example.com/aeiou"
        isNavigable: true
      version: "version"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      constraint:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      href: "http://example.com/aeiou"
      id: "id"
      '@schemaLocation': "http://example.com/aeiou"
  AssociationSpecification_Create:
    type: "object"
    required:
    - "associationRoleSpec"
    - "name"
    properties:
      description:
        type: "string"
        description: "Description of the specification"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "The last modified date of this specification"
      lifecycleStatus:
        type: "string"
        description: "Indicates the current lifecycle status"
      name:
        type: "string"
        description: "Name given to this association specification"
      version:
        type: "string"
        description: "Version of this association"
      associationRoleSpec:
        description: "Role specifications for this association"
        $ref: "#/definitions/AssociationRoleSpecification"
      constraint:
        type: "array"
        description: "Constraints relating to this association"
        items:
          $ref: "#/definitions/ConstraintRef"
      validFor:
        description: "The period for which this specification is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "AssociationSpecification is an association class that describes\
      \ a type of relationship between two entities. This is a generic construct that\
      \ may be used to describe relationship types and roles. The role and type of\
      \ each entity in the relationship is given by an association role specification.\
      \ Two role specifications are embedded in the association specification.\nSkipped\
      \ properties: id,href"
    example:
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      description: "description"
      constraint:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      associationRoleSpec:
        role: "role"
        minQuantity: 1
        '@baseType': "@baseType"
        maxQuantity: 6
        entityType: "entityType"
        '@type': "@type"
        isSource: true
        aggregation: "aggregation"
        defaultQuantity: 0
        '@schemaLocation': "http://example.com/aeiou"
        isNavigable: true
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  AssociationSpecification_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of the specification"
      lifecycleStatus:
        type: "string"
        description: "Indicates the current lifecycle status"
      name:
        type: "string"
        description: "Name given to this association specification"
      version:
        type: "string"
        description: "Version of this association"
      associationRoleSpec:
        description: "Role specifications for this association"
        $ref: "#/definitions/AssociationRoleSpecification"
      constraint:
        type: "array"
        description: "Constraints relating to this association"
        items:
          $ref: "#/definitions/ConstraintRef"
      validFor:
        description: "The period for which this specification is valid"
        $ref: "#/definitions/TimePeriod"
    description: "AssociationSpecification is an association class that describes\
      \ a type of relationship between two entities. This is a generic construct that\
      \ may be used to describe relationship types and roles. The role and type of\
      \ each entity in the relationship is given by an association role specification.\
      \ Two role specifications are embedded in the association specification.\nSkipped\
      \ properties: id,href,lastUpdate,@type,@schemaLocation,@baseType"
    example:
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      name: "name"
      description: "description"
      constraint:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      associationRoleSpec:
        role: "role"
        minQuantity: 1
        '@baseType': "@baseType"
        maxQuantity: 6
        entityType: "entityType"
        '@type': "@type"
        isSource: true
        aggregation: "aggregation"
        defaultQuantity: 0
        '@schemaLocation': "http://example.com/aeiou"
        isNavigable: true
      version: "version"
  AssociationSpecificationRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "reference to an AssociationSpecification object"
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  Attachment:
    type: "object"
    properties:
      id:
        type: "string"
        example: "4aafacbd-11ff-4dc8-b445-305f2215715f"
        description: "Unique identifier for this particular attachment"
      href:
        type: "string"
        format: "uri"
        example: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
        description: "URI for this Attachment"
      attachmentType:
        type: "string"
        example: "video"
        description: "Attachment type such as video, picture"
      content:
        type: "string"
        format: "base64"
        description: "The actual contents of the attachment object, if embedded, encoded\
          \ as base64"
      description:
        type: "string"
        example: "Photograph of the Product"
        description: "A narrative text describing the content of the attachment"
      mimeType:
        type: "string"
        description: "Attachment mime type such as extension file for video, picture\
          \ and document"
      name:
        type: "string"
        description: "The name of the attachment"
      url:
        type: "string"
        format: "uri"
        example: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
        description: "Uniform Resource Locator, is a web page address (a subset of\
          \ URI)"
      size:
        description: "The size of the attachment."
        $ref: "#/definitions/Quantity"
      validFor:
        description: "The period of time for which the attachment is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Complements the description of an element (for instance a product)\
      \ through video, pictures..."
  AttachmentRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "Unique-Identifier for this attachment"
      href:
        type: "string"
        format: "uri"
        description: "URL serving as reference for the attachment resource"
      description:
        type: "string"
        description: "A narrative text describing the content of the attachment"
      name:
        type: "string"
        description: "Name of the related entity."
      url:
        type: "string"
        format: "uri"
        description: "Link to the attachment media/content"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Attachment reference. An attachment complements the description\
      \ of an element (for instance a product) through video, pictures"
  AttachmentRefOrValue:
    type: "object"
    properties:
      id:
        type: "string"
        example: "4aafacbd-11ff-4dc8-b445-305f2215715f"
        description: "Unique identifier for this particular attachment"
      href:
        type: "string"
        format: "uri"
        example: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
        description: "URI for this Attachment"
      attachmentType:
        type: "string"
        example: "video"
        description: "Attachment type such as video, picture"
      content:
        type: "string"
        format: "base64"
        description: "The actual contents of the attachment object, if embedded, encoded\
          \ as base64"
      description:
        type: "string"
        example: "Photograph of the Product"
        description: "A narrative text describing the content of the attachment"
      mimeType:
        type: "string"
        description: "Attachment mime type such as extension file for video, picture\
          \ and document"
      name:
        type: "string"
        description: "The name of the attachment"
      url:
        type: "string"
        format: "uri"
        example: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
        description: "Uniform Resource Locator, is a web page address (a subset of\
          \ URI)"
      size:
        description: "The size of the attachment."
        $ref: "#/definitions/Quantity"
      validFor:
        description: "The period of time for which the attachment is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "An attachment by value or by reference. An attachment complements\
      \ the description of an element, for example through a document, a video, a\
      \ picture."
    example:
      '@referredType': "@referredType"
      attachmentType: "video"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "Photograph of the Product"
      mimeType: "mimeType"
      content: "content"
      url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
      size:
        amount: 0.8008282
        units: "units"
      '@baseType': "@baseType"
      name: "name"
      id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
      href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
      '@schemaLocation': "http://example.com/aeiou"
  CharacteristicSpecification:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique ID for the characteristic"
      configurable:
        type: "boolean"
        description: "If true, the Boolean indicates that the target Characteristic\
          \ is configurable"
      description:
        type: "string"
        description: "A narrative that explains the CharacteristicSpecification."
      extensible:
        type: "boolean"
        description: "An indicator that specifies that the values for the characteristic\
          \ can be extended by adding new values when instantiating a characteristic\
          \ for a resource."
      isUnique:
        type: "boolean"
        description: "An indicator that specifies if a value is unique for the specification.\
          \ Possible values are; \"unique while value is in effect\" and \"unique\
          \ whether value is in effect or not\""
      maxCardinality:
        type: "integer"
        description: "The maximum number of instances a CharacteristicValue can take\
          \ on. For example, zero to five phone numbers in a group calling plan, where\
          \ five is the value for the maxCardinality."
      minCardinality:
        type: "integer"
        description: "The minimum number of instances a CharacteristicValue can take\
          \ on. For example, zero to five phone numbers in a group calling plan, where\
          \ zero is the value for the minCardinality."
      name:
        type: "string"
        description: "A word, term, or phrase by which this characteristic specification\
          \ is known and distinguished from other characteristic specifications."
      regex:
        type: "string"
        description: "A rule or principle represented in regular expression used to\
          \ derive the value of a characteristic value."
      valueType:
        type: "string"
        description: "A kind of value that the characteristic can take on, such as\
          \ numeric, text and so forth"
      charSpecRelationship:
        type: "array"
        description: "An aggregation, migration, substitution, dependency or exclusivity\
          \ relationship between/among Specification Characteristics."
        items:
          $ref: "#/definitions/CharacteristicSpecificationRelationship"
      characteristicValueSpecification:
        type: "array"
        description: "A CharacteristicValueSpecification object is used to define\
          \ a set of attributes, each of which can be assigned to a corresponding\
          \ set of attributes in a CharacteristicSpecification object. The values\
          \ of the attributes in the CharacteristicValueSpecification object describe\
          \ the values of the attributes that a corresponding Characteristic object\
          \ can take on."
        items:
          $ref: "#/definitions/CharacteristicValueSpecification"
      validFor:
        description: "The period of time for which a characteristic is applicable."
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@valueSchemaLocation':
        type: "string"
        description: "This (optional) field provides a link to the schema describing\
          \ the value type."
    description: "This class defines a characteristic specification."
    example:
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      '@valueSchemaLocation': "@valueSchemaLocation"
      isUnique: true
      description: "description"
      maxCardinality: 6
      minCardinality: 1
      regex: "regex"
      '@baseType': "@baseType"
      valueType: "valueType"
      charSpecRelationship:
      - relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        parentSpecificationId: "parentSpecificationId"
        '@type': "@type"
        name: "name"
        characteristicSpecificationId: "characteristicSpecificationId"
        parentSpecificationHref: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        parentSpecificationId: "parentSpecificationId"
        '@type': "@type"
        name: "name"
        characteristicSpecificationId: "characteristicSpecificationId"
        parentSpecificationHref: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      characteristicValueSpecification:
      - rangeInterval: "rangeInterval"
        isDefault: true
        regex: "regex"
        valueTo: 5
        unitOfMeasure: "unitOfMeasure"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        valueType: "valueType"
        '@schemaLocation': "http://example.com/aeiou"
        value: {}
        valueFrom: 5
      - rangeInterval: "rangeInterval"
        isDefault: true
        regex: "regex"
        valueTo: 5
        unitOfMeasure: "unitOfMeasure"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        valueType: "valueType"
        '@schemaLocation': "http://example.com/aeiou"
        value: {}
        valueFrom: 5
      name: "name"
      id: "id"
      '@schemaLocation': "http://example.com/aeiou"
      extensible: true
      configurable: true
  CharacteristicSpecificationBase:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Unique ID for the characteristic"
      configurable:
        type: "boolean"
        description: "If true, the Boolean indicates that the target Characteristic\
          \ is configurable"
      description:
        type: "string"
        description: "A narrative that explains the CharacteristicSpecification."
      extensible:
        type: "boolean"
        description: "An indicator that specifies that the values for the characteristic\
          \ can be extended by adding new values when instantiating a characteristic\
          \ for a resource."
      isUnique:
        type: "boolean"
        description: "An indicator that specifies if a value is unique for the specification.\
          \ Possible values are; \"unique while value is in effect\" and \"unique\
          \ whether value is in effect or not\""
      maxCardinality:
        type: "integer"
        description: "The maximum number of instances a CharacteristicValue can take\
          \ on. For example, zero to five phone numbers in a group calling plan, where\
          \ five is the value for the maxCardinality."
      minCardinality:
        type: "integer"
        description: "The minimum number of instances a CharacteristicValue can take\
          \ on. For example, zero to five phone numbers in a group calling plan, where\
          \ zero is the value for the minCardinality."
      name:
        type: "string"
        description: "A word, term, or phrase by which this characteristic specification\
          \ is known and distinguished from other characteristic specifications."
      regex:
        type: "string"
        description: "A rule or principle represented in regular expression used to\
          \ derive the value of a characteristic value."
      valueType:
        type: "string"
        description: "A kind of value that the characteristic can take on, such as\
          \ numeric, text and so forth"
      validFor:
        description: "The period of time for which a characteristic is applicable."
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@valueSchemaLocation':
        type: "string"
        description: "This (optional) field provides a link to the schema describing\
          \ the value type."
    description: "This class defines a characteristic specification."
  CharacteristicSpecificationRelationship:
    type: "object"
    properties:
      characteristicSpecificationId:
        type: "string"
        description: "Unique identifier of the characteristic within the specification"
      name:
        type: "string"
        description: "Name of the target characteristic within the specification"
      parentSpecificationHref:
        type: "string"
        format: "uri"
        description: "Hyperlink reference to the parent specification containing the\
          \ target characteristic"
      parentSpecificationId:
        type: "string"
        description: "Unique identifier of the parent specification containing the\
          \ target characteristic"
      relationshipType:
        type: "string"
        description: "Type of relationship such as aggregation, migration, substitution,\
          \ dependency, exclusivity"
      validFor:
        description: "The period for which the object is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An aggregation, migration, substitution, dependency or exclusivity\
      \ relationship between/among Characteristic specifications. The specification\
      \ characteristic is embedded within the specification whose ID and href are\
      \ in this entity, and identified by its ID."
    example:
      relationshipType: "relationshipType"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      parentSpecificationId: "parentSpecificationId"
      '@type': "@type"
      name: "name"
      characteristicSpecificationId: "characteristicSpecificationId"
      parentSpecificationHref: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  CharacteristicValueSpecification:
    type: "object"
    properties:
      isDefault:
        type: "boolean"
        description: "If true, the Boolean Indicates if the value is the default value\
          \ for a characteristic"
      rangeInterval:
        type: "string"
        description: "An indicator that specifies the inclusion or exclusion of the\
          \ valueFrom and valueTo attributes. If applicable, possible values are \"\
          open\", \"closed\", \"closedBottom\" and \"closedTop\"."
      regex:
        type: "string"
        description: "A regular expression constraint for given value"
      unitOfMeasure:
        type: "string"
        description: "A length, surface, volume, dry measure, liquid measure, money,\
          \ weight, time, and the like. In general, a determinate quantity or magnitude\
          \ of the kind designated, taken as a standard of comparison for others of\
          \ the same kind, in assigning to them numerical values, as 1 foot, 1 yard,\
          \ 1 mile, 1 square foot."
      valueFrom:
        type: "integer"
        description: "The low range value that a characteristic can take on"
      valueTo:
        type: "integer"
        description: "The upper range value that a characteristic can take on"
      valueType:
        type: "string"
        description: "A kind of value that the characteristic value can take on, such\
          \ as numeric, text and so forth"
      validFor:
        description: "The period of time for which a value is applicable."
        $ref: "#/definitions/TimePeriod"
      value:
        description: "A discrete value that the characteristic can take on, or the\
          \ actual value of the characteristic"
        $ref: "#/definitions/Any"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "specification of a value (number or text or an object) that can\
      \ be assigned to a Characteristic."
    example:
      rangeInterval: "rangeInterval"
      isDefault: true
      regex: "regex"
      valueTo: 5
      unitOfMeasure: "unitOfMeasure"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      valueType: "valueType"
      '@schemaLocation': "http://example.com/aeiou"
      value: {}
      valueFrom: 5
  ConstraintRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      version:
        type: "string"
        description: "constraint version"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Constraint reference. The Constraint resource represents a policy/rule\
      \ applied to an entity or entity spec."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  Entity:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Base entity schema for use in TMForum Open-APIs"
  EntityCatalog:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      description:
        type: "string"
        description: "Description of this catalog"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the catalog"
      version:
        type: "string"
        description: "Catalog version"
      category:
        type: "array"
        description: "The categories used in this catalog"
        items:
          $ref: "#/definitions/EntityCategoryRef"
      relatedParty:
        type: "array"
        description: "The parties who are involved or have an interest in this catalog"
        items:
          $ref: "#/definitions/RelatedParty"
      validFor:
        description: "The period for which the catalog is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "The root entity for entity catalog management. An entity catalog\
      \ can be defined as a collection of entity catalog items and arranging them\
      \ in a particular manner based on the need.\nIn comparison to Product, Service\
      \ and Resource catalogs, the entity catalog is intended for the purpose of providing\
      \ any TMF data model entity to consumers via a catalog, with its specification\
      \ and policy providing governance over its content. Even Entity catalog may\
      \ have an overlap with Product, Service or Resource catalog, it does not replace\
      \ them. It is primarily intended to address those entities which may not be\
      \ addressed by any of Product, Service or Resource catalog.\nAn entity catalog\
      \ comprises of a list of RootEntities made available through EntityCatalogItems.\
      \ This API addresses only RootEntity extended items as EntitySpecification.\
      \ An entity catalog typically includes name, description and time period that\
      \ it is valid for."
    example:
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "description"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      version: "version"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      '@schemaLocation': "http://example.com/aeiou"
  EntityCatalog_Create:
    type: "object"
    required:
    - "name"
    properties:
      description:
        type: "string"
        description: "Description of this catalog"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the catalog"
      version:
        type: "string"
        description: "Catalog version"
      category:
        type: "array"
        description: "The categories used in this catalog"
        items:
          $ref: "#/definitions/EntityCategoryRef"
      relatedParty:
        type: "array"
        description: "The parties who are involved or have an interest in this catalog"
        items:
          $ref: "#/definitions/RelatedParty"
      validFor:
        description: "The period for which the catalog is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "The root entity for entity catalog management. An entity catalog\
      \ can be defined as a collection of entity catalog items and arranging them\
      \ in a particular manner based on the need.\nIn comparison to Product, Service\
      \ and Resource catalogs, the entity catalog is intended for the purpose of providing\
      \ any TMF data model entity to consumers via a catalog, with its specification\
      \ and policy providing governance over its content. Even Entity catalog may\
      \ have an overlap with Product, Service or Resource catalog, it does not replace\
      \ them. It is primarily intended to address those entities which may not be\
      \ addressed by any of Product, Service or Resource catalog.\nAn entity catalog\
      \ comprises of a list of RootEntities made available through EntityCatalogItems.\
      \ This API addresses only RootEntity extended items as EntitySpecification.\
      \ An entity catalog typically includes name, description and time period that\
      \ it is valid for.\nSkipped properties: id,href"
    example:
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      description: "description"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  EntityCatalog_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of this catalog"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the catalog"
      version:
        type: "string"
        description: "Catalog version"
      category:
        type: "array"
        description: "The categories used in this catalog"
        items:
          $ref: "#/definitions/EntityCategoryRef"
      relatedParty:
        type: "array"
        description: "The parties who are involved or have an interest in this catalog"
        items:
          $ref: "#/definitions/RelatedParty"
      validFor:
        description: "The period for which the catalog is valid"
        $ref: "#/definitions/TimePeriod"
    description: "The root entity for entity catalog management. An entity catalog\
      \ can be defined as a collection of entity catalog items and arranging them\
      \ in a particular manner based on the need.\nIn comparison to Product, Service\
      \ and Resource catalogs, the entity catalog is intended for the purpose of providing\
      \ any TMF data model entity to consumers via a catalog, with its specification\
      \ and policy providing governance over its content. Even Entity catalog may\
      \ have an overlap with Product, Service or Resource catalog, it does not replace\
      \ them. It is primarily intended to address those entities which may not be\
      \ addressed by any of Product, Service or Resource catalog.\nAn entity catalog\
      \ comprises of a list of RootEntities made available through EntityCatalogItems.\
      \ This API addresses only RootEntity extended items as EntitySpecification.\
      \ An entity catalog typically includes name, description and time period that\
      \ it is valid for.\nSkipped properties: id,href,lastUpdate,@type,@schemaLocation,@baseType"
    example:
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      name: "name"
      description: "description"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  EntityCatalogItem:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      description:
        type: "string"
        description: "Description of this REST resource"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this REST resource"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this catalog\
          \ item"
      name:
        type: "string"
        description: "Name given to this REST resource"
      version:
        type: "string"
        description: "EntityCatalogItem version"
      category:
        type: "array"
        items:
          $ref: "#/definitions/EntityCategoryRef"
      specification:
        description: "The specification implied by this candidate"
        $ref: "#/definitions/EntitySpecificationRef"
      validFor:
        description: "The period for which this REST resource is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An EntityCatalogItem is an entity that allows any ProductOffering,\
      \ ServiceCandidate, ResourceCandidate, or even any object inheriting from RootEntity,\
      \ to be available to a catalog. The CatalogSpecification and Policy of the catalog\
      \ governs the content of the EntityCatalogItem. This API addresses only EntitySpecification\
      \ items extended from RootEntity as EntityCatalogItem.\nThe EntityCatalogItem\
      \ resource (JSON format) represents a set of characteristics that define the\
      \ values given by the EntityCatalogItem."
    example:
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "description"
      specification:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      version: "version"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      '@schemaLocation': "http://example.com/aeiou"
  EntityCatalogItem_Create:
    type: "object"
    required:
    - "name"
    - "specification"
    properties:
      description:
        type: "string"
        description: "Description of this REST resource"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of this REST resource"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this catalog\
          \ item"
      name:
        type: "string"
        description: "Name given to this REST resource"
      version:
        type: "string"
        description: "EntityCatalogItem version"
      category:
        type: "array"
        items:
          $ref: "#/definitions/EntityCategoryRef"
      specification:
        description: "The specification implied by this candidate"
        $ref: "#/definitions/EntitySpecificationRef"
      validFor:
        description: "The period for which this REST resource is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "An EntityCatalogItem is an entity that allows any ProductOffering,\
      \ ServiceCandidate, ResourceCandidate, or even any object inheriting from RootEntity,\
      \ to be available to a catalog. The CatalogSpecification and Policy of the catalog\
      \ governs the content of the EntityCatalogItem. This API addresses only EntitySpecification\
      \ items extended from RootEntity as EntityCatalogItem.\nThe EntityCatalogItem\
      \ resource (JSON format) represents a set of characteristics that define the\
      \ values given by the EntityCatalogItem.\nSkipped properties: id,href"
    example:
      lifecycleStatus: "lifecycleStatus"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      description: "description"
      specification:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  EntityCatalogItem_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of this REST resource"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this catalog\
          \ item"
      name:
        type: "string"
        description: "Name given to this REST resource"
      version:
        type: "string"
        description: "EntityCatalogItem version"
      category:
        type: "array"
        items:
          $ref: "#/definitions/EntityCategoryRef"
      specification:
        description: "The specification implied by this candidate"
        $ref: "#/definitions/EntitySpecificationRef"
      validFor:
        description: "The period for which this REST resource is valid"
        $ref: "#/definitions/TimePeriod"
    description: "An EntityCatalogItem is an entity that allows any ProductOffering,\
      \ ServiceCandidate, ResourceCandidate, or even any object inheriting from RootEntity,\
      \ to be available to a catalog. The CatalogSpecification and Policy of the catalog\
      \ governs the content of the EntityCatalogItem. This API addresses only EntitySpecification\
      \ items extended from RootEntity as EntityCatalogItem.\nThe EntityCatalogItem\
      \ resource (JSON format) represents a set of characteristics that define the\
      \ values given by the EntityCatalogItem.\nSkipped properties: id,href,lastUpdate,@type,@schemaLocation,@baseType"
    example:
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      name: "name"
      description: "description"
      specification:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      category:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      version: "version"
  EntityCatalogItemRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      version:
        type: "string"
        description: "EntityCatalogItem version"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "reference to EntityCatalogItem object"
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  EntityCategory:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      description:
        type: "string"
        description: "Description of the category"
      isRoot:
        type: "boolean"
        description: "If true, this Boolean indicates that the category is a root\
          \ of categories"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the category"
      parentId:
        type: "string"
        description: "Unique identifier of the parent category"
      version:
        type: "string"
        description: "Category version"
      childCategory:
        type: "array"
        description: "The child category(ies) if any, contained in this category"
        items:
          $ref: "#/definitions/EntityCategoryRef"
      entityCatalogItem:
        type: "array"
        description: "The catalog items referred to by this category"
        items:
          $ref: "#/definitions/EntityCatalogItemRef"
      validFor:
        description: "The period for which the category is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "The (entity) category resource is used to group entity catalog items\
      \ in logical containers. Categories can contain other categories.\nResource\
      \ IDs for categories are strings and are defined by the catalog application."
    example:
      entityCatalogItem:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      childCategory:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      isRoot: true
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "description"
      version: "version"
      parentId: "parentId"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  EntityCategory_Create:
    type: "object"
    required:
    - "name"
    properties:
      description:
        type: "string"
        description: "Description of the category"
      isRoot:
        type: "boolean"
        description: "If true, this Boolean indicates that the category is a root\
          \ of categories"
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the category"
      parentId:
        type: "string"
        description: "Unique identifier of the parent category"
      version:
        type: "string"
        description: "Category version"
      childCategory:
        type: "array"
        description: "The child category(ies) if any, contained in this category"
        items:
          $ref: "#/definitions/EntityCategoryRef"
      entityCatalogItem:
        type: "array"
        description: "The catalog items referred to by this category"
        items:
          $ref: "#/definitions/EntityCatalogItemRef"
      validFor:
        description: "The period for which the category is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "The (entity) category resource is used to group entity catalog items\
      \ in logical containers. Categories can contain other categories.\nResource\
      \ IDs for categories are strings and are defined by the catalog application.\n\
      Skipped properties: id,href"
    example:
      entityCatalogItem:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      childCategory:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      isRoot: true
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      description: "description"
      version: "version"
      parentId: "parentId"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      '@schemaLocation': "http://example.com/aeiou"
  EntityCategory_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of the category"
      isRoot:
        type: "boolean"
        description: "If true, this Boolean indicates that the category is a root\
          \ of categories"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status"
      name:
        type: "string"
        description: "Name of the category"
      parentId:
        type: "string"
        description: "Unique identifier of the parent category"
      version:
        type: "string"
        description: "Category version"
      childCategory:
        type: "array"
        description: "The child category(ies) if any, contained in this category"
        items:
          $ref: "#/definitions/EntityCategoryRef"
      entityCatalogItem:
        type: "array"
        description: "The catalog items referred to by this category"
        items:
          $ref: "#/definitions/EntityCatalogItemRef"
      validFor:
        description: "The period for which the category is valid"
        $ref: "#/definitions/TimePeriod"
    description: "The (entity) category resource is used to group entity catalog items\
      \ in logical containers. Categories can contain other categories.\nResource\
      \ IDs for categories are strings and are defined by the catalog application.\n\
      Skipped properties: id,href,lastUpdate,@type,@schemaLocation,@baseType"
    example:
      entityCatalogItem:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      childCategory:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      isRoot: true
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      name: "name"
      description: "description"
      version: "version"
      parentId: "parentId"
  EntityCategoryRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      version:
        type: "string"
        description: "Category version"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Reference to Entity Category object. The (entity) category resource\
      \ is used to group entity catalog items in logical containers. Categories can\
      \ contain other categories.\nResource IDs for categories are strings and are\
      \ defined by the catalog application."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  EntityRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Entity reference schema to be use for all entityRef class."
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  EntitySpecification:
    type: "object"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      description:
        type: "string"
        description: "Description of the specification"
      isBundle:
        type: "boolean"
        description: "isBundle determines whether specification represents a single\
          \ specification (false), or a bundle of specifications (true)."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of the specification"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this catalog\
          \ item"
      name:
        type: "string"
        description: "Name given to the specification"
      version:
        type: "string"
        description: "specification version"
      attachment:
        type: "array"
        description: "Attachments that may be of relevance to this specification,\
          \ such as picture, document, media"
        items:
          $ref: "#/definitions/AttachmentRefOrValue"
      constraint:
        type: "array"
        description: "This is a list of constraint references applied to this specification"
        items:
          $ref: "#/definitions/ConstraintRef"
      entitySpecRelationship:
        type: "array"
        description: "Relationship to another specification"
        items:
          $ref: "#/definitions/EntitySpecificationRelationship"
      relatedParty:
        type: "array"
        description: "Parties who manage or otherwise have an interest in this specification"
        items:
          $ref: "#/definitions/RelatedParty"
      specCharacteristic:
        type: "array"
        description: "List of characteristics that the entity can take"
        items:
          $ref: "#/definitions/CharacteristicSpecification"
      targetEntitySchema:
        description: "Pointer to a schema that defines the target entity"
        $ref: "#/definitions/TargetEntitySchema"
      validFor:
        description: "The period for which this REST resource is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "EntitySpecification is a class that offers characteristics to describe\
      \ a type of entity. Entities are generic constructs that may be used to describe\
      \ bespoke business entities that are not effectively covered by the existing\
      \ SID model.\nFunctionally, the entity specification acts as a template by which\
      \ entities may be instantiated and described. By sharing the same specification,\
      \ these entities would therefore share the same set of characteristics.\nNote:\
      \ The ‘configurable’ attribute on the specCharacteristics determines if an entity\
      \ instantiated from the entity specification can override the value of the attribute.\
      \ When set to false, the entity instance may not define a value that differs\
      \ from the value in the specification."
    example:
      isBundle: true
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      targetEntitySchema:
        '@type': "@type"
        '@schemaLocation': "@schemaLocation"
      '@type': "@type"
      description: "description"
      specCharacteristic:
      - validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        maxCardinality: 6
        minCardinality: 1
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        charSpecRelationship:
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        characteristicValueSpecification:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        name: "name"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      - validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        maxCardinality: 6
        minCardinality: 1
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        charSpecRelationship:
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        characteristicValueSpecification:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        name: "name"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      entitySpecRelationship:
      - associationSpec:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@referredType': "@referredType"
        role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - associationSpec:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@referredType': "@referredType"
        role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      version: "version"
      attachment:
      - '@referredType': "@referredType"
        attachmentType: "video"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "Photograph of the Product"
        mimeType: "mimeType"
        content: "content"
        url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
        size:
          amount: 0.8008282
          units: "units"
        '@baseType': "@baseType"
        name: "name"
        id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
        href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        attachmentType: "video"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "Photograph of the Product"
        mimeType: "mimeType"
        content: "content"
        url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
        size:
          amount: 0.8008282
          units: "units"
        '@baseType': "@baseType"
        name: "name"
        id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
        href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      constraint:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  EntitySpecification_Create:
    type: "object"
    required:
    - "@type"
    - "name"
    properties:
      description:
        type: "string"
        description: "Description of the specification"
      isBundle:
        type: "boolean"
        description: "isBundle determines whether specification represents a single\
          \ specification (false), or a bundle of specifications (true)."
      lastUpdate:
        type: "string"
        format: "date-time"
        description: "Date and time of the last update of the specification"
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this catalog\
          \ item"
      name:
        type: "string"
        description: "Name given to the specification"
      version:
        type: "string"
        description: "specification version"
      attachment:
        type: "array"
        description: "Attachments that may be of relevance to this specification,\
          \ such as picture, document, media"
        items:
          $ref: "#/definitions/AttachmentRefOrValue"
      constraint:
        type: "array"
        description: "This is a list of constraint references applied to this specification"
        items:
          $ref: "#/definitions/ConstraintRef"
      entitySpecRelationship:
        type: "array"
        description: "Relationship to another specification"
        items:
          $ref: "#/definitions/EntitySpecificationRelationship"
      relatedParty:
        type: "array"
        description: "Parties who manage or otherwise have an interest in this specification"
        items:
          $ref: "#/definitions/RelatedParty"
      specCharacteristic:
        type: "array"
        description: "List of characteristics that the entity can take"
        items:
          $ref: "#/definitions/CharacteristicSpecification"
      targetEntitySchema:
        description: "Pointer to a schema that defines the target entity"
        $ref: "#/definitions/TargetEntitySchema"
      validFor:
        description: "The period for which this REST resource is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "EntitySpecification is a class that offers characteristics to describe\
      \ a type of entity. Entities are generic constructs that may be used to describe\
      \ bespoke business entities that are not effectively covered by the existing\
      \ SID model.\nFunctionally, the entity specification acts as a template by which\
      \ entities may be instantiated and described. By sharing the same specification,\
      \ these entities would therefore share the same set of characteristics.\nNote:\
      \ The ‘configurable’ attribute on the specCharacteristics determines if an entity\
      \ instantiated from the entity specification can override the value of the attribute.\
      \ When set to false, the entity instance may not define a value that differs\
      \ from the value in the specification.\nSkipped properties: id,href"
    example:
      isBundle: true
      lifecycleStatus: "lifecycleStatus"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      targetEntitySchema:
        '@type': "@type"
        '@schemaLocation': "@schemaLocation"
      '@type': "@type"
      description: "description"
      specCharacteristic:
      - validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        maxCardinality: 6
        minCardinality: 1
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        charSpecRelationship:
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        characteristicValueSpecification:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        name: "name"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      - validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        maxCardinality: 6
        minCardinality: 1
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        charSpecRelationship:
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        characteristicValueSpecification:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        name: "name"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      entitySpecRelationship:
      - associationSpec:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@referredType': "@referredType"
        role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - associationSpec:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@referredType': "@referredType"
        role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      version: "version"
      attachment:
      - '@referredType': "@referredType"
        attachmentType: "video"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "Photograph of the Product"
        mimeType: "mimeType"
        content: "content"
        url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
        size:
          amount: 0.8008282
          units: "units"
        '@baseType': "@baseType"
        name: "name"
        id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
        href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        attachmentType: "video"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "Photograph of the Product"
        mimeType: "mimeType"
        content: "content"
        url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
        size:
          amount: 0.8008282
          units: "units"
        '@baseType': "@baseType"
        name: "name"
        id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
        href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
        '@schemaLocation': "http://example.com/aeiou"
      '@baseType': "@baseType"
      lastUpdate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      constraint:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      '@schemaLocation': "http://example.com/aeiou"
  EntitySpecification_Update:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of the specification"
      isBundle:
        type: "boolean"
        description: "isBundle determines whether specification represents a single\
          \ specification (false), or a bundle of specifications (true)."
      lifecycleStatus:
        type: "string"
        description: "Used to indicate the current lifecycle status of this catalog\
          \ item"
      name:
        type: "string"
        description: "Name given to the specification"
      version:
        type: "string"
        description: "specification version"
      attachment:
        type: "array"
        description: "Attachments that may be of relevance to this specification,\
          \ such as picture, document, media"
        items:
          $ref: "#/definitions/AttachmentRefOrValue"
      constraint:
        type: "array"
        description: "This is a list of constraint references applied to this specification"
        items:
          $ref: "#/definitions/ConstraintRef"
      entitySpecRelationship:
        type: "array"
        description: "Relationship to another specification"
        items:
          $ref: "#/definitions/EntitySpecificationRelationship"
      relatedParty:
        type: "array"
        description: "Parties who manage or otherwise have an interest in this specification"
        items:
          $ref: "#/definitions/RelatedParty"
      specCharacteristic:
        type: "array"
        description: "List of characteristics that the entity can take"
        items:
          $ref: "#/definitions/CharacteristicSpecification"
      targetEntitySchema:
        description: "Pointer to a schema that defines the target entity"
        $ref: "#/definitions/TargetEntitySchema"
      validFor:
        description: "The period for which this REST resource is valid"
        $ref: "#/definitions/TimePeriod"
    description: "EntitySpecification is a class that offers characteristics to describe\
      \ a type of entity. Entities are generic constructs that may be used to describe\
      \ bespoke business entities that are not effectively covered by the existing\
      \ SID model.\nFunctionally, the entity specification acts as a template by which\
      \ entities may be instantiated and described. By sharing the same specification,\
      \ these entities would therefore share the same set of characteristics.\nNote:\
      \ The ‘configurable’ attribute on the specCharacteristics determines if an entity\
      \ instantiated from the entity specification can override the value of the attribute.\
      \ When set to false, the entity instance may not define a value that differs\
      \ from the value in the specification.\nSkipped properties: id,href,lastUpdate,@type,@schemaLocation,@baseType"
    example:
      isBundle: true
      lifecycleStatus: "lifecycleStatus"
      attachment:
      - '@referredType': "@referredType"
        attachmentType: "video"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "Photograph of the Product"
        mimeType: "mimeType"
        content: "content"
        url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
        size:
          amount: 0.8008282
          units: "units"
        '@baseType': "@baseType"
        name: "name"
        id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
        href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        attachmentType: "video"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "Photograph of the Product"
        mimeType: "mimeType"
        content: "content"
        url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
        size:
          amount: 0.8008282
          units: "units"
        '@baseType': "@baseType"
        name: "name"
        id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
        href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
        '@schemaLocation': "http://example.com/aeiou"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      targetEntitySchema:
        '@type': "@type"
        '@schemaLocation': "@schemaLocation"
      name: "name"
      description: "description"
      constraint:
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      - '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
        version: "version"
      specCharacteristic:
      - validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        maxCardinality: 6
        minCardinality: 1
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        charSpecRelationship:
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        characteristicValueSpecification:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        name: "name"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      - validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        '@valueSchemaLocation': "@valueSchemaLocation"
        isUnique: true
        description: "description"
        maxCardinality: 6
        minCardinality: 1
        regex: "regex"
        '@baseType': "@baseType"
        valueType: "valueType"
        charSpecRelationship:
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          parentSpecificationId: "parentSpecificationId"
          '@type': "@type"
          name: "name"
          characteristicSpecificationId: "characteristicSpecificationId"
          parentSpecificationHref: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        characteristicValueSpecification:
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        - rangeInterval: "rangeInterval"
          isDefault: true
          regex: "regex"
          valueTo: 5
          unitOfMeasure: "unitOfMeasure"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          valueType: "valueType"
          '@schemaLocation': "http://example.com/aeiou"
          value: {}
          valueFrom: 5
        name: "name"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
        extensible: true
        configurable: true
      entitySpecRelationship:
      - associationSpec:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@referredType': "@referredType"
        role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - associationSpec:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        '@referredType': "@referredType"
        role: "role"
        relationshipType: "relationshipType"
        '@baseType': "@baseType"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      relatedParty:
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      - '@referredType': "@referredType"
        role: "role"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  EntitySpecificationRef:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      version:
        type: "string"
        description: "EntitySpecification version"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "reference to an EntitySpecification object"
    example:
      '@referredType': "@referredType"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      version: "version"
  EntitySpecificationRelationship:
    type: "object"
    required:
    - "relationshipType"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      relationshipType:
        type: "string"
        description: "Type of relationship such as migration, substitution, dependency,\
          \ exclusivity"
      role:
        type: "string"
        description: "The association role for this entity specification"
      associationSpec:
        description: "A specification for an association used by this relationship"
        $ref: "#/definitions/AssociationSpecificationRef"
      validFor:
        description: "The period for which the entitySpecRelationship is valid"
        $ref: "#/definitions/TimePeriod"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "A migration, substitution, dependency or exclusivity relationship\
      \ between/among entity specifications."
    example:
      associationSpec:
        '@referredType': "@referredType"
        '@baseType': "@baseType"
        '@type': "@type"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
      '@referredType': "@referredType"
      role: "role"
      relationshipType: "relationshipType"
      '@baseType': "@baseType"
      validFor:
        startDateTime: "1985-04-12T23:20:50.52Z"
        endDateTime: "1985-04-12T23:20:50.52Z"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  ExportJob:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the export job"
      href:
        type: "string"
        format: "uri"
        description: "Reference of the export job"
      completionDate:
        type: "string"
        format: "date-time"
        description: "Data at which the job was completed"
      contentType:
        type: "string"
        description: "The format of the exported data"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was created"
      errorLog:
        type: "string"
        description: "Reason for failure"
      path:
        type: "string"
        description: "URL of the root resource acting as the source for streaming\
          \ content to the file specified by the export job"
      query:
        type: "string"
        description: "Used to scope the exported data"
      url:
        type: "string"
        format: "uri"
        description: "URL of the file containing the data to be exported"
      status:
        description: "Status of the export job (not started, running, succeeded, failed)"
        $ref: "#/definitions/JobStateType"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Represents a task used to export resources to a file"
    example:
      '@type': "@type"
      query: "query"
      errorLog: "errorLog"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      url: "http://example.com/aeiou"
      path: "path"
      '@baseType': "@baseType"
      completionDate: "2000-01-23T04:56:07.000+00:00"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
      contentType: "contentType"
      status: {}
  ExportJob_Create:
    type: "object"
    required:
    - "url"
    properties:
      completionDate:
        type: "string"
        format: "date-time"
        description: "Data at which the job was completed"
      contentType:
        type: "string"
        description: "The format of the exported data"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was created"
      errorLog:
        type: "string"
        description: "Reason for failure"
      path:
        type: "string"
        description: "URL of the root resource acting as the source for streaming\
          \ content to the file specified by the export job"
      query:
        type: "string"
        description: "Used to scope the exported data"
      url:
        type: "string"
        format: "uri"
        description: "URL of the file containing the data to be exported"
      status:
        description: "Status of the export job (not started, running, succeeded, failed)"
        $ref: "#/definitions/JobStateType"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Represents a task used to export resources to a file\nSkipped properties:\
      \ id,href"
    example:
      path: "path"
      '@baseType': "@baseType"
      '@type': "@type"
      query: "query"
      completionDate: "2000-01-23T04:56:07.000+00:00"
      errorLog: "errorLog"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      '@schemaLocation': "http://example.com/aeiou"
      contentType: "contentType"
      url: "http://example.com/aeiou"
      status: {}
  Extensible:
    type: "object"
    properties:
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Base Extensible schema for use in TMForum Open-APIs"
  ImportJob:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Identifier of the import job"
      href:
        type: "string"
        format: "uri"
        description: "Reference of the import job"
      completionDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was completed"
      contentType:
        type: "string"
        description: "Indicates the format of the imported data"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was created"
      errorLog:
        type: "string"
        description: "Reason for failure if status is failed"
      path:
        type: "string"
        description: "URL of the root resource where the content of the file specified\
          \ by the import job must be applied"
      url:
        type: "string"
        format: "uri"
        description: "URL of the file containing the data to be imported"
      status:
        description: "Status of the import job (not started, running, succeeded, failed)"
        $ref: "#/definitions/JobStateType"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Represents a task used to import resources from a file"
    example:
      path: "path"
      '@baseType': "@baseType"
      '@type': "@type"
      completionDate: "2000-01-23T04:56:07.000+00:00"
      errorLog: "errorLog"
      id: "id"
      href: "http://example.com/aeiou"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      '@schemaLocation': "http://example.com/aeiou"
      contentType: "contentType"
      url: "http://example.com/aeiou"
      status: {}
  ImportJob_Create:
    type: "object"
    required:
    - "url"
    properties:
      completionDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was completed"
      contentType:
        type: "string"
        description: "Indicates the format of the imported data"
      creationDate:
        type: "string"
        format: "date-time"
        description: "Date at which the job was created"
      errorLog:
        type: "string"
        description: "Reason for failure if status is failed"
      path:
        type: "string"
        description: "URL of the root resource where the content of the file specified\
          \ by the import job must be applied"
      url:
        type: "string"
        format: "uri"
        description: "URL of the file containing the data to be imported"
      status:
        description: "Status of the import job (not started, running, succeeded, failed)"
        $ref: "#/definitions/JobStateType"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
    description: "Represents a task used to import resources from a file\nSkipped\
      \ properties: id,href"
    example:
      path: "path"
      '@baseType': "@baseType"
      '@type': "@type"
      completionDate: "2000-01-23T04:56:07.000+00:00"
      errorLog: "errorLog"
      creationDate: "2000-01-23T04:56:07.000+00:00"
      '@schemaLocation': "http://example.com/aeiou"
      contentType: "contentType"
      url: "http://example.com/aeiou"
      status: {}
  JobStateType:
    type: "string"
    description: "Valid values for the state of a batch job (e.g. catalog import)"
    enum:
    - "Not Started"
    - "Running"
    - "Succeeded"
    - "Failed"
  Quantity:
    type: "object"
    properties:
      amount:
        type: "number"
        format: "float"
        description: "Numeric value in a given unit"
        default: 1.0
      units:
        type: "string"
        description: "Unit"
    description: "An amount in a given unit"
    example:
      amount: 0.8008282
      units: "units"
  RelatedParty:
    type: "object"
    required:
    - "@referredType"
    - "id"
    properties:
      id:
        type: "string"
        description: "unique identifier"
      href:
        type: "string"
        format: "uri"
        description: "Hyperlink reference"
      name:
        type: "string"
        description: "Name of the related entity."
      role:
        type: "string"
        description: "Role played by the related party"
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class"
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class Extensible name"
      '@referredType':
        type: "string"
        description: "The actual type of the target instance when needed for disambiguation."
    description: "Related Entity reference. A related party defines party or party\
      \ role linked to a specific entity."
    example:
      '@referredType': "@referredType"
      role: "role"
      '@baseType': "@baseType"
      '@type': "@type"
      name: "name"
      id: "id"
      href: "http://example.com/aeiou"
      '@schemaLocation': "http://example.com/aeiou"
  TargetEntitySchema:
    type: "object"
    required:
    - "@schemaLocation"
    - "@type"
    properties:
      '@schemaLocation':
        type: "string"
        description: "This field provides a link to the schema describing the target\
          \ entity"
      '@type':
        type: "string"
        description: "Class type of the target entity"
    description: "The reference object to the schema and type of target entity which\
      \ is described by a specification"
    example:
      '@type': "@type"
      '@schemaLocation': "@schemaLocation"
  TimePeriod:
    type: "object"
    properties:
      endDateTime:
        type: "string"
        format: "date-time"
        example: "1985-04-12T23:20:50.52Z"
        description: "End of the time period, using IETC-RFC-3339 format"
      startDateTime:
        type: "string"
        format: "date-time"
        example: "1985-04-12T23:20:50.52Z"
        description: "Start of the time period, using IETC-RFC-3339 format"
    description: "A period of time, either as a deadline (endDateTime only) a startDateTime\
      \ only, or both"
    example:
      startDateTime: "1985-04-12T23:20:50.52Z"
      endDateTime: "1985-04-12T23:20:50.52Z"
  EventSubscription:
    type: "object"
    required:
    - "callback"
    - "id"
    properties:
      id:
        type: "string"
        description: "Id of the listener"
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
      id: "id"
  EventSubscriptionInput:
    type: "object"
    required:
    - "callback"
    properties:
      callback:
        type: "string"
        description: "The callback being registered."
      query:
        type: "string"
        description: "additional data to be passed"
    description: "Sets the communication endpoint address the service instance must\
      \ use to deliver notification information"
    example:
      query: "query"
      callback: "callback"
  EntityCatalogCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCatalogCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entityCatalog:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCatalogCreateEventPayload:
    type: "object"
    properties:
      entityCatalog:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCatalog"
    description: "The event data structure"
    example:
      entityCatalog:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCatalogAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCatalogAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        entityCatalog:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCatalogAttributeValueChangeEventPayload:
    type: "object"
    properties:
      entityCatalog:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCatalog"
    description: "The event data structure"
    example:
      entityCatalog:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCatalogStateChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCatalogStateChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entityCatalog:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCatalogStateChangeEventPayload:
    type: "object"
    properties:
      entityCatalog:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCatalog"
    description: "The event data structure"
    example:
      entityCatalog:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCatalogDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCatalogDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entityCatalog:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCatalogDeleteEventPayload:
    type: "object"
    properties:
      entityCatalog:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCatalog"
    description: "The event data structure"
    example:
      entityCatalog:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCatalogBatchEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCatalogBatchEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entityCatalog:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCatalogBatchEventPayload:
    type: "object"
    properties:
      entityCatalog:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCatalog"
    description: "The event data structure"
    example:
      entityCatalog:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCategoryCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCategoryCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entityCategory:
          entityCatalogItem:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          childCategory:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          isRoot: true
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          version: "version"
          parentId: "parentId"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCategoryCreateEventPayload:
    type: "object"
    properties:
      entityCategory:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCategory"
    description: "The event data structure"
    example:
      entityCategory:
        entityCatalogItem:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        childCategory:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        isRoot: true
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        version: "version"
        parentId: "parentId"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCategoryAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCategoryAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        entityCategory:
          entityCatalogItem:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          childCategory:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          isRoot: true
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          version: "version"
          parentId: "parentId"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCategoryAttributeValueChangeEventPayload:
    type: "object"
    properties:
      entityCategory:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCategory"
    description: "The event data structure"
    example:
      entityCategory:
        entityCatalogItem:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        childCategory:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        isRoot: true
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        version: "version"
        parentId: "parentId"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCategoryStateChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCategoryStateChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entityCategory:
          entityCatalogItem:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          childCategory:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          isRoot: true
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          version: "version"
          parentId: "parentId"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCategoryStateChangeEventPayload:
    type: "object"
    properties:
      entityCategory:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCategory"
    description: "The event data structure"
    example:
      entityCategory:
        entityCatalogItem:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        childCategory:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        isRoot: true
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        version: "version"
        parentId: "parentId"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCategoryDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCategoryDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entityCategory:
          entityCatalogItem:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          childCategory:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          isRoot: true
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          version: "version"
          parentId: "parentId"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCategoryDeleteEventPayload:
    type: "object"
    properties:
      entityCategory:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCategory"
    description: "The event data structure"
    example:
      entityCategory:
        entityCatalogItem:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        childCategory:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        isRoot: true
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        version: "version"
        parentId: "parentId"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCatalogItemCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCatalogItemCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entityCatalogItem:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          specification:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCatalogItemCreateEventPayload:
    type: "object"
    properties:
      entityCatalogItem:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCatalogItem"
    description: "The event data structure"
    example:
      entityCatalogItem:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        specification:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCatalogItemAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCatalogItemAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        entityCatalogItem:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          specification:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCatalogItemAttributeValueChangeEventPayload:
    type: "object"
    properties:
      entityCatalogItem:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCatalogItem"
    description: "The event data structure"
    example:
      entityCatalogItem:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        specification:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCatalogItemStateChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCatalogItemStateChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entityCatalogItem:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          specification:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCatalogItemStateChangeEventPayload:
    type: "object"
    properties:
      entityCatalogItem:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCatalogItem"
    description: "The event data structure"
    example:
      entityCatalogItem:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        specification:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        '@schemaLocation': "http://example.com/aeiou"
  EntityCatalogItemDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntityCatalogItemDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entityCatalogItem:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          specification:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          category:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntityCatalogItemDeleteEventPayload:
    type: "object"
    properties:
      entityCatalogItem:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntityCatalogItem"
    description: "The event data structure"
    example:
      entityCatalogItem:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        specification:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        id: "id"
        href: "http://example.com/aeiou"
        category:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        '@schemaLocation': "http://example.com/aeiou"
  EntitySpecificationCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntitySpecificationCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entitySpecification:
          isBundle: true
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          targetEntitySchema:
            '@type': "@type"
            '@schemaLocation': "@schemaLocation"
          '@type': "@type"
          description: "description"
          specCharacteristic:
          - validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            maxCardinality: 6
            minCardinality: 1
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            charSpecRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            characteristicValueSpecification:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          - validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            maxCardinality: 6
            minCardinality: 1
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            charSpecRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            characteristicValueSpecification:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          entitySpecRelationship:
          - associationSpec:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@referredType': "@referredType"
            role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - associationSpec:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@referredType': "@referredType"
            role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          attachment:
          - '@referredType': "@referredType"
            attachmentType: "video"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "Photograph of the Product"
            mimeType: "mimeType"
            content: "content"
            url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
            size:
              amount: 0.8008282
              units: "units"
            '@baseType': "@baseType"
            name: "name"
            id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
            href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            attachmentType: "video"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "Photograph of the Product"
            mimeType: "mimeType"
            content: "content"
            url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
            size:
              amount: 0.8008282
              units: "units"
            '@baseType': "@baseType"
            name: "name"
            id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
            href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntitySpecificationCreateEventPayload:
    type: "object"
    properties:
      entitySpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntitySpecification"
    description: "The event data structure"
    example:
      entitySpecification:
        isBundle: true
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        targetEntitySchema:
          '@type': "@type"
          '@schemaLocation': "@schemaLocation"
        '@type': "@type"
        description: "description"
        specCharacteristic:
        - validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          maxCardinality: 6
          minCardinality: 1
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          charSpecRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          characteristicValueSpecification:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        - validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          maxCardinality: 6
          minCardinality: 1
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          charSpecRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          characteristicValueSpecification:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        entitySpecRelationship:
        - associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@referredType': "@referredType"
          role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@referredType': "@referredType"
          role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        attachment:
        - '@referredType': "@referredType"
          attachmentType: "video"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "Photograph of the Product"
          mimeType: "mimeType"
          content: "content"
          url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
          size:
            amount: 0.8008282
            units: "units"
          '@baseType': "@baseType"
          name: "name"
          id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
          href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          attachmentType: "video"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "Photograph of the Product"
          mimeType: "mimeType"
          content: "content"
          url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
          size:
            amount: 0.8008282
            units: "units"
          '@baseType': "@baseType"
          name: "name"
          id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
          href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  EntitySpecificationAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntitySpecificationAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        entitySpecification:
          isBundle: true
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          targetEntitySchema:
            '@type': "@type"
            '@schemaLocation': "@schemaLocation"
          '@type': "@type"
          description: "description"
          specCharacteristic:
          - validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            maxCardinality: 6
            minCardinality: 1
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            charSpecRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            characteristicValueSpecification:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          - validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            maxCardinality: 6
            minCardinality: 1
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            charSpecRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            characteristicValueSpecification:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          entitySpecRelationship:
          - associationSpec:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@referredType': "@referredType"
            role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - associationSpec:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@referredType': "@referredType"
            role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          attachment:
          - '@referredType': "@referredType"
            attachmentType: "video"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "Photograph of the Product"
            mimeType: "mimeType"
            content: "content"
            url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
            size:
              amount: 0.8008282
              units: "units"
            '@baseType': "@baseType"
            name: "name"
            id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
            href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            attachmentType: "video"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "Photograph of the Product"
            mimeType: "mimeType"
            content: "content"
            url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
            size:
              amount: 0.8008282
              units: "units"
            '@baseType': "@baseType"
            name: "name"
            id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
            href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntitySpecificationAttributeValueChangeEventPayload:
    type: "object"
    properties:
      entitySpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntitySpecification"
    description: "The event data structure"
    example:
      entitySpecification:
        isBundle: true
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        targetEntitySchema:
          '@type': "@type"
          '@schemaLocation': "@schemaLocation"
        '@type': "@type"
        description: "description"
        specCharacteristic:
        - validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          maxCardinality: 6
          minCardinality: 1
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          charSpecRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          characteristicValueSpecification:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        - validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          maxCardinality: 6
          minCardinality: 1
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          charSpecRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          characteristicValueSpecification:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        entitySpecRelationship:
        - associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@referredType': "@referredType"
          role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@referredType': "@referredType"
          role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        attachment:
        - '@referredType': "@referredType"
          attachmentType: "video"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "Photograph of the Product"
          mimeType: "mimeType"
          content: "content"
          url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
          size:
            amount: 0.8008282
            units: "units"
          '@baseType': "@baseType"
          name: "name"
          id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
          href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          attachmentType: "video"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "Photograph of the Product"
          mimeType: "mimeType"
          content: "content"
          url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
          size:
            amount: 0.8008282
            units: "units"
          '@baseType': "@baseType"
          name: "name"
          id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
          href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  EntitySpecificationStateChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntitySpecificationStateChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entitySpecification:
          isBundle: true
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          targetEntitySchema:
            '@type': "@type"
            '@schemaLocation': "@schemaLocation"
          '@type': "@type"
          description: "description"
          specCharacteristic:
          - validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            maxCardinality: 6
            minCardinality: 1
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            charSpecRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            characteristicValueSpecification:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          - validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            maxCardinality: 6
            minCardinality: 1
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            charSpecRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            characteristicValueSpecification:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          entitySpecRelationship:
          - associationSpec:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@referredType': "@referredType"
            role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - associationSpec:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@referredType': "@referredType"
            role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          attachment:
          - '@referredType': "@referredType"
            attachmentType: "video"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "Photograph of the Product"
            mimeType: "mimeType"
            content: "content"
            url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
            size:
              amount: 0.8008282
              units: "units"
            '@baseType': "@baseType"
            name: "name"
            id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
            href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            attachmentType: "video"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "Photograph of the Product"
            mimeType: "mimeType"
            content: "content"
            url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
            size:
              amount: 0.8008282
              units: "units"
            '@baseType': "@baseType"
            name: "name"
            id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
            href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntitySpecificationStateChangeEventPayload:
    type: "object"
    properties:
      entitySpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntitySpecification"
    description: "The event data structure"
    example:
      entitySpecification:
        isBundle: true
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        targetEntitySchema:
          '@type': "@type"
          '@schemaLocation': "@schemaLocation"
        '@type': "@type"
        description: "description"
        specCharacteristic:
        - validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          maxCardinality: 6
          minCardinality: 1
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          charSpecRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          characteristicValueSpecification:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        - validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          maxCardinality: 6
          minCardinality: 1
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          charSpecRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          characteristicValueSpecification:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        entitySpecRelationship:
        - associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@referredType': "@referredType"
          role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@referredType': "@referredType"
          role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        attachment:
        - '@referredType': "@referredType"
          attachmentType: "video"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "Photograph of the Product"
          mimeType: "mimeType"
          content: "content"
          url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
          size:
            amount: 0.8008282
            units: "units"
          '@baseType': "@baseType"
          name: "name"
          id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
          href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          attachmentType: "video"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "Photograph of the Product"
          mimeType: "mimeType"
          content: "content"
          url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
          size:
            amount: 0.8008282
            units: "units"
          '@baseType': "@baseType"
          name: "name"
          id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
          href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  EntitySpecificationDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/EntitySpecificationDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        entitySpecification:
          isBundle: true
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          targetEntitySchema:
            '@type': "@type"
            '@schemaLocation': "@schemaLocation"
          '@type': "@type"
          description: "description"
          specCharacteristic:
          - validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            maxCardinality: 6
            minCardinality: 1
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            charSpecRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            characteristicValueSpecification:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          - validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            '@valueSchemaLocation': "@valueSchemaLocation"
            isUnique: true
            description: "description"
            maxCardinality: 6
            minCardinality: 1
            regex: "regex"
            '@baseType': "@baseType"
            valueType: "valueType"
            charSpecRelationship:
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            - relationshipType: "relationshipType"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              parentSpecificationId: "parentSpecificationId"
              '@type': "@type"
              name: "name"
              characteristicSpecificationId: "characteristicSpecificationId"
              parentSpecificationHref: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            characteristicValueSpecification:
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            - rangeInterval: "rangeInterval"
              isDefault: true
              regex: "regex"
              valueTo: 5
              unitOfMeasure: "unitOfMeasure"
              '@baseType': "@baseType"
              validFor:
                startDateTime: "1985-04-12T23:20:50.52Z"
                endDateTime: "1985-04-12T23:20:50.52Z"
              '@type': "@type"
              valueType: "valueType"
              '@schemaLocation': "http://example.com/aeiou"
              value: {}
              valueFrom: 5
            name: "name"
            id: "id"
            '@schemaLocation': "http://example.com/aeiou"
            extensible: true
            configurable: true
          entitySpecRelationship:
          - associationSpec:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@referredType': "@referredType"
            role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - associationSpec:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
            '@referredType': "@referredType"
            role: "role"
            relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          relatedParty:
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          attachment:
          - '@referredType': "@referredType"
            attachmentType: "video"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "Photograph of the Product"
            mimeType: "mimeType"
            content: "content"
            url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
            size:
              amount: 0.8008282
              units: "units"
            '@baseType': "@baseType"
            name: "name"
            id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
            href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
            '@schemaLocation': "http://example.com/aeiou"
          - '@referredType': "@referredType"
            attachmentType: "video"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            description: "Photograph of the Product"
            mimeType: "mimeType"
            content: "content"
            url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
            size:
              amount: 0.8008282
              units: "units"
            '@baseType': "@baseType"
            name: "name"
            id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
            href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
            '@schemaLocation': "http://example.com/aeiou"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  EntitySpecificationDeleteEventPayload:
    type: "object"
    properties:
      entitySpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/EntitySpecification"
    description: "The event data structure"
    example:
      entitySpecification:
        isBundle: true
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        targetEntitySchema:
          '@type': "@type"
          '@schemaLocation': "@schemaLocation"
        '@type': "@type"
        description: "description"
        specCharacteristic:
        - validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          maxCardinality: 6
          minCardinality: 1
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          charSpecRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          characteristicValueSpecification:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        - validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          '@valueSchemaLocation': "@valueSchemaLocation"
          isUnique: true
          description: "description"
          maxCardinality: 6
          minCardinality: 1
          regex: "regex"
          '@baseType': "@baseType"
          valueType: "valueType"
          charSpecRelationship:
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          - relationshipType: "relationshipType"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            parentSpecificationId: "parentSpecificationId"
            '@type': "@type"
            name: "name"
            characteristicSpecificationId: "characteristicSpecificationId"
            parentSpecificationHref: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          characteristicValueSpecification:
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          - rangeInterval: "rangeInterval"
            isDefault: true
            regex: "regex"
            valueTo: 5
            unitOfMeasure: "unitOfMeasure"
            '@baseType': "@baseType"
            validFor:
              startDateTime: "1985-04-12T23:20:50.52Z"
              endDateTime: "1985-04-12T23:20:50.52Z"
            '@type': "@type"
            valueType: "valueType"
            '@schemaLocation': "http://example.com/aeiou"
            value: {}
            valueFrom: 5
          name: "name"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
          extensible: true
          configurable: true
        entitySpecRelationship:
        - associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@referredType': "@referredType"
          role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          '@referredType': "@referredType"
          role: "role"
          relationshipType: "relationshipType"
          '@baseType': "@baseType"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        relatedParty:
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        attachment:
        - '@referredType': "@referredType"
          attachmentType: "video"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "Photograph of the Product"
          mimeType: "mimeType"
          content: "content"
          url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
          size:
            amount: 0.8008282
            units: "units"
          '@baseType': "@baseType"
          name: "name"
          id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
          href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
          '@schemaLocation': "http://example.com/aeiou"
        - '@referredType': "@referredType"
          attachmentType: "video"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "Photograph of the Product"
          mimeType: "mimeType"
          content: "content"
          url: "http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f"
          size:
            amount: 0.8008282
            units: "units"
          '@baseType': "@baseType"
          name: "name"
          id: "4aafacbd-11ff-4dc8-b445-305f2215715f"
          href: "http://host/Attachment/4aafacbd-11ff-4dc8-b445-305f2215715f"
          '@schemaLocation': "http://example.com/aeiou"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        id: "id"
        href: "http://example.com/aeiou"
        '@schemaLocation': "http://example.com/aeiou"
  AssociationSpecificationCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/AssociationSpecificationCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        associationSpecification:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          associationRoleSpec:
          - role: "role"
            minQuantity: 1
            '@baseType': "@baseType"
            maxQuantity: 6
            entityType: "entityType"
            '@type': "@type"
            isSource: true
            aggregation: "aggregation"
            defaultQuantity: 0
            '@schemaLocation': "http://example.com/aeiou"
            isNavigable: true
          - role: "role"
            minQuantity: 1
            '@baseType': "@baseType"
            maxQuantity: 6
            entityType: "entityType"
            '@type': "@type"
            isSource: true
            aggregation: "aggregation"
            defaultQuantity: 0
            '@schemaLocation': "http://example.com/aeiou"
            isNavigable: true
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          href: "http://example.com/aeiou"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  AssociationSpecificationCreateEventPayload:
    type: "object"
    properties:
      associationSpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/AssociationSpecification"
    description: "The event data structure"
    example:
      associationSpecification:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        associationRoleSpec:
        - role: "role"
          minQuantity: 1
          '@baseType': "@baseType"
          maxQuantity: 6
          entityType: "entityType"
          '@type': "@type"
          isSource: true
          aggregation: "aggregation"
          defaultQuantity: 0
          '@schemaLocation': "http://example.com/aeiou"
          isNavigable: true
        - role: "role"
          minQuantity: 1
          '@baseType': "@baseType"
          maxQuantity: 6
          entityType: "entityType"
          '@type': "@type"
          isSource: true
          aggregation: "aggregation"
          defaultQuantity: 0
          '@schemaLocation': "http://example.com/aeiou"
          isNavigable: true
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        href: "http://example.com/aeiou"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
  AssociationSpecificationAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/AssociationSpecificationAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        associationSpecification:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          associationRoleSpec:
          - role: "role"
            minQuantity: 1
            '@baseType': "@baseType"
            maxQuantity: 6
            entityType: "entityType"
            '@type': "@type"
            isSource: true
            aggregation: "aggregation"
            defaultQuantity: 0
            '@schemaLocation': "http://example.com/aeiou"
            isNavigable: true
          - role: "role"
            minQuantity: 1
            '@baseType': "@baseType"
            maxQuantity: 6
            entityType: "entityType"
            '@type': "@type"
            isSource: true
            aggregation: "aggregation"
            defaultQuantity: 0
            '@schemaLocation': "http://example.com/aeiou"
            isNavigable: true
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          href: "http://example.com/aeiou"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  AssociationSpecificationAttributeValueChangeEventPayload:
    type: "object"
    properties:
      associationSpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/AssociationSpecification"
    description: "The event data structure"
    example:
      associationSpecification:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        associationRoleSpec:
        - role: "role"
          minQuantity: 1
          '@baseType': "@baseType"
          maxQuantity: 6
          entityType: "entityType"
          '@type': "@type"
          isSource: true
          aggregation: "aggregation"
          defaultQuantity: 0
          '@schemaLocation': "http://example.com/aeiou"
          isNavigable: true
        - role: "role"
          minQuantity: 1
          '@baseType': "@baseType"
          maxQuantity: 6
          entityType: "entityType"
          '@type': "@type"
          isSource: true
          aggregation: "aggregation"
          defaultQuantity: 0
          '@schemaLocation': "http://example.com/aeiou"
          isNavigable: true
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        href: "http://example.com/aeiou"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
  AssociationSpecificationStateChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/AssociationSpecificationStateChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        associationSpecification:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          associationRoleSpec:
          - role: "role"
            minQuantity: 1
            '@baseType': "@baseType"
            maxQuantity: 6
            entityType: "entityType"
            '@type': "@type"
            isSource: true
            aggregation: "aggregation"
            defaultQuantity: 0
            '@schemaLocation': "http://example.com/aeiou"
            isNavigable: true
          - role: "role"
            minQuantity: 1
            '@baseType': "@baseType"
            maxQuantity: 6
            entityType: "entityType"
            '@type': "@type"
            isSource: true
            aggregation: "aggregation"
            defaultQuantity: 0
            '@schemaLocation': "http://example.com/aeiou"
            isNavigable: true
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          href: "http://example.com/aeiou"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  AssociationSpecificationStateChangeEventPayload:
    type: "object"
    properties:
      associationSpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/AssociationSpecification"
    description: "The event data structure"
    example:
      associationSpecification:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        associationRoleSpec:
        - role: "role"
          minQuantity: 1
          '@baseType': "@baseType"
          maxQuantity: 6
          entityType: "entityType"
          '@type': "@type"
          isSource: true
          aggregation: "aggregation"
          defaultQuantity: 0
          '@schemaLocation': "http://example.com/aeiou"
          isNavigable: true
        - role: "role"
          minQuantity: 1
          '@baseType': "@baseType"
          maxQuantity: 6
          entityType: "entityType"
          '@type': "@type"
          isSource: true
          aggregation: "aggregation"
          defaultQuantity: 0
          '@schemaLocation': "http://example.com/aeiou"
          isNavigable: true
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        href: "http://example.com/aeiou"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
  AssociationSpecificationDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/AssociationSpecificationDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        associationSpecification:
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          associationRoleSpec:
          - role: "role"
            minQuantity: 1
            '@baseType': "@baseType"
            maxQuantity: 6
            entityType: "entityType"
            '@type': "@type"
            isSource: true
            aggregation: "aggregation"
            defaultQuantity: 0
            '@schemaLocation': "http://example.com/aeiou"
            isNavigable: true
          - role: "role"
            minQuantity: 1
            '@baseType': "@baseType"
            maxQuantity: 6
            entityType: "entityType"
            '@type': "@type"
            isSource: true
            aggregation: "aggregation"
            defaultQuantity: 0
            '@schemaLocation': "http://example.com/aeiou"
            isNavigable: true
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          href: "http://example.com/aeiou"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  AssociationSpecificationDeleteEventPayload:
    type: "object"
    properties:
      associationSpecification:
        description: "The involved resource data for the event"
        $ref: "#/definitions/AssociationSpecification"
    description: "The event data structure"
    example:
      associationSpecification:
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        associationRoleSpec:
        - role: "role"
          minQuantity: 1
          '@baseType': "@baseType"
          maxQuantity: 6
          entityType: "entityType"
          '@type': "@type"
          isSource: true
          aggregation: "aggregation"
          defaultQuantity: 0
          '@schemaLocation': "http://example.com/aeiou"
          isNavigable: true
        - role: "role"
          minQuantity: 1
          '@baseType': "@baseType"
          maxQuantity: 6
          entityType: "entityType"
          '@type': "@type"
          isSource: true
          aggregation: "aggregation"
          defaultQuantity: 0
          '@schemaLocation': "http://example.com/aeiou"
          isNavigable: true
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        href: "http://example.com/aeiou"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
  AssociationCreateEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/AssociationCreateEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        association:
          associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          associationRole:
          - role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            isSource: true
            '@schemaLocation': "http://example.com/aeiou"
            entity:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            isSource: true
            '@schemaLocation': "http://example.com/aeiou"
            entity:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          href: "http://example.com/aeiou"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  AssociationCreateEventPayload:
    type: "object"
    properties:
      association:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Association"
    description: "The event data structure"
    example:
      association:
        associationSpec:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        associationRole:
        - role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          isSource: true
          '@schemaLocation': "http://example.com/aeiou"
          entity:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          isSource: true
          '@schemaLocation': "http://example.com/aeiou"
          entity:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        href: "http://example.com/aeiou"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
  AssociationAttributeValueChangeEvent:
    type: "object"
    properties:
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
      fieldPath:
        type: "string"
        description: "The path identifying the object field concerned by this notification."
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/AssociationAttributeValueChangeEventPayload"
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      fieldPath: "fieldPath"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      title: "title"
      priority: "priority"
      event:
        association:
          associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          associationRole:
          - role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            isSource: true
            '@schemaLocation': "http://example.com/aeiou"
            entity:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            isSource: true
            '@schemaLocation': "http://example.com/aeiou"
            entity:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          href: "http://example.com/aeiou"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  AssociationAttributeValueChangeEventPayload:
    type: "object"
    properties:
      association:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Association"
    description: "The event data structure"
    example:
      association:
        associationSpec:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        associationRole:
        - role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          isSource: true
          '@schemaLocation': "http://example.com/aeiou"
          entity:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          isSource: true
          '@schemaLocation': "http://example.com/aeiou"
          entity:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        href: "http://example.com/aeiou"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
  AssociationStateChangeEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/AssociationStateChangeEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        association:
          associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          associationRole:
          - role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            isSource: true
            '@schemaLocation': "http://example.com/aeiou"
            entity:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            isSource: true
            '@schemaLocation': "http://example.com/aeiou"
            entity:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          href: "http://example.com/aeiou"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  AssociationStateChangeEventPayload:
    type: "object"
    properties:
      association:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Association"
    description: "The event data structure"
    example:
      association:
        associationSpec:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        associationRole:
        - role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          isSource: true
          '@schemaLocation': "http://example.com/aeiou"
          entity:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          isSource: true
          '@schemaLocation': "http://example.com/aeiou"
          entity:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        href: "http://example.com/aeiou"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
  AssociationDeleteEvent:
    type: "object"
    properties:
      event:
        description: "The event payload linked to the involved resource object"
        $ref: "#/definitions/AssociationDeleteEventPayload"
      eventId:
        type: "string"
        description: "The identifier of the notification."
      eventTime:
        type: "string"
        format: "date-time"
        description: "Time of the event occurrence."
      eventType:
        type: "string"
        description: "The type of the notification."
      correlationId:
        type: "string"
        description: "The correlation id for this event."
      domain:
        type: "string"
        description: "The domain of the event."
      title:
        type: "string"
        description: "The title of the event."
      description:
        type: "string"
        description: "An explnatory of the event."
      priority:
        type: "string"
        description: "A priority."
      timeOcurred:
        type: "string"
        format: "date-time"
        description: "The time the event occured."
    description: "The notification data structure"
    example:
      eventId: "eventId"
      domain: "domain"
      eventTime: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      correlationId: "correlationId"
      eventType: "eventType"
      event:
        association:
          associationSpec:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
          lifecycleStatus: "lifecycleStatus"
          validFor:
            startDateTime: "1985-04-12T23:20:50.52Z"
            endDateTime: "1985-04-12T23:20:50.52Z"
          '@type': "@type"
          description: "description"
          associationRole:
          - role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            isSource: true
            '@schemaLocation': "http://example.com/aeiou"
            entity:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
          - role: "role"
            '@baseType': "@baseType"
            '@type': "@type"
            isSource: true
            '@schemaLocation': "http://example.com/aeiou"
            entity:
              '@referredType': "@referredType"
              '@baseType': "@baseType"
              '@type': "@type"
              name: "name"
              id: "id"
              href: "http://example.com/aeiou"
              '@schemaLocation': "http://example.com/aeiou"
          version: "version"
          '@baseType': "@baseType"
          lastUpdate: "2000-01-23T04:56:07.000+00:00"
          name: "name"
          constraint:
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          - '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
            version: "version"
          href: "http://example.com/aeiou"
          id: "id"
          '@schemaLocation': "http://example.com/aeiou"
      title: "title"
      priority: "priority"
      timeOcurred: "2000-01-23T04:56:07.000+00:00"
  AssociationDeleteEventPayload:
    type: "object"
    properties:
      association:
        description: "The involved resource data for the event"
        $ref: "#/definitions/Association"
    description: "The event data structure"
    example:
      association:
        associationSpec:
          '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
        lifecycleStatus: "lifecycleStatus"
        validFor:
          startDateTime: "1985-04-12T23:20:50.52Z"
          endDateTime: "1985-04-12T23:20:50.52Z"
        '@type': "@type"
        description: "description"
        associationRole:
        - role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          isSource: true
          '@schemaLocation': "http://example.com/aeiou"
          entity:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
        - role: "role"
          '@baseType': "@baseType"
          '@type': "@type"
          isSource: true
          '@schemaLocation': "http://example.com/aeiou"
          entity:
            '@referredType': "@referredType"
            '@baseType': "@baseType"
            '@type': "@type"
            name: "name"
            id: "id"
            href: "http://example.com/aeiou"
            '@schemaLocation': "http://example.com/aeiou"
        version: "version"
        '@baseType': "@baseType"
        lastUpdate: "2000-01-23T04:56:07.000+00:00"
        name: "name"
        constraint:
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        - '@referredType': "@referredType"
          '@baseType': "@baseType"
          '@type': "@type"
          name: "name"
          id: "id"
          href: "http://example.com/aeiou"
          '@schemaLocation': "http://example.com/aeiou"
          version: "version"
        href: "http://example.com/aeiou"
        id: "id"
        '@schemaLocation': "http://example.com/aeiou"
  Error:
    type: "object"
    required:
    - "code"
    - "reason"
    properties:
      code:
        type: "string"
        description: "Application relevant detail, defined in the API or a common\
          \ list."
      reason:
        type: "string"
        description: "Explanation of the reason for the error which can be shown to\
          \ a client user."
      message:
        type: "string"
        description: "More details and corrective actions related to the error which\
          \ can be shown to a client user."
      status:
        type: "string"
        description: "HTTP Error code extension"
      referenceError:
        type: "string"
        format: "uri"
        description: "URI of documentation describing the error."
      '@baseType':
        type: "string"
        description: "When sub-classing, this defines the super-class."
      '@schemaLocation':
        type: "string"
        format: "uri"
        description: "A URI to a JSON-Schema file that defines additional attributes\
          \ and relationships"
      '@type':
        type: "string"
        description: "When sub-classing, this defines the sub-class entity name."
    description: "Used when an API throws an Error, typically with a HTTP error response-code\
      \ (3xx, 4xx, 5xx)"
