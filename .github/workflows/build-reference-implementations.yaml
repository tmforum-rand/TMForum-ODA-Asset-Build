name: Build reference implementations

on:
  workflow_dispatch:
    inputs:
      ref_name:
        description: 'Branch name'
        required: true
        default: 'v1beta2'
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      spec: ${{ steps.generate-matrix.outputs.spec }}
    steps:
    - name: Checkout build repository
      uses: actions/checkout@v4
      with:
        path: TMForum-ODA-Asset-Build

    - name: Checkout release repository
      uses: actions/checkout@v4
      with:
        repository: tmforum-rand/TMForum-ODA-Ready-for-publication
        path: TMForum-ODA-Ready-for-publication
        token: ${{ secrets.DEVOPS_TOKEN }}
        ref: ${{ inputs.ref_name }}

    - name: Generate matrix
      id: generate-matrix
      run: python3 TMForum-ODA-Asset-Build/CI/tasks/generate_matrix.py >> "$GITHUB_OUTPUT"

  matrix-build:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
        matrix:
            spec: ${{fromJson(needs.generate-matrix.outputs.spec)}}
        fail-fast: false
    steps:
      - name: Checkout build repository
        uses: actions/checkout@v4
        with:
          path: TMForum-ODA-Asset-Build

      - name: Checkout release repository
        uses: actions/checkout@v4
        with:
          repository: tmforum-rand/TMForum-ODA-Ready-for-publication
          path: TMForum-ODA-Ready-for-publication
          token: ${{ secrets.DEVOPS_TOKEN }}
          ref: ${{ inputs.ref_name }}

      - name: Build ris
        env:
          COMPONENT_FILE: ${{ matrix.spec }}
        run: python3 TMForum-ODA-Asset-Build/CI/tasks/generateri.py $COMPONENT_FILE

      - name: Docker login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" |  docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build ri images
        run: |
          cd $GITHUB_WORKSPACE/TMForum-ODA-Asset-Build
          python3 CI/tasks/generateCompose.py 
          docker-compose build --progress plain > artifacts/build-output
          docker-compose push 

      - name: Extract filename from path
        id: extract
        if: always()
        run: |
          FILENAME=$(basename $(dirname ${{ matrix.spec }}))
          echo "filename=$FILENAME" >> "$GITHUB_OUTPUT"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: artifacts-${{ steps.extract.outputs.filename }}
          path: TMForum-ODA-Asset-Build/artifacts
          retention-days: 1

