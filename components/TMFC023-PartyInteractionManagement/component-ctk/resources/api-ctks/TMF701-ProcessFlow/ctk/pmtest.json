{"info":{"_postman_id":"45a703be-297b-4adb-951f-e890984a0bd5","name":"CTK-Process-Flow-4.1.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","_exporter_id":"7503975","_collection_link":"https://cloudy-meadow-674386.postman.co/workspace/v4.0.0CTKs~c3a3165b-0479-4ccd-bebb-f737fd593b7f/collection/7503975-45a703be-297b-4adb-951f-e890984a0bd5?action=share&creator=7503975&source=collection_link"},"item":[{"name":"N1","item":[{"name":"/ProcessFlow","event":[{"listen":"test","script":{"exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['href', 'id', 'processFlowDate', 'state'];","var conditionalAttributes = ['processFlowSpecification', 'processFlowSpecificationRef']","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","pm.test('Instance has required conditional attributes', function() {","    let result = false","    conditionalAttributes.forEach(e => {","        if (Object.keys(instance).indexOf(e) >= 0){","            result = true","        }","    })","    pm.expect(result).to.be.true","})","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has processFlowDate attribute', function() { pm.expect(instance[\"processFlowDate\"]).to.be.a('string'); });","","if (instance.processFlowSpecification){","    pm.test('Response has processFlowSpecification attribute', function() { pm.expect(instance[\"processFlowSpecification\"]).to.be.a('string'); });","}","","if (instance.processFlowSpecificationRef){","    pm.test('Response has processFlowSpecificationRef attribute', function() { pm.expect(instance[\"processFlowSpecificationRef\"]).to.be.a('object'); });","","}","","pm.globals.set('HREFPF01', instance['href']);","pm.globals.set('IDPF01', instance['id']);","pm.globals.set('PROCESSFLOWDATEPF01', instance['processFlowDate']);","//pm.globals.set('PROCESSFLOWSPECIFICATIONPF01', instance['processFlowSpecification'] );","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on processFlowDate', function () {","  pm.expect(pm.response.text()).to.include(instance['processFlowDate']);","});","",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"processFlowSpecification\": \"spec\"\n}"},"url":{"raw":"{{Process_Flow}}processFlow","host":["{{Process_Flow}}processFlow"]},"description":"This operation creates a ProcessFlow"},"response":[]},{"name":"/ProcessFlow","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'processFlowDate', 'state'];","        var conditionalAttributes = ['processFlowSpecification', 'processFlowSpecificationRef']","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Instance has required conditional attributes', function() {","            let result = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    result = true","                }","            })","            pm.expect(result).to.be.true","        })","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has processFlowDate attribute', function() { pm.expect(instance[\"processFlowDate\"]).to.be.a('string'); });","        ","        if (instance.processFlowSpecification){","            pm.test('Response has processFlowSpecification attribute', function() { pm.expect(instance[\"processFlowSpecification\"]).to.be.a('string'); });","        }","","        if (instance.processFlowSpecificationRef){","            pm.test('Response has processFlowSpecificationRef attribute', function() { pm.expect(instance[\"processFlowSpecificationRef\"]).to.be.a('object'); });","","        }","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on processFlowDate', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowDate']);","        });","        ","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF01');});","            pm.test('id is ' + pm.globals.get(\"IDPF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF01');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF01\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF01');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF01\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF01');});","        }","        if (instance.id == pm.globals.get(\"IDPF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF02');});","            pm.test('id is ' + pm.globals.get(\"IDPF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF02');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF02\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF02');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF02\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'processFlowDate', 'state'];","        var conditionalAttributes = ['processFlowSpecification', 'processFlowSpecificationRef']","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Instance has required conditional attributes', function() {","            let result = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    result = true","                }","            })","            pm.expect(result).to.be.true","        })","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has processFlowDate attribute', function() { pm.expect(instance[\"processFlowDate\"]).to.be.a('string'); });","        ","        if (instance.processFlowSpecification){","            pm.test('Response has processFlowSpecification attribute', function() { pm.expect(instance[\"processFlowSpecification\"]).to.be.a('string'); });","        }","","        if (instance.processFlowSpecificationRef){","            pm.test('Response has processFlowSpecificationRef attribute', function() { pm.expect(instance[\"processFlowSpecificationRef\"]).to.be.a('object'); });","","        }","      ","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on processFlowDate', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowDate']);","        });","        pm.test('Body includes value held on processFlowSpecification', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowSpecification']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF01');});","            pm.test('id is ' + pm.globals.get(\"IDPF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF01');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF01\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF01');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF01\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF01');});","        }","        if (instance.id == pm.globals.get(\"IDPF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF02');});","            pm.test('id is ' + pm.globals.get(\"IDPF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF02');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF02\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF02');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF02\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow","host":["{{Process_Flow}}processFlow"]},"description":"This operation search for the created ProcessFlow"},"response":[]},{"name":"/ProcessFlow/{{IDPF01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'processFlowDate', 'state'];","        var conditionalAttributes = ['processFlowSpecification', 'processFlowSpecificationRef']","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Instance has required conditional attributes', function() {","            let result = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    result = true","                }","            })","            pm.expect(result).to.be.true","        })","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has processFlowDate attribute', function() { pm.expect(instance[\"processFlowDate\"]).to.be.a('string'); });","        ","        if (instance.processFlowSpecification){","            pm.test('Response has processFlowSpecification attribute', function() { pm.expect(instance[\"processFlowSpecification\"]).to.be.a('string'); });","        }","","        if (instance.processFlowSpecificationRef){","            pm.test('Response has processFlowSpecificationRef attribute', function() { pm.expect(instance[\"processFlowSpecificationRef\"]).to.be.a('object'); });","","        }","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on processFlowDate', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowDate']);","        });","        ","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF01');});","            pm.test('id is ' + pm.globals.get(\"IDPF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF01');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF01\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF01');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF01\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF01');});","        }","        if (instance.id == pm.globals.get(\"IDPF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF02');});","            pm.test('id is ' + pm.globals.get(\"IDPF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF02');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF02\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF02');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF02\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'processFlowDate', 'state'];","        var conditionalAttributes = ['processFlowSpecification', 'processFlowSpecificationRef']","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Instance has required conditional attributes', function() {","            let result = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    result = true","                }","            })","            pm.expect(result).to.be.true","        })","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has processFlowDate attribute', function() { pm.expect(instance[\"processFlowDate\"]).to.be.a('string'); });","        ","        if (instance.processFlowSpecification){","            pm.test('Response has processFlowSpecification attribute', function() { pm.expect(instance[\"processFlowSpecification\"]).to.be.a('string'); });","        }","","        if (instance.processFlowSpecificationRef){","            pm.test('Response has processFlowSpecificationRef attribute', function() { pm.expect(instance[\"processFlowSpecificationRef\"]).to.be.a('object'); });","","        }","      ","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on processFlowDate', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowDate']);","        });","        pm.test('Body includes value held on processFlowSpecification', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowSpecification']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF01');});","            pm.test('id is ' + pm.globals.get(\"IDPF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF01');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF01\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF01');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF01\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF01');});","        }","        if (instance.id == pm.globals.get(\"IDPF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF02');});","            pm.test('id is ' + pm.globals.get(\"IDPF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF02');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF02\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF02');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF02\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow/{{IDPF01}}","host":["{{Process_Flow}}processFlow"],"path":["{{IDPF01}}"]},"description":"This operation search for one of the created ProcessFlow"},"response":[]}]},{"name":"N2","item":[{"name":"/ProcessFlow?fields=id","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow?fields=id","host":["{{Process_Flow}}processFlow"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a ProcessFlow"},"response":[]},{"name":"/ProcessFlow?id={{IDPF01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'processFlowDate', 'state'];","        var conditionalAttributes = ['processFlowSpecification', 'processFlowSpecificationRef']","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Instance has required conditional attributes', function() {","            let result = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    result = true","                }","            })","            pm.expect(result).to.be.true","        })","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has processFlowDate attribute', function() { pm.expect(instance[\"processFlowDate\"]).to.be.a('string'); });","        ","        if (instance.processFlowSpecification){","            pm.test('Response has processFlowSpecification attribute', function() { pm.expect(instance[\"processFlowSpecification\"]).to.be.a('string'); });","        }","","        if (instance.processFlowSpecificationRef){","            pm.test('Response has processFlowSpecificationRef attribute', function() { pm.expect(instance[\"processFlowSpecificationRef\"]).to.be.a('object'); });","","        }","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on processFlowDate', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowDate']);","        });","        ","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF01');});","            pm.test('id is ' + pm.globals.get(\"IDPF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF01');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF01\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF01');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF01\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF01');});","        }","        if (instance.id == pm.globals.get(\"IDPF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF02');});","            pm.test('id is ' + pm.globals.get(\"IDPF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF02');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF02\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF02');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF02\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'processFlowDate', 'state'];","        var conditionalAttributes = ['processFlowSpecification', 'processFlowSpecificationRef']","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Instance has required conditional attributes', function() {","            let result = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    result = true","                }","            })","            pm.expect(result).to.be.true","        })","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has processFlowDate attribute', function() { pm.expect(instance[\"processFlowDate\"]).to.be.a('string'); });","        ","        if (instance.processFlowSpecification){","            pm.test('Response has processFlowSpecification attribute', function() { pm.expect(instance[\"processFlowSpecification\"]).to.be.a('string'); });","        }","","        if (instance.processFlowSpecificationRef){","            pm.test('Response has processFlowSpecificationRef attribute', function() { pm.expect(instance[\"processFlowSpecificationRef\"]).to.be.a('object'); });","","        }","      ","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on processFlowDate', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowDate']);","        });","        pm.test('Body includes value held on processFlowSpecification', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowSpecification']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF01');});","            pm.test('id is ' + pm.globals.get(\"IDPF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF01');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF01\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF01');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF01\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF01');});","        }","        if (instance.id == pm.globals.get(\"IDPF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF02');});","            pm.test('id is ' + pm.globals.get(\"IDPF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF02');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF02\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF02');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF02\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow?id={{IDPF01}}","host":["{{Process_Flow}}processFlow"],"query":[{"key":"id","value":"{{IDPF01}}"}]},"description":"This operation filter a ProcessFlow"},"response":[]},{"name":"/ProcessFlow?fields=processFlowDate","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow?fields=processFlowDate","host":["{{Process_Flow}}processFlow"],"query":[{"key":"fields","value":"processFlowDate"}]},"description":"This operation filter a ProcessFlow"},"response":[]},{"name":"/ProcessFlow?processFlowDate={{PROCESSFLOWDATEPF01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['href', 'id', 'processFlowDate', 'state'];","        var conditionalAttributes = ['processFlowSpecification', 'processFlowSpecificationRef']","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Instance has required conditional attributes', function() {","            let result = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    result = true","                }","            })","            pm.expect(result).to.be.true","        })","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has processFlowDate attribute', function() { pm.expect(instance[\"processFlowDate\"]).to.be.a('string'); });","        ","        if (instance.processFlowSpecification){","            pm.test('Response has processFlowSpecification attribute', function() { pm.expect(instance[\"processFlowSpecification\"]).to.be.a('string'); });","        }","","        if (instance.processFlowSpecificationRef){","            pm.test('Response has processFlowSpecificationRef attribute', function() { pm.expect(instance[\"processFlowSpecificationRef\"]).to.be.a('object'); });","","        }","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on processFlowDate', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowDate']);","        });","        ","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF01');});","            pm.test('id is ' + pm.globals.get(\"IDPF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF01');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF01\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF01');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF01\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF01');});","        }","        if (instance.id == pm.globals.get(\"IDPF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF02');});","            pm.test('id is ' + pm.globals.get(\"IDPF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF02');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF02\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF02');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF02\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'processFlowDate', 'state'];","        var conditionalAttributes = ['processFlowSpecification', 'processFlowSpecificationRef']","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","        pm.test('Instance has required conditional attributes', function() {","            let result = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    result = true","                }","            })","            pm.expect(result).to.be.true","        })","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has processFlowDate attribute', function() { pm.expect(instance[\"processFlowDate\"]).to.be.a('string'); });","        ","        if (instance.processFlowSpecification){","            pm.test('Response has processFlowSpecification attribute', function() { pm.expect(instance[\"processFlowSpecification\"]).to.be.a('string'); });","        }","","        if (instance.processFlowSpecificationRef){","            pm.test('Response has processFlowSpecificationRef attribute', function() { pm.expect(instance[\"processFlowSpecificationRef\"]).to.be.a('object'); });","","        }","      ","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on processFlowDate', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowDate']);","        });","        pm.test('Body includes value held on processFlowSpecification', function () {","            pm.expect(pm.response.text()).to.include(instance['processFlowSpecification']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF01');});","            pm.test('id is ' + pm.globals.get(\"IDPF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF01');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF01\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF01');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF01\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF01');});","        }","        if (instance.id == pm.globals.get(\"IDPF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPF02');});","            pm.test('id is ' + pm.globals.get(\"IDPF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPF02');});","            pm.test('processFlowDate is ' + pm.globals.get(\"PROCESSFLOWDATEPF02\"), function() {pm.expect(instance['processFlowDate']) == pm.globals.get('PROCESSFLOWDATEPF02');});","            pm.test('processFlowSpecification is ' + pm.globals.get(\"PROCESSFLOWSPECIFICATIONPF02\"), function() {pm.expect(instance['processFlowSpecification']) == pm.globals.get('PROCESSFLOWSPECIFICATIONPF02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow?processFlowDate={{PROCESSFLOWDATEPF01}}","host":["{{Process_Flow}}processFlow"],"query":[{"key":"processFlowDate","value":"{{PROCESSFLOWDATEPF01}}"}]},"description":"This operation filter a ProcessFlow"},"response":[]}]},{"name":"E1","item":[{"name":"/ProcessFlow/404ID","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}ProcessFlow/d0ff7b2e-b3c8-4b76-98f9-8f50e61ddec9","host":["{{Process_Flow}}ProcessFlow"],"path":["d0ff7b2e-b3c8-4b76-98f9-8f50e61ddec9"]},"description":"This operation search for one of the created ProcessFlow"},"response":[]}]},{"name":"N1","item":[{"name":"/TaskFlow","event":[{"listen":"test","script":{"exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['href', 'id', 'state'];","var conditionalAttributes = ['taskFlowSpecification', 'taskFlowSpecificationRef']","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","pm.test('Instance has conditional attributes', function (){ ","    let hasConditionalAttributes = false","    conditionalAttributes.forEach(e => {","        if (Object.keys(instance).indexOf(e) >= 0){","            hasConditionalAttributes = true","        }","    })","    pm.expect(hasConditionalAttributes).to.be.true","})","","","","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","if (instance.taskFlowSpecification){","    pm.test('Response has taskFlowSpecification attribute', function() { pm.expect(instance[\"taskFlowSpecification\"]).to.be.a('string'); });","    ","}","","if (instance.taskFlowSpecificationRef){","    pm.test('Response has taskFlowSpecificationRef attribute', function() { pm.expect(instance[\"taskFlowSpecificationRef\"]).to.be.a('object'); });","}","","","pm.globals.set('HREFTF01', instance['href']);","pm.globals.set('IDTF01', instance['id']);","//pm.globals.set('TASKFLOWSPECIFICATIONTF01', instance['taskFlowSpecification']);","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n    \"taskFlowSpecificationRef\": {\n        \"id\": \"1234\"\n    }\n}"},"url":{"raw":"{{Process_Flow}}processFlow/{{IDPF01}}/taskFlow","host":["{{Process_Flow}}processFlow"],"path":["{{IDPF01}}","taskFlow"]},"description":"This operation creates a TaskFlow"},"response":[]},{"name":"/TaskFlow","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","","","var jsonData = pm.response.json();","","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","","        var requiredAttributes = ['href', 'id', 'state'];","        var conditionalAttributes = ['taskFlowSpecification', 'taskFlowSpecificationRef']","","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","        pm.test('Instance has conditional attributes', function (){ ","            let hasConditionalAttributes = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    hasConditionalAttributes = true","                }","            })","            pm.expect(hasConditionalAttributes).to.be.true","        })","","","","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","        if (instance.taskFlowSpecification){","            pm.test('Response has taskFlowSpecification attribute', function() { pm.expect(instance[\"taskFlowSpecification\"]).to.be.a('string'); });","            ","        }","","        if (instance.taskFlowSpecificationRef){","            pm.test('Response has taskFlowSpecificationRef attribute', function() { pm.expect(instance[\"taskFlowSpecificationRef\"]).to.be.a('object'); });","        }","","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'state'];","    var conditionalAttributes = ['taskFlowSpecification', 'taskFlowSpecificationRef']","","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","    pm.test('Instance has conditional attributes', function (){ ","        let hasConditionalAttributes = false","        conditionalAttributes.forEach(e => {","            if (Object.keys(instance).indexOf(e) >= 0){","                hasConditionalAttributes = true","            }","        })","        pm.expect(hasConditionalAttributes).to.be.true","    })","","","","    pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","    if (instance.taskFlowSpecification){","        pm.test('Response has taskFlowSpecification attribute', function() { pm.expect(instance[\"taskFlowSpecification\"]).to.be.a('string'); });","        ","    }","","    if (instance.taskFlowSpecificationRef){","        pm.test('Response has taskFlowSpecificationRef attribute', function() { pm.expect(instance[\"taskFlowSpecificationRef\"]).to.be.a('object'); });","    }","}","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow/{{IDPF01}}/taskFlow","host":["{{Process_Flow}}processFlow"],"path":["{{IDPF01}}","taskFlow"]},"description":"This operation search for the created TaskFlow"},"response":[]},{"name":"/TaskFlow/{{IDTF01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","","","var jsonData = pm.response.json();","","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","","        var requiredAttributes = ['href', 'id', 'state'];","        var conditionalAttributes = ['taskFlowSpecification', 'taskFlowSpecificationRef']","","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","        pm.test('Instance has conditional attributes', function (){ ","            let hasConditionalAttributes = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    hasConditionalAttributes = true","                }","            })","            pm.expect(hasConditionalAttributes).to.be.true","        })","","","","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","        if (instance.taskFlowSpecification){","            pm.test('Response has taskFlowSpecification attribute', function() { pm.expect(instance[\"taskFlowSpecification\"]).to.be.a('string'); });","            ","        }","","        if (instance.taskFlowSpecificationRef){","            pm.test('Response has taskFlowSpecificationRef attribute', function() { pm.expect(instance[\"taskFlowSpecificationRef\"]).to.be.a('object'); });","        }","","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'state'];","    var conditionalAttributes = ['taskFlowSpecification', 'taskFlowSpecificationRef']","","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","    pm.test('Instance has conditional attributes', function (){ ","        let hasConditionalAttributes = false","        conditionalAttributes.forEach(e => {","            if (Object.keys(instance).indexOf(e) >= 0){","                hasConditionalAttributes = true","            }","        })","        pm.expect(hasConditionalAttributes).to.be.true","    })","","","","    pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","    if (instance.taskFlowSpecification){","        pm.test('Response has taskFlowSpecification attribute', function() { pm.expect(instance[\"taskFlowSpecification\"]).to.be.a('string'); });","        ","    }","","    if (instance.taskFlowSpecificationRef){","        pm.test('Response has taskFlowSpecificationRef attribute', function() { pm.expect(instance[\"taskFlowSpecificationRef\"]).to.be.a('object'); });","    }","}","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow/{{IDPF01}}/taskFlow/{{IDTF01}}","host":["{{Process_Flow}}processFlow"],"path":["{{IDPF01}}","taskFlow","{{IDTF01}}"]},"description":"This operation search for one of the created TaskFlow"},"response":[]}]},{"name":"N2","item":[{"name":"/TaskFlow?fields=id","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow/{{IDPF01}}/taskFlow?fields=id","host":["{{Process_Flow}}processFlow"],"path":["{{IDPF01}}","taskFlow"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a TaskFlow"},"response":[]},{"name":"/TaskFlow?id={{IDTF01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","","","var jsonData = pm.response.json();","","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","","        var requiredAttributes = ['href', 'id', 'state'];","        var conditionalAttributes = ['taskFlowSpecification', 'taskFlowSpecificationRef']","","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","        pm.test('Instance has conditional attributes', function (){ ","            let hasConditionalAttributes = false","            conditionalAttributes.forEach(e => {","                if (Object.keys(instance).indexOf(e) >= 0){","                    hasConditionalAttributes = true","                }","            })","            pm.expect(hasConditionalAttributes).to.be.true","        })","","","","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","        if (instance.taskFlowSpecification){","            pm.test('Response has taskFlowSpecification attribute', function() { pm.expect(instance[\"taskFlowSpecification\"]).to.be.a('string'); });","            ","        }","","        if (instance.taskFlowSpecificationRef){","            pm.test('Response has taskFlowSpecificationRef attribute', function() { pm.expect(instance[\"taskFlowSpecificationRef\"]).to.be.a('object'); });","        }","","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id', 'state'];","    var conditionalAttributes = ['taskFlowSpecification', 'taskFlowSpecificationRef']","","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","    pm.test('Instance has conditional attributes', function (){ ","        let hasConditionalAttributes = false","        conditionalAttributes.forEach(e => {","            if (Object.keys(instance).indexOf(e) >= 0){","                hasConditionalAttributes = true","            }","        })","        pm.expect(hasConditionalAttributes).to.be.true","    })","","","","    pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","","    if (instance.taskFlowSpecification){","        pm.test('Response has taskFlowSpecification attribute', function() { pm.expect(instance[\"taskFlowSpecification\"]).to.be.a('string'); });","        ","    }","","    if (instance.taskFlowSpecificationRef){","        pm.test('Response has taskFlowSpecificationRef attribute', function() { pm.expect(instance[\"taskFlowSpecificationRef\"]).to.be.a('object'); });","    }","}","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow/{{IDPF01}}/taskFlow?id={{IDTF01}}","host":["{{Process_Flow}}processFlow"],"path":["{{IDPF01}}","taskFlow"],"query":[{"key":"id","value":"{{IDTF01}}"}]},"description":"This operation filter a TaskFlow"},"response":[]}]},{"name":"E1","item":[{"name":"/TaskFlow/404ID","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Process_Flow}}processFlow/{{IDPF01}}/TaskFlow/ca8f50b2-fcc9-48a3-a4a2-e0c11a26dd5c","host":["{{Process_Flow}}processFlow"],"path":["{{IDPF01}}","TaskFlow","ca8f50b2-fcc9-48a3-a4a2-e0c11a26dd5c"]},"description":"This operation search for one of the created TaskFlow"},"response":[]}]}],"event":[{"listen":"prerequest","script":{"type":"text/javascript","exec":[""]}},{"listen":"test","script":{"type":"text/javascript","exec":[""]}}],"variable":[{"key":"Test ","value":"123","type":"string"}]}