{"info":{"_postman_id":"e39e338d-0fc5-45b5-94af-8c5ad4d815a8","name":"CTK-Party_Role-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"N1","item":[{"name":"/PartyRole","event":[{"listen":"test","script":{"id":"deed4c90-31bf-41be-81ed-f24f61ab5bfb","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFPR01', instance['href']);","pm.globals.set('IDPR01', instance['id']);","pm.globals.set('NAMEPR01', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"qqymucymyd\",\n  \"roleType\": {}\n}"},"url":{"raw":"{{Party_Role}}partyRole","host":["{{Party_Role}}partyRole"]},"description":"This operation creates a PartyRole"},"response":[]},{"name":"/PartyRole","event":[{"listen":"test","script":{"id":"15ceb748-f31d-4b8b-9748-d4c0c4a265f9","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR02');});","            pm.test('id is ' + pm.globals.get(\"IDPR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR02');});","            pm.test('id is ' + pm.globals.get(\"IDPR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole","host":["{{Party_Role}}partyRole"]},"description":"This operation search for the created PartyRole"},"response":[]},{"name":"/PartyRole/{{IDPR01}}","event":[{"listen":"test","script":{"id":"92a67d99-9ef8-45cc-a4db-d617a6e5c4b6","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole/{{IDPR01}}","host":["{{Party_Role}}partyRole"],"path":["{{IDPR01}}"]},"description":"This operation search for one of the created PartyRole"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/PartyRole?fields=name","event":[{"listen":"test","script":{"id":"c684b549-47d7-4668-8711-8825e2d7099c","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole?fields=name","host":["{{Party_Role}}partyRole"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a PartyRole"},"response":[]},{"name":"/PartyRole?name={{NAMEPR01}}","event":[{"listen":"test","script":{"id":"476e2ac2-c930-4cf2-9597-aa5d758ab26b","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole?name={{NAMEPR01}}","host":["{{Party_Role}}partyRole"],"query":[{"key":"name","value":"{{NAMEPR01}}"}]},"description":"This operation filter a PartyRole"},"response":[]},{"name":"/PartyRole?fields=href","event":[{"listen":"test","script":{"id":"3a5d435d-5f97-4725-859f-3a9804016614","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole?fields=href","host":["{{Party_Role}}partyRole"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a PartyRole"},"response":[]},{"name":"/PartyRole?fields=id","event":[{"listen":"test","script":{"id":"3b7a68fa-23fe-4cec-84de-ea06e71a075d","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole?fields=id","host":["{{Party_Role}}partyRole"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a PartyRole"},"response":[]},{"name":"/PartyRole?id={{IDPR01}}","event":[{"listen":"test","script":{"id":"fa0a7463-ba58-4879-a9bb-92a7bda1ef1a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole?id={{IDPR01}}","host":["{{Party_Role}}partyRole"],"query":[{"key":"id","value":"{{IDPR01}}"}]},"description":"This operation filter a PartyRole"},"response":[]},{"name":"/PartyRole?fields=name","event":[{"listen":"test","script":{"id":"815161b1-ef40-4de2-80de-dc4b15379a0e","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole?fields=name","host":["{{Party_Role}}partyRole"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a PartyRole"},"response":[]},{"name":"/PartyRole?name={{NAMEPR01}}","event":[{"listen":"test","script":{"id":"4f02869d-12d6-4c2a-821e-d98a6d32f59f","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole?name={{NAMEPR01}}","host":["{{Party_Role}}partyRole"],"query":[{"key":"name","value":"{{NAMEPR01}}"}]},"description":"This operation filter a PartyRole"},"response":[]},{"name":"/PartyRole/{{IDPR01}}","event":[{"listen":"test","script":{"id":"f653783a-0aea-44d0-a163-6934b140c585","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});"],"type":"text/javascript"}}],"request":{"method":"PATCH","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\r\n    \"name\": \"new name\",\r\n    \"roleType\":{\r\n        \r\n    }\r\n}"},"url":{"raw":"{{Party_Role}}partyRole/{{IDPR01}}","host":["{{Party_Role}}partyRole"],"path":["{{IDPR01}}"]},"description":"This operation search for one of the created PartyRole"},"response":[]},{"name":"/PartyRole/{{IDPR01}}","event":[{"listen":"test","script":{"id":"ad07bbaf-3aa2-43e7-974d-ba471163583f","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == \"new name\";});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'roleType', 'href', 'id', 'name', 'roleType'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","       ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPR01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole/{{IDPR01}}","host":["{{Party_Role}}partyRole"],"path":["{{IDPR01}}"]},"description":"This operation search for one of the created PartyRole"},"response":[]},{"name":"/PartyRole/{{IDPR01}}","event":[{"listen":"test","script":{"id":"396d389e-c29c-4f93-a7b4-41e2c728886b","exec":["pm.test(\"Status code is 204\", function () {","    pm.response.to.have.status(204);","});","  ","  "],"type":"text/javascript"}}],"request":{"method":"DELETE","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole/{{IDPR01}}","host":["{{Party_Role}}partyRole"],"path":["{{IDPR01}}"]},"description":"This operation search for one of the created PartyRole"},"response":[]},{"name":"/PartyRole/404ID","event":[{"listen":"test","script":{"id":"e64e67e4-fb6d-4a0f-bab1-d0810abf061d","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole/{{IDPR01}}","host":["{{Party_Role}}partyRole"],"path":["{{IDPR01}}"]},"description":"This operation search for one of the created PartyRole"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/PartyRole/404ID","event":[{"listen":"test","script":{"id":"31e73c55-4701-4c8d-b7ad-bcdaf4118421","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Party_Role}}partyRole/b00cb440-e863-440b-a36f-74a296e06578","host":["{{Party_Role}}partyRole"],"path":["b00cb440-e863-440b-a36f-74a296e06578"]},"description":"This operation search for one of the created PartyRole"},"response":[]}],"protocolProfileBehavior":{}}],"protocolProfileBehavior":{}}