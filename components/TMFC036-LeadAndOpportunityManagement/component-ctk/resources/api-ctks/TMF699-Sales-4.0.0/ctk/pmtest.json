{"info":{"_postman_id":"665331ad-0bd1-4946-8d1d-80709125627d","name":"CTK-Sales-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","_exporter_id":"7503975","_collection_link":"https://cloudy-meadow-674386.postman.co/workspace/v4.0.0CTKs~c3a3165b-0479-4ccd-bebb-f737fd593b7f/collection/7503975-665331ad-0bd1-4946-8d1d-80709125627d?action=share&creator=7503975&source=collection_link"},"item":[{"name":"N1","item":[{"name":"/salesLead","event":[{"listen":"test","script":{"exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","","pm.globals.set('IDSL01', instance['id']);","pm.globals.set('HREFSL01', instance['href']);","pm.globals.set('CREATIONDATESL01', instance['creationDate']);","pm.globals.set('DESCRIPTIONSL01', instance['description']);","pm.globals.set('NAMESL01', instance['name']);","pm.globals.set('PRIORITYSL01', instance['priority']);","pm.globals.set('RATINGSL01', instance['rating']);","pm.globals.set('REFERREDDATESL01', instance['referredDate']);","pm.globals.set('STATUSSL01', instance['status']);","pm.globals.set('STATUSCHANGEDATESL01', instance['statusChangeDate']);","pm.globals.set('STATUSCHANGEREASONSL01', instance['statusChangeReason']);","pm.globals.set('TYPESL01', instance['type']);","pm.globals.set('ESTIMATEDREVENUESL01', instance['estimatedRevenue']);","pm.globals.set('VALIDFORSL01', instance['validFor']);","pm.globals.set('@BASETYPESL01', instance['@baseType']);","pm.globals.set('@TYPESL01', instance['@type']);","pm.globals.set('@SCHEMALOCATIONSL01', instance['@schemaLocation']);","pm.globals.set('CHANNELSL01', instance['channel']);","pm.globals.set('MARKETSEGMENTSL01', instance['marketSegment']);","pm.globals.set('MARKETINGCAMPAIGNSL01', instance['marketingCampaign']);","pm.globals.set('NOTESL01', instance['note']);","pm.globals.set('PRODUCTOFFERINGSL01', instance['productOffering']);","pm.globals.set('CATEGORYSL01', instance['category']);","pm.globals.set('SALESOPPORTUNITYSL01', instance['salesOpportunity']);","pm.globals.set('RELATEDPARTYSL01', instance['relatedParty']);","pm.globals.set('PROSPECTCONTACTSL01', instance['prospectContact']);","pm.globals.set('PRODUCTSPECIFICATIONSL01', instance['productSpecification']);","pm.globals.set('PRODUCTSL01', instance['product']);","","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on creationDate', function () {","  pm.expect(pm.response.text()).to.include(instance['creationDate']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on status', function () {","  pm.expect(pm.response.text()).to.include(instance['status']);","});","pm.test('Body includes value held on statusChangeDate', function () {","  pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Campaign 17 salesLead 7852\"\n}"},"url":{"raw":"{{Sales_API}}salesLead","host":["{{Sales_API}}salesLead"]},"description":"This operation creates a salesLead"},"response":[]},{"name":"/salesLead","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL02');});","            pm.test('href is ' + pm.globals.get(\"HREFSL02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL02');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL02\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL02');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL02');});","            pm.test('name is ' + pm.globals.get(\"NAMESL02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL02');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL02\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL02');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL02\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL02');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL02\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL02');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL02\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL02');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL02\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL02');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL02\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL02');});","            pm.test('type is ' + pm.globals.get(\"TYPESL02\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL02');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL02\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL02');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL02\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL02');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL02\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL02');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL02\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL02');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL02\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL02');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL02\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL02');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL02\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL02');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL02\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL02');});","            pm.test('note is ' + pm.globals.get(\"NOTESL02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL02');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL02\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL02');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL02');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL02\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL02');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL02');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL02\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL02');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL02\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL02');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL02\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL02');});","            pm.test('href is ' + pm.globals.get(\"HREFSL02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL02');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL02\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL02');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL02\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL02');});","            pm.test('name is ' + pm.globals.get(\"NAMESL02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL02');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL02\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL02');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL02\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL02');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL02\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL02');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL02\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL02');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL02\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL02');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL02\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL02');});","            pm.test('type is ' + pm.globals.get(\"TYPESL02\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL02');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL02\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL02');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL02\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL02');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL02\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL02');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL02\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL02');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL02\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL02');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL02\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL02');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL02\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL02');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL02\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL02');});","            pm.test('note is ' + pm.globals.get(\"NOTESL02\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL02');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL02\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL02');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL02\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL02');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL02\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL02');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL02\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL02');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL02\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL02');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL02\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL02');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL02\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead","host":["{{Sales_API}}salesLead"]},"description":"This operation search for the created salesLead"},"response":[]},{"name":"/salesLead/{{IDSL01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead/{{IDSL01}}","host":["{{Sales_API}}salesLead"],"path":["{{IDSL01}}"]},"description":"This operation search for one of the created salesLead"},"response":[]}]},{"name":"N2","item":[{"name":"/salesLead?fields=id","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead?fields=id","host":["{{Sales_API}}salesLead"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a salesLead"},"response":[]},{"name":"/salesLead?id={{IDSL01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead?id={{IDSL01}}","host":["{{Sales_API}}salesLead"],"query":[{"key":"id","value":"{{IDSL01}}"}]},"description":"This operation filter a salesLead"},"response":[]},{"name":"/salesLead?fields=creationDate","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead?fields=creationDate","host":["{{Sales_API}}salesLead"],"query":[{"key":"fields","value":"creationDate"}]},"description":"This operation filter a salesLead"},"response":[]},{"name":"/salesLead?href={{CREATIONDATESL01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead?creationDate={{CREATIONDATESL01}}","host":["{{Sales_API}}salesLead"],"query":[{"key":"creationDate","value":"{{CREATIONDATESL01}}"}]},"description":"This operation filter a salesLead"},"response":[]},{"name":"/salesLead?fields=name","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead?fields=name","host":["{{Sales_API}}salesLead"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a salesLead"},"response":[]},{"name":"/salesLead?name={{NAMESL01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead?name={{NAMESL01}}","host":["{{Sales_API}}salesLead"],"query":[{"key":"name","value":"{{NAMESL01}}"}]},"description":"This operation filter a salesLead"},"response":[]},{"name":"/salesLead?fields=status","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead?fields=status","host":["{{Sales_API}}salesLead"],"query":[{"key":"fields","value":"status"}]},"description":"This operation filter a salesLead"},"response":[]},{"name":"/salesLead?status={{STATUSSL01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead?status={{STATUSSL01}}","host":["{{Sales_API}}salesLead"],"query":[{"key":"status","value":"{{STATUSSL01}}"}]},"description":"This operation filter a salesLead"},"response":[]},{"name":"/salesLead?fields=statusChangeDate","event":[{"listen":"test","script":{"exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead?fields=statusChangeDate","host":["{{Sales_API}}salesLead"],"query":[{"key":"fields","value":"statusChangeDate"}]},"description":"This operation filter a salesLead"},"response":[]},{"name":"/salesLead?href={{STATUSCHANGEDATESL01}}","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['id', 'href', 'creationDate', 'name', 'status', 'statusChangeDate'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has creationDate attribute', function() { pm.expect(instance[\"creationDate\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has statusChangeDate attribute', function() { pm.expect(instance[\"statusChangeDate\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on creationDate', function () {","            pm.expect(pm.response.text()).to.include(instance['creationDate']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on status', function () {","            pm.expect(pm.response.text()).to.include(instance['status']);","        });","        pm.test('Body includes value held on statusChangeDate', function () {","            pm.expect(pm.response.text()).to.include(instance['statusChangeDate']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSL01\")) {","            pm.test('id is ' + pm.globals.get(\"IDSL01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSL01');});","            pm.test('href is ' + pm.globals.get(\"HREFSL01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSL01');});","            pm.test('creationDate is ' + pm.globals.get(\"CREATIONDATESL01\"), function() {pm.expect(instance['creationDate']) == pm.globals.get('CREATIONDATESL01');});","            pm.test('description is ' + pm.globals.get(\"DESCRIPTIONSL01\"), function() {pm.expect(instance['description']) == pm.globals.get('DESCRIPTIONSL01');});","            pm.test('name is ' + pm.globals.get(\"NAMESL01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESL01');});","            pm.test('priority is ' + pm.globals.get(\"PRIORITYSL01\"), function() {pm.expect(instance['priority']) == pm.globals.get('PRIORITYSL01');});","            pm.test('rating is ' + pm.globals.get(\"RATINGSL01\"), function() {pm.expect(instance['rating']) == pm.globals.get('RATINGSL01');});","            pm.test('referredDate is ' + pm.globals.get(\"REFERREDDATESL01\"), function() {pm.expect(instance['referredDate']) == pm.globals.get('REFERREDDATESL01');});","            pm.test('status is ' + pm.globals.get(\"STATUSSL01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSSL01');});","            pm.test('statusChangeDate is ' + pm.globals.get(\"STATUSCHANGEDATESL01\"), function() {pm.expect(instance['statusChangeDate']) == pm.globals.get('STATUSCHANGEDATESL01');});","            pm.test('statusChangeReason is ' + pm.globals.get(\"STATUSCHANGEREASONSL01\"), function() {pm.expect(instance['statusChangeReason']) == pm.globals.get('STATUSCHANGEREASONSL01');});","            pm.test('type is ' + pm.globals.get(\"TYPESL01\"), function() {pm.expect(instance['type']) == pm.globals.get('TYPESL01');});","            pm.test('estimatedRevenue is ' + pm.globals.get(\"ESTIMATEDREVENUESL01\"), function() {pm.expect(instance['estimatedRevenue']) == pm.globals.get('ESTIMATEDREVENUESL01');});","            pm.test('validFor is ' + pm.globals.get(\"VALIDFORSL01\"), function() {pm.expect(instance['validFor']) == pm.globals.get('VALIDFORSL01');});","            pm.test('@baseType is ' + pm.globals.get(\"@BASETYPESL01\"), function() {pm.expect(instance['@baseType']) == pm.globals.get('@BASETYPESL01');});","            pm.test('@type is ' + pm.globals.get(\"@TYPESL01\"), function() {pm.expect(instance['@type']) == pm.globals.get('@TYPESL01');});","            pm.test('@schemaLocation is ' + pm.globals.get(\"@SCHEMALOCATIONSL01\"), function() {pm.expect(instance['@schemaLocation']) == pm.globals.get('@SCHEMALOCATIONSL01');});","            pm.test('channel is ' + pm.globals.get(\"CHANNELSL01\"), function() {pm.expect(instance['channel']) == pm.globals.get('CHANNELSL01');});","            pm.test('marketSegment is ' + pm.globals.get(\"MARKETSEGMENTSL01\"), function() {pm.expect(instance['marketSegment']) == pm.globals.get('MARKETSEGMENTSL01');});","            pm.test('marketingCampaign is ' + pm.globals.get(\"MARKETINGCAMPAIGNSL01\"), function() {pm.expect(instance['marketingCampaign']) == pm.globals.get('MARKETINGCAMPAIGNSL01');});","            pm.test('note is ' + pm.globals.get(\"NOTESL01\"), function() {pm.expect(instance['note']) == pm.globals.get('NOTESL01');});","            pm.test('productOffering is ' + pm.globals.get(\"PRODUCTOFFERINGSL01\"), function() {pm.expect(instance['productOffering']) == pm.globals.get('PRODUCTOFFERINGSL01');});","            pm.test('category is ' + pm.globals.get(\"CATEGORYSL01\"), function() {pm.expect(instance['category']) == pm.globals.get('CATEGORYSL01');});","            pm.test('salesOpportunity is ' + pm.globals.get(\"SALESOPPORTUNITYSL01\"), function() {pm.expect(instance['salesOpportunity']) == pm.globals.get('SALESOPPORTUNITYSL01');});","            pm.test('relatedParty is ' + pm.globals.get(\"RELATEDPARTYSL01\"), function() {pm.expect(instance['relatedParty']) == pm.globals.get('RELATEDPARTYSL01');});","            pm.test('prospectContact is ' + pm.globals.get(\"PROSPECTCONTACTSL01\"), function() {pm.expect(instance['prospectContact']) == pm.globals.get('PROSPECTCONTACTSL01');});","            pm.test('productSpecification is ' + pm.globals.get(\"PRODUCTSPECIFICATIONSL01\"), function() {pm.expect(instance['productSpecification']) == pm.globals.get('PRODUCTSPECIFICATIONSL01');});","            pm.test('product is ' + pm.globals.get(\"PRODUCTSL01\"), function() {pm.expect(instance['product']) == pm.globals.get('PRODUCTSL01');});","        }","        if (instance.id == pm.globals.get(\"IDSL02\")) {","            pm.test('IDSL02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead?statusChangeDate={{STATUSCHANGEDATESL01}}","host":["{{Sales_API}}salesLead"],"query":[{"key":"statusChangeDate","value":"{{STATUSCHANGEDATESL01}}"}]},"description":"This operation filter a salesLead"},"response":[]}]},{"name":"E1","item":[{"name":"/salesLead/404ID","event":[{"listen":"test","script":{"exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Sales_API}}salesLead/60a80cfd-e51c-455b-98d2-d9074573d01d","host":["{{Sales_API}}salesLead"],"path":["60a80cfd-e51c-455b-98d2-d9074573d01d"]},"description":"This operation search for one of the created salesLead"},"response":[]}]}]}