{"info":{"_postman_id":"c3597cb6-464f-49d3-90b6-4abcc126c43c","name":"CTK-Product_Inventory-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"N1","item":[{"name":"/Product","event":[{"listen":"test","script":{"id":"58dbe4b9-9530-43eb-9ab9-712c7997e43d","exec":["let count = 0","","","","pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","        if (count == 0){","            pm.globals.set('HREFPR01', instance['href']);","            pm.globals.set('IDPR01', instance['id']);","            pm.globals.set('STATUSPR01', instance['status']);","            count += 1","        }","        if (count == 1){","            pm.globals.set('HREFPR02', instance['href']);","            pm.globals.set('IDPR02', instance['id']);","            pm.globals.set('STATUSPR02', instance['status']);","            count += 1","        }","        var requiredAttributes = ['billingAccount', 'href', 'id', 'productCharacteristic', 'productOffering', 'productPrice', 'relatedParty', 'status'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has productCharacteristic attribute', function() { pm.expect(instance[\"productCharacteristic\"]).to.be.a('array'); });","        pm.test('Response has productPrice attribute', function() { pm.expect(instance[\"productPrice\"]).to.be.a('array'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['billingAccount', 'href', 'id', 'productCharacteristic', 'productOffering', 'productPrice', 'relatedParty', 'status'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has productCharacteristic attribute', function() { pm.expect(instance[\"productCharacteristic\"]).to.be.a('array'); });","        pm.test('Response has productPrice attribute', function() { pm.expect(instance[\"productPrice\"]).to.be.a('array'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Product_Inventory}}product","host":["{{Product_Inventory}}product"]},"description":"This operation retrieves a Product"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/Product?fields=href","event":[{"listen":"test","script":{"id":"84df2b37-c56c-4f49-907b-cb42ae757027","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Product_Inventory}}product?fields=href","host":["{{Product_Inventory}}product"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a Product"},"response":[]},{"name":"/Product?fields=id","event":[{"listen":"test","script":{"id":"e2ffaa08-b6da-44e1-b723-097ede605f89","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Product_Inventory}}product?fields=id","host":["{{Product_Inventory}}product"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a Product"},"response":[]},{"name":"/Product?id={{IDPR01}}","event":[{"listen":"test","script":{"id":"47516132-ec41-4fbf-a3e1-01b5b718eb70","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['billingAccount', 'href', 'id', 'productCharacteristic', 'productOffering', 'productPrice', 'relatedParty', 'status'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has productCharacteristic attribute', function() { pm.expect(instance[\"productCharacteristic\"]).to.be.a('array'); });","        pm.test('Response has productPrice attribute', function() { pm.expect(instance[\"productPrice\"]).to.be.a('array'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['billingAccount', 'href', 'id', 'productCharacteristic', 'productOffering', 'productPrice', 'relatedParty', 'status'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has productCharacteristic attribute', function() { pm.expect(instance[\"productCharacteristic\"]).to.be.a('array'); });","        pm.test('Response has productPrice attribute', function() { pm.expect(instance[\"productPrice\"]).to.be.a('array'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","        }","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('IDPR02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Product_Inventory}}product?id={{IDPR01}}","host":["{{Product_Inventory}}product"],"query":[{"key":"id","value":"{{IDPR01}}"}]},"description":"This operation filter a Product"},"response":[]},{"name":"/Product?id={{STATUSPR01}}","event":[{"listen":"test","script":{"id":"480df2e0-bf1d-4d38-9d1f-5717ee874e90","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['billingAccount', 'href', 'id', 'productCharacteristic', 'productOffering', 'productPrice', 'relatedParty', 'status'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has productCharacteristic attribute', function() { pm.expect(instance[\"productCharacteristic\"]).to.be.a('array'); });","        pm.test('Response has productPrice attribute', function() { pm.expect(instance[\"productPrice\"]).to.be.a('array'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('status is ' + pm.globals.get(\"STATUSPR01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSPR01');});","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['billingAccount', 'href', 'id', 'productCharacteristic', 'productOffering', 'productPrice', 'relatedParty', 'status'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has productCharacteristic attribute', function() { pm.expect(instance[\"productCharacteristic\"]).to.be.a('array'); });","        pm.test('Response has productPrice attribute', function() { pm.expect(instance[\"productPrice\"]).to.be.a('array'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR01');});","            pm.test('id is ' + pm.globals.get(\"IDPR01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR01');});","            pm.test('status is ' + pm.globals.get(\"STATUSPR01\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSPR01');});","        }","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Product_Inventory}}product?status={{STATUSPR01}}","host":["{{Product_Inventory}}product"],"query":[{"key":"status","value":"{{STATUSPR01}}"}]},"description":"This operation filter a Product"},"response":[]},{"name":"/Product?id={{STATUSPR02}}","event":[{"listen":"test","script":{"id":"01c407ee-16d7-47bb-8b86-45ab9e4f6f7b","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['billingAccount', 'href', 'id', 'productCharacteristic', 'productOffering', 'productPrice', 'relatedParty', 'status'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has productCharacteristic attribute', function() { pm.expect(instance[\"productCharacteristic\"]).to.be.a('array'); });","        pm.test('Response has productPrice attribute', function() { pm.expect(instance[\"productPrice\"]).to.be.a('array'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR02');});","            pm.test('id is ' + pm.globals.get(\"IDPR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR02');});","            pm.test('status is ' + pm.globals.get(\"STATUSPR02\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSPR02');});","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['billingAccount', 'href', 'id', 'productCharacteristic', 'productOffering', 'productPrice', 'relatedParty', 'status'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has productCharacteristic attribute', function() { pm.expect(instance[\"productCharacteristic\"]).to.be.a('array'); });","        pm.test('Response has productPrice attribute', function() { pm.expect(instance[\"productPrice\"]).to.be.a('array'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR02');});","            pm.test('id is ' + pm.globals.get(\"IDPR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR02');});","            pm.test('status is ' + pm.globals.get(\"STATUSPR02\"), function() {pm.expect(instance['status']) == pm.globals.get('STATUSPR02');});","        }","        ","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Product_Inventory}}product?status={{STATUSPR02}}","host":["{{Product_Inventory}}product"],"query":[{"key":"status","value":"{{STATUSPR02}}"}]},"description":"This operation filter a Product"},"response":[]},{"name":"/Product?id={{IDPR02}}","event":[{"listen":"test","script":{"id":"c9f69a2c-24fe-4f2a-ac71-2b7b4716a324","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['billingAccount', 'href', 'id', 'productCharacteristic', 'productOffering', 'productPrice', 'relatedParty', 'status'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has productCharacteristic attribute', function() { pm.expect(instance[\"productCharacteristic\"]).to.be.a('array'); });","        pm.test('Response has productPrice attribute', function() { pm.expect(instance[\"productPrice\"]).to.be.a('array'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR02');});","            pm.test('id is ' + pm.globals.get(\"IDPR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR02');});","        }","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('IDPR01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['billingAccount', 'href', 'id', 'productCharacteristic', 'productOffering', 'productPrice', 'relatedParty', 'status'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has productCharacteristic attribute', function() { pm.expect(instance[\"productCharacteristic\"]).to.be.a('array'); });","        pm.test('Response has productPrice attribute', function() { pm.expect(instance[\"productPrice\"]).to.be.a('array'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPR02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPR02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPR02');});","            pm.test('id is ' + pm.globals.get(\"IDPR02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPR02');});","        }","        if (instance.id == pm.globals.get(\"IDPR01\")) {","            pm.test('IDPR01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Product_Inventory}}product?id={{IDPR02}}","host":["{{Product_Inventory}}product"],"query":[{"key":"id","value":"{{IDPR02}}"}]},"description":"This operation filter a Product"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/Product/404ID","event":[{"listen":"test","script":{"id":"4032d3d1-9e16-466a-89b6-502e2c51e428","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Product_Inventory}}product/55a2163b-489e-4138-93e9-8becb24272f2","host":["{{Product_Inventory}}product"],"path":["55a2163b-489e-4138-93e9-8becb24272f2"]},"description":"This operation search for one of the created Product"},"response":[]}],"protocolProfileBehavior":{}}],"protocolProfileBehavior":{}}