{"info":{"_postman_id":"67fbae3a-9b81-4f17-923d-a6875e11bfe0","name":"CTK-Account-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"N1","item":[{"name":"/BillFormat","event":[{"listen":"test","script":{"id":"3518e1c7-9cc3-4883-8023-4173fd52d630","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFBF01', instance['href']);","pm.globals.set('IDBF01', instance['id']);","pm.globals.set('NAMEBF01', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Detailed invoice\"\n}"},"url":{"raw":"{{Account}}billFormat","host":["{{Account}}billFormat"]},"description":"This operation creates a BillFormat"},"response":[]},{"name":"/BillFormat","event":[{"listen":"test","script":{"id":"830715c8-e5a8-4ebc-a0ce-3d4907392ec7","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFBF02', instance['href']);","pm.globals.set('IDBF02', instance['id']);","pm.globals.set('NAMEBF02', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Detailed invoice\"\n}"},"url":{"raw":"{{Account}}billFormat","host":["{{Account}}billFormat"]},"description":"This operation creates another BillFormat"},"response":[]},{"name":"/BillFormat","event":[{"listen":"test","script":{"id":"28f3ca91-54b4-48ca-8bb2-e1a71569b576","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF01');});","            pm.test('id is ' + pm.globals.get(\"IDBF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF01');});","        }","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF02');});","            pm.test('id is ' + pm.globals.get(\"IDBF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF01');});","            pm.test('id is ' + pm.globals.get(\"IDBF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF01');});","        }","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF02');});","            pm.test('id is ' + pm.globals.get(\"IDBF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat","host":["{{Account}}billFormat"]},"description":"This operation search for the created BillFormat"},"response":[]},{"name":"/BillFormat/{{IDBF01}}","event":[{"listen":"test","script":{"id":"62ba9f37-9e14-4a5f-8f65-1fa623fffb0f","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF01');});","            pm.test('id is ' + pm.globals.get(\"IDBF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF01');});","        }","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('IDBF02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF01');});","            pm.test('id is ' + pm.globals.get(\"IDBF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF01');});","        }","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('IDBF02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat/{{IDBF01}}","host":["{{Account}}billFormat"],"path":["{{IDBF01}}"]},"description":"This operation search for one of the created BillFormat"},"response":[]},{"name":"/BillFormat/{{IDBF02}}","event":[{"listen":"test","script":{"id":"3014d94f-cb9b-4d0d-8fd3-7aadb75dd166","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF02');});","            pm.test('id is ' + pm.globals.get(\"IDBF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF02');});","        }","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('IDBF01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF02');});","            pm.test('id is ' + pm.globals.get(\"IDBF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF02');});","        }","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('IDBF01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat/{{IDBF02}}","host":["{{Account}}billFormat"],"path":["{{IDBF02}}"]},"description":"This operation search for the other one of the created BillFormat"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/BillFormat?fields=name","event":[{"listen":"test","script":{"id":"2be36d36-ec64-41ea-882f-73d8891d5520","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat?fields=name","host":["{{Account}}billFormat"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a BillFormat"},"response":[]},{"name":"/BillFormat?name={{NAMEBF01}}","event":[{"listen":"test","script":{"id":"9bbc5254-91af-47ed-bde3-83b9c50ce87f","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF01');});","            pm.test('id is ' + pm.globals.get(\"IDBF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF01');});","        }","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('IDBF02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF01');});","            pm.test('id is ' + pm.globals.get(\"IDBF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF01');});","        }","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('IDBF02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat?name={{NAMEBF01}}","host":["{{Account}}billFormat"],"query":[{"key":"name","value":"{{NAMEBF01}}"}]},"description":"This operation filter a BillFormat"},"response":[]},{"name":"/BillFormat?name={{NAMEBF02}}","event":[{"listen":"test","script":{"id":"d03ef759-b57c-419c-aee8-8dbaf9af04d5","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF02');});","            pm.test('id is ' + pm.globals.get(\"IDBF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF02');});","        }","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('IDBF01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF02');});","            pm.test('id is ' + pm.globals.get(\"IDBF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF02');});","        }","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('IDBF01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat?name={{NAMEBF02}}","host":["{{Account}}billFormat"],"query":[{"key":"name","value":"{{NAMEBF02}}"}]},"description":"This operation filter a BillFormat"},"response":[]},{"name":"/BillFormat?fields=href","event":[{"listen":"test","script":{"id":"bdcffa6b-bc01-4252-95f7-d04b1b98afad","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat?fields=href","host":["{{Account}}billFormat"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a BillFormat"},"response":[]},{"name":"/BillFormat?fields=id","event":[{"listen":"test","script":{"id":"a5b1e9b9-baf7-46ed-9e52-dbeeda5221e1","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat?fields=id","host":["{{Account}}billFormat"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a BillFormat"},"response":[]},{"name":"/BillFormat?id={{IDBF01}}","event":[{"listen":"test","script":{"id":"b20d897b-d63c-46d7-bb5b-9a6463569fbe","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF01');});","            pm.test('id is ' + pm.globals.get(\"IDBF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF01');});","        }","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('IDBF02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF01');});","            pm.test('id is ' + pm.globals.get(\"IDBF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF01');});","        }","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('IDBF02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat?id={{IDBF01}}","host":["{{Account}}billFormat"],"query":[{"key":"id","value":"{{IDBF01}}"}]},"description":"This operation filter a BillFormat"},"response":[]},{"name":"/BillFormat?id={{IDBF02}}","event":[{"listen":"test","script":{"id":"06e79787-3d4c-44ee-8f44-b9711df952d6","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF02');});","            pm.test('id is ' + pm.globals.get(\"IDBF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF02');});","        }","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('IDBF01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF02');});","            pm.test('id is ' + pm.globals.get(\"IDBF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF02');});","        }","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('IDBF01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat?id={{IDBF02}}","host":["{{Account}}billFormat"],"query":[{"key":"id","value":"{{IDBF02}}"}]},"description":"This operation filter a BillFormat"},"response":[]},{"name":"/BillFormat?fields=name","event":[{"listen":"test","script":{"id":"c8f45f85-ca77-41cc-bb27-9064dbb827fa","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat?fields=name","host":["{{Account}}billFormat"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a BillFormat"},"response":[]},{"name":"/BillFormat?name={{NAMEBF01}}","event":[{"listen":"test","script":{"id":"2ce44ff4-f33d-462c-8c1d-639d7b25aa6f","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF01');});","            pm.test('id is ' + pm.globals.get(\"IDBF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF01');});","        }","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('IDBF02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF01');});","            pm.test('id is ' + pm.globals.get(\"IDBF01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF01');});","        }","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('IDBF02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat?name={{NAMEBF01}}","host":["{{Account}}billFormat"],"query":[{"key":"name","value":"{{NAMEBF01}}"}]},"description":"This operation filter a BillFormat"},"response":[]},{"name":"/BillFormat?name={{NAMEBF02}}","event":[{"listen":"test","script":{"id":"6bac0818-c57b-4fa1-907f-625c9586135b","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF02');});","            pm.test('id is ' + pm.globals.get(\"IDBF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF02');});","        }","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('IDBF01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBF02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBF02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBF02');});","            pm.test('id is ' + pm.globals.get(\"IDBF02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBF02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBF02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBF02');});","        }","        if (instance.id == pm.globals.get(\"IDBF01\")) {","            pm.test('IDBF01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat?name={{NAMEBF02}}","host":["{{Account}}billFormat"],"query":[{"key":"name","value":"{{NAMEBF02}}"}]},"description":"This operation filter a BillFormat"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/BillFormat/404ID","event":[{"listen":"test","script":{"id":"a218a9df-1155-49aa-96c6-d0d258c9f2cb","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billFormat/2c1b90b0-fbe8-426d-a3b6-7ec785ff9d7c","host":["{{Account}}billFormat"],"path":["2c1b90b0-fbe8-426d-a3b6-7ec785ff9d7c"]},"description":"This operation search for one of the created BillFormat"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/PartyAccount","event":[{"listen":"test","script":{"id":"f740f55e-96b2-4af8-a0e9-82f6d83f2ea5","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","","pm.globals.set('HREFPA01', instance['href']);","pm.globals.set('IDPA01', instance['id']);","pm.globals.set('NAMEPA01', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Travel account\",\n  \"relatedParty\": [\n    {\n      \"@referredType\": \"Organization\",\n      \"id\": \"4665\",\n      \"name\": \"John Doe\"\n    }\n  ]\n}"},"url":{"raw":"{{Account}}partyAccount","host":["{{Account}}partyAccount"]},"description":"This operation creates a PartyAccount"},"response":[]},{"name":"/PartyAccount","event":[{"listen":"test","script":{"id":"f73b738d-767e-4b61-b860-f64903761c31","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","","pm.globals.set('HREFPA02', instance['href']);","pm.globals.set('IDPA02', instance['id']);","pm.globals.set('NAMEPA02', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Travel account\",\n  \"relatedParty\": [\n    {\n      \"@referredType\": \"Organization\",\n      \"id\": \"4665\",\n      \"name\": \"John Doe\"\n    }\n  ]\n}"},"url":{"raw":"{{Account}}partyAccount","host":["{{Account}}partyAccount"]},"description":"This operation creates another PartyAccount"},"response":[]},{"name":"/PartyAccount","event":[{"listen":"test","script":{"id":"6cdace87-07ba-413c-90df-3ae55d5797d4","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount","host":["{{Account}}partyAccount"]},"description":"This operation search for the created PartyAccount"},"response":[]},{"name":"/PartyAccount/{{IDPA01}}","event":[{"listen":"test","script":{"id":"dae331b3-362a-45af-ba61-aad0dac3ab5d","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount/{{IDPA01}}","host":["{{Account}}partyAccount"],"path":["{{IDPA01}}"]},"description":"This operation search for one of the created PartyAccount"},"response":[]},{"name":"/PartyAccount/{{IDPA02}}","event":[{"listen":"test","script":{"id":"f11a127e-6425-4d7f-9623-c02bde31bfe0","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount/{{IDPA02}}","host":["{{Account}}partyAccount"],"path":["{{IDPA02}}"]},"description":"This operation search for the other one of the created PartyAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/PartyAccount?fields=name","event":[{"listen":"test","script":{"id":"0fad79d7-c69d-4e10-b7f4-bb89f73424ab","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount?fields=name","host":["{{Account}}partyAccount"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a PartyAccount"},"response":[]},{"name":"/PartyAccount?name={{NAMEPA01}}","event":[{"listen":"test","script":{"id":"695da556-51ac-4625-96ba-0a19889f10c8","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount?name={{NAMEPA01}}","host":["{{Account}}partyAccount"],"query":[{"key":"name","value":"{{NAMEPA01}}"}]},"description":"This operation filter a PartyAccount"},"response":[]},{"name":"/PartyAccount?name={{NAMEPA02}}","event":[{"listen":"test","script":{"id":"058e6d5b-96fa-4b18-bfd1-157e4d6a83e9","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount?name={{NAMEPA02}}","host":["{{Account}}partyAccount"],"query":[{"key":"name","value":"{{NAMEPA02}}"}]},"description":"This operation filter a PartyAccount"},"response":[]},{"name":"/PartyAccount?fields=href","event":[{"listen":"test","script":{"id":"4def4adf-2c2d-45cf-bb7b-1cfe4158f3aa","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount?fields=href","host":["{{Account}}partyAccount"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a PartyAccount"},"response":[]},{"name":"/PartyAccount?fields=id","event":[{"listen":"test","script":{"id":"4cca0fe4-5b34-4499-9e5f-b52cdf5659fc","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount?fields=id","host":["{{Account}}partyAccount"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a PartyAccount"},"response":[]},{"name":"/PartyAccount?id={{IDPA01}}","event":[{"listen":"test","script":{"id":"c2f7a119-6b7a-4f21-9cac-6e6db658cd7b","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount?id={{IDPA01}}","host":["{{Account}}partyAccount"],"query":[{"key":"id","value":"{{IDPA01}}"}]},"description":"This operation filter a PartyAccount"},"response":[]},{"name":"/PartyAccount?id={{IDPA02}}","event":[{"listen":"test","script":{"id":"48ffb9a0-5b4a-454d-8f11-a53f84186967","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount?id={{IDPA02}}","host":["{{Account}}partyAccount"],"query":[{"key":"id","value":"{{IDPA02}}"}]},"description":"This operation filter a PartyAccount"},"response":[]},{"name":"/PartyAccount?fields=name","event":[{"listen":"test","script":{"id":"592e3f2d-f010-4a2f-9a66-86ada58b33e7","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount?fields=name","host":["{{Account}}partyAccount"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a PartyAccount"},"response":[]},{"name":"/PartyAccount?name={{NAMEPA01}}","event":[{"listen":"test","script":{"id":"334232e4-c838-451f-abee-b8961406100a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA01');});","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA01');});","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount?name={{NAMEPA01}}","host":["{{Account}}partyAccount"],"query":[{"key":"name","value":"{{NAMEPA01}}"}]},"description":"This operation filter a PartyAccount"},"response":[]},{"name":"/PartyAccount?name={{NAMEPA02}}","event":[{"listen":"test","script":{"id":"c0800bf0-b356-4f2d-b94c-7ba2d0bcefea","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFPA02');});","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDPA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEPA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEPA02');});","        }","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('IDPA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount?name={{NAMEPA02}}","host":["{{Account}}partyAccount"],"query":[{"key":"name","value":"{{NAMEPA02}}"}]},"description":"This operation filter a PartyAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/PartyAccount/404ID","event":[{"listen":"test","script":{"id":"b3ec5823-89f0-47cb-8b0f-7acab2d897a9","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}partyAccount/b5ef2042-5a48-4b60-86a6-87b17a0b919d","host":["{{Account}}partyAccount"],"path":["b5ef2042-5a48-4b60-86a6-87b17a0b919d"]},"description":"This operation search for one of the created PartyAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/BillingCycleSpecification","event":[{"listen":"test","script":{"id":"4fd6e047-dd59-48a9-b75f-e0603a20b4b2","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFBCS01', instance['href']);","pm.globals.set('IDBCS01', instance['id']);","pm.globals.set('NAMEBCS01', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Monthly billing\"\n}"},"url":{"raw":"{{Account}}billingCycleSpecification","host":["{{Account}}billingCycleSpecification"]},"description":"This operation creates a BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification","event":[{"listen":"test","script":{"id":"605827bc-fc78-4628-8108-1fb6a9480b9a","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFBCS02', instance['href']);","pm.globals.set('IDBCS02', instance['id']);","pm.globals.set('NAMEBCS02', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Monthly billing\"\n}"},"url":{"raw":"{{Account}}billingCycleSpecification","host":["{{Account}}billingCycleSpecification"]},"description":"This operation creates another BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification","event":[{"listen":"test","script":{"id":"89b152f5-39ec-439e-9d6f-425e6258407f","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS01');});","            pm.test('id is ' + pm.globals.get(\"IDBCS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS01');});","        }","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS02');});","            pm.test('id is ' + pm.globals.get(\"IDBCS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS01');});","            pm.test('id is ' + pm.globals.get(\"IDBCS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS01');});","        }","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS02');});","            pm.test('id is ' + pm.globals.get(\"IDBCS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification","host":["{{Account}}billingCycleSpecification"]},"description":"This operation search for the created BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification/{{IDBCS01}}","event":[{"listen":"test","script":{"id":"b91f85e2-3cff-4a51-a284-eb8f5df777f7","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS01');});","            pm.test('id is ' + pm.globals.get(\"IDBCS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS01');});","        }","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('IDBCS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS01');});","            pm.test('id is ' + pm.globals.get(\"IDBCS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS01');});","        }","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('IDBCS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification/{{IDBCS01}}","host":["{{Account}}billingCycleSpecification"],"path":["{{IDBCS01}}"]},"description":"This operation search for one of the created BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification/{{IDBCS02}}","event":[{"listen":"test","script":{"id":"4bd77452-8606-4a78-b288-d1cda117d01d","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS02');});","            pm.test('id is ' + pm.globals.get(\"IDBCS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS02');});","        }","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('IDBCS01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS02');});","            pm.test('id is ' + pm.globals.get(\"IDBCS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS02');});","        }","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('IDBCS01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification/{{IDBCS02}}","host":["{{Account}}billingCycleSpecification"],"path":["{{IDBCS02}}"]},"description":"This operation search for the other one of the created BillingCycleSpecification"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/BillingCycleSpecification?fields=name","event":[{"listen":"test","script":{"id":"faee02fd-5207-4e17-83ba-6b786c793e51","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification?fields=name","host":["{{Account}}billingCycleSpecification"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification?name={{NAMEBCS01}}","event":[{"listen":"test","script":{"id":"dfc70d2b-56ad-4dcd-a9ef-35a6313ef53b","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS01');});","            pm.test('id is ' + pm.globals.get(\"IDBCS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS01');});","        }","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('IDBCS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS01');});","            pm.test('id is ' + pm.globals.get(\"IDBCS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS01');});","        }","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('IDBCS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification?name={{NAMEBCS01}}","host":["{{Account}}billingCycleSpecification"],"query":[{"key":"name","value":"{{NAMEBCS01}}"}]},"description":"This operation filter a BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification?name={{NAMEBCS02}}","event":[{"listen":"test","script":{"id":"438db94c-2ba7-4499-988b-6e6d4a2dc635","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS02');});","            pm.test('id is ' + pm.globals.get(\"IDBCS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS02');});","        }","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('IDBCS01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS02');});","            pm.test('id is ' + pm.globals.get(\"IDBCS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS02');});","        }","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('IDBCS01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification?name={{NAMEBCS02}}","host":["{{Account}}billingCycleSpecification"],"query":[{"key":"name","value":"{{NAMEBCS02}}"}]},"description":"This operation filter a BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification?fields=href","event":[{"listen":"test","script":{"id":"79a5aa08-9847-48bb-8c22-619da2f08589","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification?fields=href","host":["{{Account}}billingCycleSpecification"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification?fields=id","event":[{"listen":"test","script":{"id":"9fd4465b-b68f-43b1-a8c1-1d1ad1ab3f4e","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification?fields=id","host":["{{Account}}billingCycleSpecification"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification?id={{IDBCS01}}","event":[{"listen":"test","script":{"id":"a3263ebf-d7f9-47b6-8171-4c3ddf0f9f3d","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS01');});","            pm.test('id is ' + pm.globals.get(\"IDBCS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS01');});","        }","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('IDBCS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS01');});","            pm.test('id is ' + pm.globals.get(\"IDBCS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS01');});","        }","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('IDBCS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification?id={{IDBCS01}}","host":["{{Account}}billingCycleSpecification"],"query":[{"key":"id","value":"{{IDBCS01}}"}]},"description":"This operation filter a BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification?id={{IDBCS02}}","event":[{"listen":"test","script":{"id":"e23e2cb0-0099-4403-96df-afbb769228a1","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS02');});","            pm.test('id is ' + pm.globals.get(\"IDBCS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS02');});","        }","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('IDBCS01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS02');});","            pm.test('id is ' + pm.globals.get(\"IDBCS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS02');});","        }","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('IDBCS01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification?id={{IDBCS02}}","host":["{{Account}}billingCycleSpecification"],"query":[{"key":"id","value":"{{IDBCS02}}"}]},"description":"This operation filter a BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification?fields=name","event":[{"listen":"test","script":{"id":"f28cd074-87a4-4de4-a53c-a3e290ce0154","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification?fields=name","host":["{{Account}}billingCycleSpecification"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification?name={{NAMEBCS01}}","event":[{"listen":"test","script":{"id":"f0108294-6d73-41af-8cc1-4e1c980ba530","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS01');});","            pm.test('id is ' + pm.globals.get(\"IDBCS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS01');});","        }","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('IDBCS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS01');});","            pm.test('id is ' + pm.globals.get(\"IDBCS01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS01');});","        }","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('IDBCS02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification?name={{NAMEBCS01}}","host":["{{Account}}billingCycleSpecification"],"query":[{"key":"name","value":"{{NAMEBCS01}}"}]},"description":"This operation filter a BillingCycleSpecification"},"response":[]},{"name":"/BillingCycleSpecification?name={{NAMEBCS02}}","event":[{"listen":"test","script":{"id":"362c49ae-575a-4d5c-b2b4-a05cf143d415","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS02');});","            pm.test('id is ' + pm.globals.get(\"IDBCS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS02');});","        }","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('IDBCS01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBCS02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBCS02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBCS02');});","            pm.test('id is ' + pm.globals.get(\"IDBCS02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBCS02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBCS02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBCS02');});","        }","        if (instance.id == pm.globals.get(\"IDBCS01\")) {","            pm.test('IDBCS01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification?name={{NAMEBCS02}}","host":["{{Account}}billingCycleSpecification"],"query":[{"key":"name","value":"{{NAMEBCS02}}"}]},"description":"This operation filter a BillingCycleSpecification"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/BillingCycleSpecification/404ID","event":[{"listen":"test","script":{"id":"7bf3a35e-41fb-4c72-951e-bb3992aa6a03","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingCycleSpecification/49506db2-7b1c-47c3-9a93-bda4fba5d26d","host":["{{Account}}billingCycleSpecification"],"path":["49506db2-7b1c-47c3-9a93-bda4fba5d26d"]},"description":"This operation search for one of the created BillingCycleSpecification"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/FinancialAccount","event":[{"listen":"test","script":{"id":"22040df9-87c9-4bc8-a59c-ca5fcd6cce32","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFFA01', instance['href']);","pm.globals.set('IDFA01', instance['id']);","pm.globals.set('NAMEFA01', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Administration account\"\n}"},"url":{"raw":"{{Account}}financialAccount","host":["{{Account}}financialAccount"]},"description":"This operation creates a FinancialAccount"},"response":[]},{"name":"/FinancialAccount","event":[{"listen":"test","script":{"id":"de1b024c-2d7e-4ba2-8a6e-fcaabc14fb44","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFFA02', instance['href']);","pm.globals.set('IDFA02', instance['id']);","pm.globals.set('NAMEFA02', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Administration account\"\n}"},"url":{"raw":"{{Account}}financialAccount","host":["{{Account}}financialAccount"]},"description":"This operation creates another FinancialAccount"},"response":[]},{"name":"/FinancialAccount","event":[{"listen":"test","script":{"id":"32eedb3e-78dd-40c7-9f50-c175a2b37736","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA01');});","            pm.test('id is ' + pm.globals.get(\"IDFA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA01');});","        }","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA02');});","            pm.test('id is ' + pm.globals.get(\"IDFA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA01');});","            pm.test('id is ' + pm.globals.get(\"IDFA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA01');});","        }","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA02');});","            pm.test('id is ' + pm.globals.get(\"IDFA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount","host":["{{Account}}financialAccount"]},"description":"This operation search for the created FinancialAccount"},"response":[]},{"name":"/FinancialAccount/{{IDFA01}}","event":[{"listen":"test","script":{"id":"a9295026-1d16-47a6-b0a2-a0d728a69645","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA01');});","            pm.test('id is ' + pm.globals.get(\"IDFA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA01');});","        }","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('IDFA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA01');});","            pm.test('id is ' + pm.globals.get(\"IDFA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA01');});","        }","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('IDFA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount/{{IDFA01}}","host":["{{Account}}financialAccount"],"path":["{{IDFA01}}"]},"description":"This operation search for one of the created FinancialAccount"},"response":[]},{"name":"/FinancialAccount/{{IDFA02}}","event":[{"listen":"test","script":{"id":"9d5151b2-fa68-4b22-beab-5351c6e93b06","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA02');});","            pm.test('id is ' + pm.globals.get(\"IDFA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA02');});","        }","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('IDFA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA02');});","            pm.test('id is ' + pm.globals.get(\"IDFA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA02');});","        }","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('IDFA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount/{{IDFA02}}","host":["{{Account}}financialAccount"],"path":["{{IDFA02}}"]},"description":"This operation search for the other one of the created FinancialAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/FinancialAccount?fields=name","event":[{"listen":"test","script":{"id":"797e63c9-d8e4-481a-9e61-5115b72aad30","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount?fields=name","host":["{{Account}}financialAccount"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a FinancialAccount"},"response":[]},{"name":"/FinancialAccount?name={{NAMEFA01}}","event":[{"listen":"test","script":{"id":"590f7e17-9f6e-489c-860d-8e3c754c2b26","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA01');});","            pm.test('id is ' + pm.globals.get(\"IDFA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA01');});","        }","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('IDFA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA01');});","            pm.test('id is ' + pm.globals.get(\"IDFA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA01');});","        }","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('IDFA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount?name={{NAMEFA01}}","host":["{{Account}}financialAccount"],"query":[{"key":"name","value":"{{NAMEFA01}}"}]},"description":"This operation filter a FinancialAccount"},"response":[]},{"name":"/FinancialAccount?name={{NAMEFA02}}","event":[{"listen":"test","script":{"id":"4074a114-6895-4a36-81ef-4bf72ebbfaa7","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA02');});","            pm.test('id is ' + pm.globals.get(\"IDFA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA02');});","        }","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('IDFA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA02');});","            pm.test('id is ' + pm.globals.get(\"IDFA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA02');});","        }","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('IDFA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount?name={{NAMEFA02}}","host":["{{Account}}financialAccount"],"query":[{"key":"name","value":"{{NAMEFA02}}"}]},"description":"This operation filter a FinancialAccount"},"response":[]},{"name":"/FinancialAccount?fields=href","event":[{"listen":"test","script":{"id":"2d80d582-ab89-49b2-87d9-7d65e4d4b29a","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount?fields=href","host":["{{Account}}financialAccount"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a FinancialAccount"},"response":[]},{"name":"/FinancialAccount?fields=id","event":[{"listen":"test","script":{"id":"49b392eb-0e33-44b0-8608-f0c06f33e4b7","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount?fields=id","host":["{{Account}}financialAccount"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a FinancialAccount"},"response":[]},{"name":"/FinancialAccount?id={{IDFA01}}","event":[{"listen":"test","script":{"id":"999e4d88-310e-4320-a19b-9e013bf3c1f5","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA01');});","            pm.test('id is ' + pm.globals.get(\"IDFA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA01');});","        }","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('IDFA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA01');});","            pm.test('id is ' + pm.globals.get(\"IDFA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA01');});","        }","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('IDFA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount?id={{IDFA01}}","host":["{{Account}}financialAccount"],"query":[{"key":"id","value":"{{IDFA01}}"}]},"description":"This operation filter a FinancialAccount"},"response":[]},{"name":"/FinancialAccount?id={{IDFA02}}","event":[{"listen":"test","script":{"id":"0ef109f0-60f3-49b8-8121-cc314f0a670c","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA02');});","            pm.test('id is ' + pm.globals.get(\"IDFA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA02');});","        }","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('IDFA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA02');});","            pm.test('id is ' + pm.globals.get(\"IDFA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA02');});","        }","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('IDFA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount?id={{IDFA02}}","host":["{{Account}}financialAccount"],"query":[{"key":"id","value":"{{IDFA02}}"}]},"description":"This operation filter a FinancialAccount"},"response":[]},{"name":"/FinancialAccount?fields=name","event":[{"listen":"test","script":{"id":"20da767a-1b09-41aa-87a0-adf2ada58d96","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount?fields=name","host":["{{Account}}financialAccount"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a FinancialAccount"},"response":[]},{"name":"/FinancialAccount?name={{NAMEFA01}}","event":[{"listen":"test","script":{"id":"da13eb45-4cd0-45c6-a98b-9de760989780","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA01');});","            pm.test('id is ' + pm.globals.get(\"IDFA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA01');});","        }","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('IDFA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA01');});","            pm.test('id is ' + pm.globals.get(\"IDFA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA01');});","        }","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('IDFA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount?name={{NAMEFA01}}","host":["{{Account}}financialAccount"],"query":[{"key":"name","value":"{{NAMEFA01}}"}]},"description":"This operation filter a FinancialAccount"},"response":[]},{"name":"/FinancialAccount?name={{NAMEFA02}}","event":[{"listen":"test","script":{"id":"071797a3-d207-4ea5-a546-69d34c88410c","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA02');});","            pm.test('id is ' + pm.globals.get(\"IDFA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA02');});","        }","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('IDFA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'href', 'id', 'name'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDFA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFFA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFFA02');});","            pm.test('id is ' + pm.globals.get(\"IDFA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDFA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEFA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEFA02');});","        }","        if (instance.id == pm.globals.get(\"IDFA01\")) {","            pm.test('IDFA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount?name={{NAMEFA02}}","host":["{{Account}}financialAccount"],"query":[{"key":"name","value":"{{NAMEFA02}}"}]},"description":"This operation filter a FinancialAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/FinancialAccount/404ID","event":[{"listen":"test","script":{"id":"99ab1172-8429-45c6-adaa-c47b92d7bdf1","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}financialAccount/3822d35f-f3d9-4cf2-b46b-b2f45f731e6a","host":["{{Account}}financialAccount"],"path":["3822d35f-f3d9-4cf2-b46b-b2f45f731e6a"]},"description":"This operation search for one of the created FinancialAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/BillingAccount","event":[{"listen":"test","script":{"id":"947d60ab-dffb-49b8-bb40-d02006ec6cfa","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","","pm.globals.set('HREFBA01', instance['href']);","pm.globals.set('IDBA01', instance['id']);","pm.globals.set('NAMEBA01', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Home Account\",\n  \"relatedParty\": [\n    {\n      \"@referredType\": \"Organization\",\n      \"id\": \"6838\",\n      \"name\": \"Richard Cole\"\n    }\n  ]\n}"},"url":{"raw":"{{Account}}billingAccount","host":["{{Account}}billingAccount"]},"description":"This operation creates a BillingAccount"},"response":[]},{"name":"/BillingAccount","event":[{"listen":"test","script":{"id":"52a4c47f-2229-4ca2-a36b-7af1a883bb82","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","","pm.globals.set('HREFBA02', instance['href']);","pm.globals.set('IDBA02', instance['id']);","pm.globals.set('NAMEBA02', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Home Account\",\n  \"relatedParty\": [\n    {\n      \"@referredType\": \"Organization\",\n      \"id\": \"6838\",\n      \"name\": \"Richard Cole\"\n    }\n  ]\n}"},"url":{"raw":"{{Account}}billingAccount","host":["{{Account}}billingAccount"]},"description":"This operation creates another BillingAccount"},"response":[]},{"name":"/BillingAccount","event":[{"listen":"test","script":{"id":"34e71d09-222d-4e22-a56e-04c2228eff35","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA01');});","            pm.test('id is ' + pm.globals.get(\"IDBA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA01');});","        }","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA02');});","            pm.test('id is ' + pm.globals.get(\"IDBA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA01');});","            pm.test('id is ' + pm.globals.get(\"IDBA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA01');});","        }","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA02');});","            pm.test('id is ' + pm.globals.get(\"IDBA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount","host":["{{Account}}billingAccount"]},"description":"This operation search for the created BillingAccount"},"response":[]},{"name":"/BillingAccount/{{IDBA01}}","event":[{"listen":"test","script":{"id":"5393cdc0-6c37-404d-bf97-b1a33bfe8ad3","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA01');});","            pm.test('id is ' + pm.globals.get(\"IDBA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA01');});","        }","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('IDBA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA01');});","            pm.test('id is ' + pm.globals.get(\"IDBA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA01');});","        }","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('IDBA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount/{{IDBA01}}","host":["{{Account}}billingAccount"],"path":["{{IDBA01}}"]},"description":"This operation search for one of the created BillingAccount"},"response":[]},{"name":"/BillingAccount/{{IDBA02}}","event":[{"listen":"test","script":{"id":"9802ecec-99ff-4bc5-b7f7-fd767d667414","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA02');});","            pm.test('id is ' + pm.globals.get(\"IDBA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA02');});","        }","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('IDBA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA02');});","            pm.test('id is ' + pm.globals.get(\"IDBA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA02');});","        }","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('IDBA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount/{{IDBA02}}","host":["{{Account}}billingAccount"],"path":["{{IDBA02}}"]},"description":"This operation search for the other one of the created BillingAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/BillingAccount?fields=name","event":[{"listen":"test","script":{"id":"a37e99d1-2ac7-4fa3-a65e-727005cf3527","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount?fields=name","host":["{{Account}}billingAccount"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a BillingAccount"},"response":[]},{"name":"/BillingAccount?name={{NAMEBA01}}","event":[{"listen":"test","script":{"id":"2e73d9b0-af91-487f-9a11-f718435b554e","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA01');});","            pm.test('id is ' + pm.globals.get(\"IDBA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA01');});","        }","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('IDBA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA01');});","            pm.test('id is ' + pm.globals.get(\"IDBA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA01');});","        }","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('IDBA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount?name={{NAMEBA01}}","host":["{{Account}}billingAccount"],"query":[{"key":"name","value":"{{NAMEBA01}}"}]},"description":"This operation filter a BillingAccount"},"response":[]},{"name":"/BillingAccount?name={{NAMEBA02}}","event":[{"listen":"test","script":{"id":"a8310dff-446a-4aab-a790-61b52ae68d6e","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA02');});","            pm.test('id is ' + pm.globals.get(\"IDBA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA02');});","        }","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('IDBA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA02');});","            pm.test('id is ' + pm.globals.get(\"IDBA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA02');});","        }","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('IDBA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount?name={{NAMEBA02}}","host":["{{Account}}billingAccount"],"query":[{"key":"name","value":"{{NAMEBA02}}"}]},"description":"This operation filter a BillingAccount"},"response":[]},{"name":"/BillingAccount?fields=href","event":[{"listen":"test","script":{"id":"c31e0bd3-0d06-48b1-b93f-1383710eedb7","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount?fields=href","host":["{{Account}}billingAccount"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a BillingAccount"},"response":[]},{"name":"/BillingAccount?fields=id","event":[{"listen":"test","script":{"id":"b6f9926f-2f50-4487-b8eb-9fcb8f680efb","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount?fields=id","host":["{{Account}}billingAccount"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a BillingAccount"},"response":[]},{"name":"/BillingAccount?id={{IDBA01}}","event":[{"listen":"test","script":{"id":"788ab40d-300b-4df9-bb4a-807e731f2485","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA01');});","            pm.test('id is ' + pm.globals.get(\"IDBA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA01');});","        }","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('IDBA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA01');});","            pm.test('id is ' + pm.globals.get(\"IDBA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA01');});","        }","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('IDBA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount?id={{IDBA01}}","host":["{{Account}}billingAccount"],"query":[{"key":"id","value":"{{IDBA01}}"}]},"description":"This operation filter a BillingAccount"},"response":[]},{"name":"/BillingAccount?id={{IDBA02}}","event":[{"listen":"test","script":{"id":"0f9f7329-d64d-4e19-a3c0-3cf120168a23","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA02');});","            pm.test('id is ' + pm.globals.get(\"IDBA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA02');});","        }","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('IDBA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA02');});","            pm.test('id is ' + pm.globals.get(\"IDBA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA02');});","        }","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('IDBA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount?id={{IDBA02}}","host":["{{Account}}billingAccount"],"query":[{"key":"id","value":"{{IDBA02}}"}]},"description":"This operation filter a BillingAccount"},"response":[]},{"name":"/BillingAccount?fields=name","event":[{"listen":"test","script":{"id":"0ff14d9e-6e38-4bfc-ba96-b5af3c661ff0","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount?fields=name","host":["{{Account}}billingAccount"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a BillingAccount"},"response":[]},{"name":"/BillingAccount?name={{NAMEBA01}}","event":[{"listen":"test","script":{"id":"977efc41-7ff4-44c8-ad6d-2f9700246c88","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA01');});","            pm.test('id is ' + pm.globals.get(\"IDBA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA01');});","        }","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('IDBA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA01');});","            pm.test('id is ' + pm.globals.get(\"IDBA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA01');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA01');});","        }","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('IDBA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount?name={{NAMEBA01}}","host":["{{Account}}billingAccount"],"query":[{"key":"name","value":"{{NAMEBA01}}"}]},"description":"This operation filter a BillingAccount"},"response":[]},{"name":"/BillingAccount?name={{NAMEBA02}}","event":[{"listen":"test","script":{"id":"a5a23a33-4080-4188-8505-b96df79e2f30","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA02');});","            pm.test('id is ' + pm.globals.get(\"IDBA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA02');});","        }","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('IDBA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDBA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFBA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFBA02');});","            pm.test('id is ' + pm.globals.get(\"IDBA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDBA02');});","            pm.test('name is ' + pm.globals.get(\"NAMEBA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMEBA02');});","        }","        if (instance.id == pm.globals.get(\"IDBA01\")) {","            pm.test('IDBA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount?name={{NAMEBA02}}","host":["{{Account}}billingAccount"],"query":[{"key":"name","value":"{{NAMEBA02}}"}]},"description":"This operation filter a BillingAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/BillingAccount/404ID","event":[{"listen":"test","script":{"id":"d4a9efcd-1b9f-4c1c-bede-455fab3c1ac8","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billingAccount/a3d00424-24fe-43a1-b25d-45ace15de5e2","host":["{{Account}}billingAccount"],"path":["a3d00424-24fe-43a1-b25d-45ace15de5e2"]},"description":"This operation search for one of the created BillingAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/BillPresentationMedia","event":[{"listen":"test","script":{"id":"cd4acab1-bcf1-407c-b851-5f2ee95193c6","exec":["","  ","var jsonData = pm.response.json();","pm.test(\"Status code is 200\", function () {","  pm.response.to.have.status(200);","});","","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","  ","    ","var requiredAttributes = ['name', 'href', 'id', 'name'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","","pm.globals.set('HREFBPM01', instance['href']);","pm.globals.set('IDBPM01', instance['id']);","pm.globals.set('NAMEBPM01', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","  ","","});","","}",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billPresentationMedia","host":["{{Account}}billPresentationMedia"]},"description":"This operation retrieves a BillPresentationMedia"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/BillPresentationMedia/404ID","event":[{"listen":"test","script":{"id":"5ddfe820-b2e7-4d79-a368-2320d4edf736","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}billPresentationMedia/efdd89fe-4b3a-4f37-ba7d-cbce32c32ac4","host":["{{Account}}billPresentationMedia"],"path":["efdd89fe-4b3a-4f37-ba7d-cbce32c32ac4"]},"description":"This operation search for one of the created BillPresentationMedia"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N1","item":[{"name":"/SettlementAccount","event":[{"listen":"test","script":{"id":"cbbe67de-5abd-446a-aee4-2f1add56322b","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","","pm.globals.set('HREFSA01', instance['href']);","pm.globals.set('IDSA01', instance['id']);","pm.globals.set('NAMESA01', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Per Usage Account\",\n  \"relatedParty\": [\n    {\n      \"@referredType\": \"Organization\",\n      \"id\": \"5965\",\n      \"name\": \"Jimmy Doe\"\n    }\n  ]\n}"},"url":{"raw":"{{Account}}settlementAccount","host":["{{Account}}settlementAccount"]},"description":"This operation creates a SettlementAccount"},"response":[]},{"name":"/SettlementAccount","event":[{"listen":"test","script":{"id":"c295a9af-55cb-409f-ae2d-bd9d11fbe52f","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) { ","  ","    pm.test('Array not expected as response', function (){pm.expect.fail()});","  ","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","","pm.globals.set('HREFSA02', instance['href']);","pm.globals.set('IDSA02', instance['id']);","pm.globals.set('NAMESA02', instance['name']);","","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on name', function () {","  pm.expect(pm.response.text()).to.include(instance['name']);","});",""],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"name\": \"Per Usage Account\",\n  \"relatedParty\": [\n    {\n      \"@referredType\": \"Organization\",\n      \"id\": \"5965\",\n      \"name\": \"Jimmy Doe\"\n    }\n  ]\n}"},"url":{"raw":"{{Account}}settlementAccount","host":["{{Account}}settlementAccount"]},"description":"This operation creates another SettlementAccount"},"response":[]},{"name":"/SettlementAccount","event":[{"listen":"test","script":{"id":"e1b8ab66-2a12-46e2-898d-4f5766833449","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA01');});","            pm.test('id is ' + pm.globals.get(\"IDSA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA01');});","            pm.test('name is ' + pm.globals.get(\"NAMESA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA01');});","        }","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA02');});","            pm.test('id is ' + pm.globals.get(\"IDSA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA02');});","            pm.test('name is ' + pm.globals.get(\"NAMESA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA02');});","        }  ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA01');});","            pm.test('id is ' + pm.globals.get(\"IDSA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA01');});","            pm.test('name is ' + pm.globals.get(\"NAMESA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA01');});","        }","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA02');});","            pm.test('id is ' + pm.globals.get(\"IDSA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA02');});","            pm.test('name is ' + pm.globals.get(\"NAMESA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA02');});","        }","   ","  }","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount","host":["{{Account}}settlementAccount"]},"description":"This operation search for the created SettlementAccount"},"response":[]},{"name":"/SettlementAccount/{{IDSA01}}","event":[{"listen":"test","script":{"id":"c0729c73-8d6d-4128-96d9-2738923c3b7d","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA01');});","            pm.test('id is ' + pm.globals.get(\"IDSA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA01');});","            pm.test('name is ' + pm.globals.get(\"NAMESA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA01');});","        }","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('IDSA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA01');});","            pm.test('id is ' + pm.globals.get(\"IDSA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA01');});","            pm.test('name is ' + pm.globals.get(\"NAMESA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA01');});","        }","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('IDSA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount/{{IDSA01}}","host":["{{Account}}settlementAccount"],"path":["{{IDSA01}}"]},"description":"This operation search for one of the created SettlementAccount"},"response":[]},{"name":"/SettlementAccount/{{IDSA02}}","event":[{"listen":"test","script":{"id":"cbe96230-1fc6-46a7-9843-3a029aefcae1","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA02');});","            pm.test('id is ' + pm.globals.get(\"IDSA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA02');});","            pm.test('name is ' + pm.globals.get(\"NAMESA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA02');});","        }","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('IDSA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA02');});","            pm.test('id is ' + pm.globals.get(\"IDSA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA02');});","            pm.test('name is ' + pm.globals.get(\"NAMESA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA02');});","        }","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('IDSA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount/{{IDSA02}}","host":["{{Account}}settlementAccount"],"path":["{{IDSA02}}"]},"description":"This operation search for the other one of the created SettlementAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"N2","item":[{"name":"/SettlementAccount?fields=name","event":[{"listen":"test","script":{"id":"5f9a388f-6f9d-4053-8523-7444ee7ee72e","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount?fields=name","host":["{{Account}}settlementAccount"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a SettlementAccount"},"response":[]},{"name":"/SettlementAccount?name={{NAMESA01}}","event":[{"listen":"test","script":{"id":"36da6a31-0614-41b1-b7a6-43d309d3eb07","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA01');});","            pm.test('id is ' + pm.globals.get(\"IDSA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA01');});","            pm.test('name is ' + pm.globals.get(\"NAMESA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA01');});","        }","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('IDSA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA01');});","            pm.test('id is ' + pm.globals.get(\"IDSA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA01');});","            pm.test('name is ' + pm.globals.get(\"NAMESA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA01');});","        }","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('IDSA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount?name={{NAMESA01}}","host":["{{Account}}settlementAccount"],"query":[{"key":"name","value":"{{NAMESA01}}"}]},"description":"This operation filter a SettlementAccount"},"response":[]},{"name":"/SettlementAccount?name={{NAMESA02}}","event":[{"listen":"test","script":{"id":"6f062be6-4176-4e06-a2c7-d53c9caac73a","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA02');});","            pm.test('id is ' + pm.globals.get(\"IDSA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA02');});","            pm.test('name is ' + pm.globals.get(\"NAMESA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA02');});","        }","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('IDSA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA02');});","            pm.test('id is ' + pm.globals.get(\"IDSA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA02');});","            pm.test('name is ' + pm.globals.get(\"NAMESA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA02');});","        }","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('IDSA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount?name={{NAMESA02}}","host":["{{Account}}settlementAccount"],"query":[{"key":"name","value":"{{NAMESA02}}"}]},"description":"This operation filter a SettlementAccount"},"response":[]},{"name":"/SettlementAccount?fields=href","event":[{"listen":"test","script":{"id":"1884274c-8115-4d27-815c-32ef45c93a03","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount?fields=href","host":["{{Account}}settlementAccount"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a SettlementAccount"},"response":[]},{"name":"/SettlementAccount?fields=id","event":[{"listen":"test","script":{"id":"7ecf83d7-4bed-4f20-b0f7-71dd64da37f2","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount?fields=id","host":["{{Account}}settlementAccount"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a SettlementAccount"},"response":[]},{"name":"/SettlementAccount?id={{IDSA01}}","event":[{"listen":"test","script":{"id":"1dc5b007-f712-4f7b-a89e-3c2dc377d2d9","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA01');});","            pm.test('id is ' + pm.globals.get(\"IDSA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA01');});","            pm.test('name is ' + pm.globals.get(\"NAMESA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA01');});","        }","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('IDSA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA01');});","            pm.test('id is ' + pm.globals.get(\"IDSA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA01');});","            pm.test('name is ' + pm.globals.get(\"NAMESA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA01');});","        }","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('IDSA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount?id={{IDSA01}}","host":["{{Account}}settlementAccount"],"query":[{"key":"id","value":"{{IDSA01}}"}]},"description":"This operation filter a SettlementAccount"},"response":[]},{"name":"/SettlementAccount?id={{IDSA02}}","event":[{"listen":"test","script":{"id":"e0204cad-9408-4bf9-b0f5-91dc26157630","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA02');});","            pm.test('id is ' + pm.globals.get(\"IDSA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA02');});","            pm.test('name is ' + pm.globals.get(\"NAMESA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA02');});","        }","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('IDSA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA02');});","            pm.test('id is ' + pm.globals.get(\"IDSA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA02');});","            pm.test('name is ' + pm.globals.get(\"NAMESA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA02');});","        }","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('IDSA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount?id={{IDSA02}}","host":["{{Account}}settlementAccount"],"query":[{"key":"id","value":"{{IDSA02}}"}]},"description":"This operation filter a SettlementAccount"},"response":[]},{"name":"/SettlementAccount?fields=name","event":[{"listen":"test","script":{"id":"ddf1a010-794c-4d5a-b8d4-751e99d78f13","exec":[""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount?fields=name","host":["{{Account}}settlementAccount"],"query":[{"key":"fields","value":"name"}]},"description":"This operation filter a SettlementAccount"},"response":[]},{"name":"/SettlementAccount?name={{NAMESA01}}","event":[{"listen":"test","script":{"id":"d3bb6857-60ad-44eb-9983-39578e261a33","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA01');});","            pm.test('id is ' + pm.globals.get(\"IDSA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA01');});","            pm.test('name is ' + pm.globals.get(\"NAMESA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA01');});","        }","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('IDSA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA01\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA01');});","            pm.test('id is ' + pm.globals.get(\"IDSA01\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA01');});","            pm.test('name is ' + pm.globals.get(\"NAMESA01\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA01');});","        }","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('IDSA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount?name={{NAMESA01}}","host":["{{Account}}settlementAccount"],"query":[{"key":"name","value":"{{NAMESA01}}"}]},"description":"This operation filter a SettlementAccount"},"response":[]},{"name":"/SettlementAccount?name={{NAMESA02}}","event":[{"listen":"test","script":{"id":"38b8fa24-6d08-4332-b882-fb11f2829817","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","  ","  ","  ","var jsonData = pm.response.json();","  ","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","      ","        var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA02');});","            pm.test('id is ' + pm.globals.get(\"IDSA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA02');});","            pm.test('name is ' + pm.globals.get(\"NAMESA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA02');});","        }","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('IDSA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","          ","    });","  }","  else {","    var instance = pm.response.json();","    var requiredAttributes = ['name', 'relatedParty', 'href', 'id', 'name', 'relatedParty'];","      ","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","      ","      ","      ","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","        pm.test('Response has href attribute', function() { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function() { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has name attribute', function() { pm.expect(instance[\"name\"]).to.be.a('string'); });","        pm.test('Response has relatedParty attribute', function() { pm.expect(instance[\"relatedParty\"]).to.be.a('array'); });","      ","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on name', function () {","            pm.expect(pm.response.text()).to.include(instance['name']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDSA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFSA02\"), function() {pm.expect(instance['href']) == pm.globals.get('HREFSA02');});","            pm.test('id is ' + pm.globals.get(\"IDSA02\"), function() {pm.expect(instance['id']) == pm.globals.get('IDSA02');});","            pm.test('name is ' + pm.globals.get(\"NAMESA02\"), function() {pm.expect(instance['name']) == pm.globals.get('NAMESA02');});","        }","        if (instance.id == pm.globals.get(\"IDSA01\")) {","            pm.test('IDSA01 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","        ","   ","}","  ","  "],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount?name={{NAMESA02}}","host":["{{Account}}settlementAccount"],"query":[{"key":"name","value":"{{NAMESA02}}"}]},"description":"This operation filter a SettlementAccount"},"response":[]}],"protocolProfileBehavior":{}},{"name":"E1","item":[{"name":"/SettlementAccount/404ID","event":[{"listen":"test","script":{"id":"94a264cf-35b0-4c32-b78c-eccb23762a2c","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"}],"url":{"raw":"{{Account}}settlementAccount/cef79573-f4ee-4c6b-a753-624983b29d40","host":["{{Account}}settlementAccount"],"path":["cef79573-f4ee-4c6b-a753-624983b29d40"]},"description":"This operation search for one of the created SettlementAccount"},"response":[]}],"protocolProfileBehavior":{}}],"protocolProfileBehavior":{}}