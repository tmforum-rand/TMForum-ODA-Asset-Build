{"info":{"_postman_id":"4521ad5b-cc0b-425a-bbd1-217da2c61598","name":"CTK-Payment-4.0.0","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"N1","item":[{"name":"/Payment","event":[{"listen":"test","script":{"id":"54806b15-e1f4-4e23-8452-9258d39aa0a6","exec":["var jsonData = pm.response.json();","","if (Array.isArray(jsonData)) {","","  pm.test('Array not expected as response', function () { pm.expect.fail() });","","}","","pm.test(\"Status code is 201\", function () {","  pm.response.to.have.status(201);","});","","var instance = pm.response.json();","var requiredAttributes = ['account', 'paymentMethod', 'href', 'id', 'totalAmount'];","","pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","pm.globals.set('HREFPA01', instance['href']);","pm.globals.set('IDPA01', instance['id']);","pm.globals.set('ACCOUNTID01', instance['account']['id']);","pm.globals.set('TOTALAMOUNTVALUE01', instance['totalAmount']['value']);","pm.globals.set('TOTALAMOUNTUNIT01', instance['totalAmount']['unit']);","","pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","pm.test('Response has account attribute', function () { pm.expect(instance[\"account\"]).to.be.a('object'); });","pm.test('Response has account.id attribute', function () { pm.expect(instance['account']['id']).to.be.a('string'); });","pm.test('Response has paymentMethod attribute', function () { pm.expect(instance[\"paymentMethod\"]).to.be.a('object'); });","pm.test('Response has totalAmount.unit attribute', function () { pm.expect(instance['totalAmount']['unit']).to.be.a('string'); });","pm.test('Response has totalAmount.value attribute', function () { pm.expect(instance['totalAmount']['value']).to.be.a('number'); });","","pm.test('Body includes value held on href', function () {","  pm.expect(pm.response.text()).to.include(instance['href']);","});","pm.test('Body includes value held on id', function () {","  pm.expect(pm.response.text()).to.include(instance['id']);","});","pm.test('Body includes value held on account.id', function () {","  pm.expect(pm.response.text()).to.include(instance['account']['id']);","});","pm.test('Body includes value held on totalAmount.unit', function () {","  pm.expect(pm.response.text()).to.include(instance['totalAmount']['unit']);","});","pm.test('Body includes value held on totalAmount.value', function () {","  pm.expect(pm.response.text()).to.include(instance['totalAmount']['value']);","});","","if (instance['paymentMethod']['@type'] === \"paymentMethodRef\"){","    pm.test('PaymentType by Ref paymentMethod.id must be present', function () {","      pm.expect(pm.response.text()).to.include(instance['paymentMethod']['id']);","    });","        pm.test('PaymentType by Ref paymentMethod.@referredType must be present', function () {","      pm.expect(pm.response.text()).to.include(instance['paymentMethod']['@referredType']);","    });","}"],"type":"text/javascript"}}],"request":{"method":"POST","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"body":{"mode":"raw","raw":"{\n  \"account\": {\n    \"id\": \"15463151\"\n  },\n  \"paymentMethod\": {\n    \"id\": \"15492MIFB865654\",\n    \"href\": \"https://host:port/paymentMethodManagement/v4/voucher/15492MIFB865654\",\n    \"@referredType\": \"Voucher\",\n    \"@type\": \"PaymentMethodRef\"\n  },\n  \"totalAmount\": {\n    \"unit\": \"EUR\",\n    \"value\": 11.6\n  }\n}"},"url":{"raw":"{{Payment}}payment","host":["{{Payment}}payment"]},"description":"This operation creates a Payment"},"response":[]},{"name":"/Payment","event":[{"listen":"test","script":{"id":"021d26ee-9be5-41a9-8e5c-b111af60e115","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","var jsonData = pm.response.json();","","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","","        var requiredAttributes = ['account', 'paymentMethod', 'href', 'id', 'totalAmount'];","","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has account attribute', function () { pm.expect(instance[\"account\"]).to.be.a('object'); });","        pm.test('Response has account.id attribute', function () { pm.expect(instance['account']['id']).to.be.a('string'); });","        pm.test('Response has paymentMethod attribute', function () { pm.expect(instance[\"paymentMethod\"]).to.be.a('object'); });","        pm.test('Response has totalAmount.unit attribute', function () { pm.expect(instance['totalAmount']['unit']).to.be.a('string'); });","        pm.test('Response has totalAmount.value attribute', function () { pm.expect(instance['totalAmount']['value']).to.be.a('number'); });","","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on account.id', function () {","            pm.expect(pm.response.text()).to.include(instance['account']['id']);","        });","        pm.test('Body includes value held on totalAmount.unit', function () {","            pm.expect(pm.response.text()).to.include(instance['totalAmount']['unit']);","        });","        pm.test('Body includes value held on totalAmount.value', function () {","            pm.expect(pm.response.text()).to.include(instance['totalAmount']['value']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA01'); });","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA01'); });","            pm.test('account.id is ' + pm.globals.get(\"ACCOUNTID01\"), function () { pm.expect(instance['account']['id']) == pm.globals.get('ACCOUNTID01'); });","            pm.test('totalAmount.unit is ' + pm.globals.get(\"TOTALAMOUNTUNIT01\"), function () { pm.expect(instance['totalAmount']['unit']) == pm.globals.get('TOTALAMOUNTUNIT01'); });","            pm.test('totalAmount.value is ' + pm.globals.get(\"TOTALAMOUNTVALUE01\"), function () { pm.expect(instance['totalAmount']['value']) == pm.globals.get('TOTALAMOUNTVALUE01'); });","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA02'); });","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA02'); });","            pm.test('account.id is ' + pm.globals.get(\"ACCOUNTID02\"), function () { pm.expect(instance['account']['id']) == pm.globals.get('ACCOUNTID02'); });","            pm.test('totalAmount.unit is ' + pm.globals.get(\"TOTALAMOUNTUNIT02\"), function () { pm.expect(instance['totalAmount']['unit']) == pm.globals.get('TOTALAMOUNTUNIT02'); });","            pm.test('totalAmount.value is ' + pm.globals.get(\"TOTALAMOUNTVALUE02\"), function () { pm.expect(instance['totalAmount']['value']) == pm.globals.get('TOTALAMOUNTVALUE02'); });","        }","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['account', 'paymentMethod', 'href', 'id', 'totalAmount'];","","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","    pm.test('Response has account attribute', function () { pm.expect(instance[\"account\"]).to.be.a('object'); });","    pm.test('Response has account.id attribute', function () { pm.expect(instance['account']['id']).to.be.a('string'); });","    pm.test('Response has paymentMethod attribute', function () { pm.expect(instance[\"paymentMethod\"]).to.be.a('object'); });","    pm.test('Response has totalAmount.unit attribute', function () { pm.expect(instance['totalAmount']['unit']).to.be.a('string'); });","    pm.test('Response has totalAmount.value attribute', function () { pm.expect(instance['totalAmount']['value']).to.be.a('number'); });","","    pm.test('Body includes value held on href', function () {","        pm.expect(pm.response.text()).to.include(instance['href']);","    });","    pm.test('Body includes value held on id', function () {","        pm.expect(pm.response.text()).to.include(instance['id']);","    });","    pm.test('Body includes value held on account.id', function () {","        pm.expect(pm.response.text()).to.include(instance['account']['id']);","    });","    pm.test('Body includes value held on totalAmount.unit', function () {","        pm.expect(pm.response.text()).to.include(instance['totalAmount']['unit']);","    });","    pm.test('Body includes value held on totalAmount.value', function () {","        pm.expect(pm.response.text()).to.include(instance['totalAmount']['value']);","    });","    // Individualized tests","    if (instance.id == pm.globals.get(\"IDPA01\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA01'); });","        pm.test('id is ' + pm.globals.get(\"IDPA01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA01'); });","        pm.test('account.id is ' + pm.globals.get(\"ACCOUNTID01\"), function () { pm.expect(instance['account']['id']) == pm.globals.get('ACCOUNTID01'); });","        pm.test('totalAmount.unit is ' + pm.globals.get(\"TOTALAMOUNTUNIT01\"), function () { pm.expect(instance['totalAmount']['unit']) == pm.globals.get('TOTALAMOUNTUNIT01'); });","        pm.test('totalAmount.value is ' + pm.globals.get(\"TOTALAMOUNTVALUE01\"), function () { pm.expect(instance['totalAmount']['value']) == pm.globals.get('TOTALAMOUNTVALUE01'); });","    }","    if (instance.id == pm.globals.get(\"IDPA02\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA02'); });","        pm.test('id is ' + pm.globals.get(\"IDPA02\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA02'); });","        pm.test('account.id is ' + pm.globals.get(\"ACCOUNTID02\"), function () { pm.expect(instance['account']['id']) == pm.globals.get('ACCOUNTID02'); });","        pm.test('totalAmount.unit is ' + pm.globals.get(\"TOTALAMOUNTUNIT02\"), function () { pm.expect(instance['totalAmount']['unit']) == pm.globals.get('TOTALAMOUNTUNIT02'); });","        pm.test('totalAmount.value is ' + pm.globals.get(\"TOTALAMOUNTVALUE02\"), function () { pm.expect(instance['totalAmount']['value']) == pm.globals.get('TOTALAMOUNTVALUE02'); });","    }","}"],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"body":{"mode":"raw","raw":""},"url":{"raw":"{{Payment}}payment","host":["{{Payment}}payment"]},"description":"This operation search for the created Payment"},"response":[]},{"name":"/Payment/{{IDPA01}}","event":[{"listen":"test","script":{"id":"4ff02f24-1452-4193-b7f2-6e97f46c61d0","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","","","var jsonData = pm.response.json();","","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","","        var requiredAttributes = ['account', 'paymentMethod', 'href', 'id', 'totalAmount'];","","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has account attribute', function () { pm.expect(instance[\"account\"]).to.be.a('object'); });","        pm.test('Response has account.id attribute', function () { pm.expect(instance['account']['id']).to.be.a('string'); });","        pm.test('Response has paymentMethod attribute', function () { pm.expect(instance[\"paymentMethod\"]).to.be.a('object'); });","        pm.test('Response has totalAmount.unit attribute', function () { pm.expect(instance['totalAmount']['unit']).to.be.a('string'); });","        pm.test('Response has totalAmount.value attribute', function () { pm.expect(instance['totalAmount']['value']).to.be.a('number'); });","","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on account.id', function () {","            pm.expect(pm.response.text()).to.include(instance['account']['id']);","        });","        pm.test('Body includes value held on totalAmount.unit', function () {","            pm.expect(pm.response.text()).to.include(instance['totalAmount']['unit']);","        });","        pm.test('Body includes value held on totalAmount.value', function () {","            pm.expect(pm.response.text()).to.include(instance['totalAmount']['value']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA01'); });","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA01'); });","            pm.test('account.id is ' + pm.globals.get(\"ACCOUNTID01\"), function () { pm.expect(instance['account']['id']) == pm.globals.get('ACCOUNTID01'); });","            pm.test('totalAmount.unit is ' + pm.globals.get(\"TOTALAMOUNTUNIT01\"), function () { pm.expect(instance['totalAmount']['unit']) == pm.globals.get('TOTALAMOUNTUNIT01'); });","            pm.test('totalAmount.value is ' + pm.globals.get(\"TOTALAMOUNTVALUE01\"), function () { pm.expect(instance['totalAmount']['value']) == pm.globals.get('TOTALAMOUNTVALUE01'); });","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['account', 'paymentMethod', 'href', 'id', 'totalAmount'];","","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","    pm.test('Response has account attribute', function () { pm.expect(instance[\"account\"]).to.be.a('object'); });","    pm.test('Response has account.id attribute', function () { pm.expect(instance['account']['id']).to.be.a('string'); });","    pm.test('Response has paymentMethod attribute', function () { pm.expect(instance[\"paymentMethod\"]).to.be.a('object'); });","    pm.test('Response has totalAmount.unit attribute', function () { pm.expect(instance['totalAmount']['unit']).to.be.a('string'); });","    pm.test('Response has totalAmount.value attribute', function () { pm.expect(instance['totalAmount']['value']).to.be.a('number'); });","","    pm.test('Body includes value held on href', function () {","        pm.expect(pm.response.text()).to.include(instance['href']);","    });","    pm.test('Body includes value held on id', function () {","        pm.expect(pm.response.text()).to.include(instance['id']);","    });","    pm.test('Body includes value held on account.id', function () {","        pm.expect(pm.response.text()).to.include(instance['account']['id']);","    });","    pm.test('Body includes value held on totalAmount.unit', function () {","        pm.expect(pm.response.text()).to.include(instance['totalAmount']['unit']);","    });","    pm.test('Body includes value held on totalAmount.value', function () {","        pm.expect(pm.response.text()).to.include(instance['totalAmount']['value']);","    });","    // Individualized tests","    if (instance.id == pm.globals.get(\"IDPA01\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA01'); });","        pm.test('id is ' + pm.globals.get(\"IDPA01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA01'); });","        pm.test('account.id is ' + pm.globals.get(\"ACCOUNTID01\"), function () { pm.expect(instance['account']['id']) == pm.globals.get('ACCOUNTID01'); });","        pm.test('totalAmount.unit is ' + pm.globals.get(\"TOTALAMOUNTUNIT01\"), function () { pm.expect(instance['totalAmount']['unit']) == pm.globals.get('TOTALAMOUNTUNIT01'); });","        pm.test('totalAmount.value is ' + pm.globals.get(\"TOTALAMOUNTVALUE01\"), function () { pm.expect(instance['totalAmount']['value']) == pm.globals.get('TOTALAMOUNTVALUE01'); });","    }","    if (instance.id == pm.globals.get(\"IDPA02\")) {","        pm.test('IDPA02 not expected on this test', function () {","            console.log(\"Non expected resource, may happen if there is a collision on attributes\")","        });","    }","}"],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"body":{"mode":"raw","raw":""},"url":{"raw":"{{Payment}}payment/{{IDPA01}}","host":["{{Payment}}payment"],"path":["{{IDPA01}}"]},"description":"This operation search for one of the created Payment"},"response":[]}]},{"name":"N2","item":[{"name":"/Payment?fields=href","event":[{"listen":"test","script":{"id":"2a9ade0c-f318-4456-abef-932c24b2bb84","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","var jsonData = pm.response.json();","","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","","        var requiredAttributes = ['href', 'id'];","","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA01'); });","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA01'); });","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA02'); });","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA02'); });","        }","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id'];","","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","","    pm.test('Body includes value held on href', function () {","        pm.expect(pm.response.text()).to.include(instance['href']);","    });","    pm.test('Body includes value held on id', function () {","        pm.expect(pm.response.text()).to.include(instance['id']);","    });","    // Individualized tests","    if (instance.id == pm.globals.get(\"IDPA01\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA01'); });","        pm.test('id is ' + pm.globals.get(\"IDPA01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA01'); });","    }","    if (instance.id == pm.globals.get(\"IDPA02\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA02'); });","        pm.test('id is ' + pm.globals.get(\"IDPA02\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA02'); });","    }","}"],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"body":{"mode":"raw","raw":""},"url":{"raw":"{{Payment}}payment?fields=href","host":["{{Payment}}payment"],"query":[{"key":"fields","value":"href"}]},"description":"This operation filter a Payment"},"response":[]},{"name":"/Payment?fields=id","event":[{"listen":"test","script":{"id":"20271b2d-6f88-49aa-b7a5-9b0a84b5c02c","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","var jsonData = pm.response.json();","","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","","        var requiredAttributes = ['href', 'id'];","","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA01'); });","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA01'); });","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA02'); });","            pm.test('id is ' + pm.globals.get(\"IDPA02\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA02'); });","        }","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['href', 'id'];","","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","","    pm.test('Body includes value held on href', function () {","        pm.expect(pm.response.text()).to.include(instance['href']);","    });","    pm.test('Body includes value held on id', function () {","        pm.expect(pm.response.text()).to.include(instance['id']);","    });","    // Individualized tests","    if (instance.id == pm.globals.get(\"IDPA01\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA01'); });","        pm.test('id is ' + pm.globals.get(\"IDPA01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA01'); });","    }","    if (instance.id == pm.globals.get(\"IDPA02\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPA02\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA02'); });","        pm.test('id is ' + pm.globals.get(\"IDPA02\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA02'); });","    }","}"],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"body":{"mode":"raw","raw":""},"url":{"raw":"{{Payment}}payment?fields=id","host":["{{Payment}}payment"],"query":[{"key":"fields","value":"id"}]},"description":"This operation filter a Payment"},"response":[]},{"name":"/Payment?id={{IDPA01}}","event":[{"listen":"test","script":{"id":"d943cbac-b4e6-4dfb-abcf-1c5ca99d8bec","exec":["pm.test(\"Status code is 200\", function () {","    pm.response.to.have.status(200);","});","","","","var jsonData = pm.response.json();","","if (Array.isArray(jsonData) && (jsonData.length > 0)) {","    jsonData.forEach(function (instance, index) {","","        var requiredAttributes = ['account', 'paymentMethod', 'href', 'id', 'totalAmount'];","","        pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","        pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","        pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","        pm.test('Response has account attribute', function () { pm.expect(instance[\"account\"]).to.be.a('object'); });","        pm.test('Response has account.id attribute', function () { pm.expect(instance['account']['id']).to.be.a('string'); });","        pm.test('Response has paymentMethod attribute', function () { pm.expect(instance[\"paymentMethod\"]).to.be.a('object'); });","        pm.test('Response has totalAmount.unit attribute', function () { pm.expect(instance['totalAmount']['unit']).to.be.a('string'); });","        pm.test('Response has totalAmount.value attribute', function () { pm.expect(instance['totalAmount']['value']).to.be.a('number'); });","","        pm.test('Body includes value held on href', function () {","            pm.expect(pm.response.text()).to.include(instance['href']);","        });","        pm.test('Body includes value held on id', function () {","            pm.expect(pm.response.text()).to.include(instance['id']);","        });","        pm.test('Body includes value held on account.id', function () {","            pm.expect(pm.response.text()).to.include(instance['account']['id']);","        });","        pm.test('Body includes value held on totalAmount.unit', function () {","            pm.expect(pm.response.text()).to.include(instance['totalAmount']['unit']);","        });","        pm.test('Body includes value held on totalAmount.value', function () {","            pm.expect(pm.response.text()).to.include(instance['totalAmount']['value']);","        });","        // Individualized tests","        if (instance.id == pm.globals.get(\"IDPA01\")) {","            pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA01'); });","            pm.test('id is ' + pm.globals.get(\"IDPA01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA01'); });","            pm.test('account.id is ' + pm.globals.get(\"ACCOUNTID01\"), function () { pm.expect(instance['account']['id']) == pm.globals.get('ACCOUNTID01'); });","            pm.test('totalAmount.unit is ' + pm.globals.get(\"TOTALAMOUNTUNIT01\"), function () { pm.expect(instance['totalAmount']['unit']) == pm.globals.get('TOTALAMOUNTUNIT01'); });","            pm.test('totalAmount.value is ' + pm.globals.get(\"TOTALAMOUNTVALUE01\"), function () { pm.expect(instance['totalAmount']['value']) == pm.globals.get('TOTALAMOUNTVALUE01'); });","        }","        if (instance.id == pm.globals.get(\"IDPA02\")) {","            pm.test('IDPA02 not expected on this test', function () {","                console.log(\"Non expected resource, may happen if there is a collision on attributes\")","            });","        }","","    });","}","else {","    var instance = pm.response.json();","    var requiredAttributes = ['account', 'paymentMethod', 'href', 'id', 'totalAmount'];","","    pm.test('Instance has all mandatory attributes', function () { pm.expect(Object.keys(instance)).to.include.members(requiredAttributes) });","","","","    pm.test('Response has href attribute', function () { pm.expect(instance[\"href\"]).to.be.a('string'); });","    pm.test('Response has id attribute', function () { pm.expect(instance[\"id\"]).to.be.a('string'); });","    pm.test('Response has account attribute', function () { pm.expect(instance[\"account\"]).to.be.a('object'); });","    pm.test('Response has account.id attribute', function () { pm.expect(instance['account']['id']).to.be.a('string'); });","    pm.test('Response has paymentMethod attribute', function () { pm.expect(instance[\"paymentMethod\"]).to.be.a('object'); });","    pm.test('Response has totalAmount.unit attribute', function () { pm.expect(instance['totalAmount']['unit']).to.be.a('string'); });","    pm.test('Response has totalAmount.value attribute', function () { pm.expect(instance['totalAmount']['value']).to.be.a('number'); });","","    pm.test('Body includes value held on href', function () {","        pm.expect(pm.response.text()).to.include(instance['href']);","    });","    pm.test('Body includes value held on id', function () {","        pm.expect(pm.response.text()).to.include(instance['id']);","    });","    pm.test('Body includes value held on account.id', function () {","        pm.expect(pm.response.text()).to.include(instance['account']['id']);","    });","    pm.test('Body includes value held on totalAmount.unit', function () {","        pm.expect(pm.response.text()).to.include(instance['totalAmount']['unit']);","    });","    pm.test('Body includes value held on totalAmount.value', function () {","        pm.expect(pm.response.text()).to.include(instance['totalAmount']['value']);","    });","    // Individualized tests","    if (instance.id == pm.globals.get(\"IDPA01\")) {","        pm.test('href is ' + pm.globals.get(\"HREFPA01\"), function () { pm.expect(instance['href']) == pm.globals.get('HREFPA01'); });","        pm.test('id is ' + pm.globals.get(\"IDPA01\"), function () { pm.expect(instance['id']) == pm.globals.get('IDPA01'); });","        pm.test('account.id is ' + pm.globals.get(\"ACCOUNTID01\"), function () { pm.expect(instance['account']['id']) == pm.globals.get('ACCOUNTID01'); });","        pm.test('totalAmount.unit is ' + pm.globals.get(\"TOTALAMOUNTUNIT01\"), function () { pm.expect(instance['totalAmount']['unit']) == pm.globals.get('TOTALAMOUNTUNIT01'); });","        pm.test('totalAmount.value is ' + pm.globals.get(\"TOTALAMOUNTVALUE01\"), function () { pm.expect(instance['totalAmount']['value']) == pm.globals.get('TOTALAMOUNTVALUE01'); });","    }","    if (instance.id == pm.globals.get(\"IDPA02\")) {","        pm.test('IDPA02 not expected on this test', function () {","            console.log(\"Non expected resource, may happen if there is a collision on attributes\")","        });","    }","}"],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"body":{"mode":"raw","raw":""},"url":{"raw":"{{Payment}}payment?id={{IDPA01}}","host":["{{Payment}}payment"],"query":[{"key":"id","value":"{{IDPA01}}"}]},"description":"This operation filter a Payment"},"response":[]}]},{"name":"E1","item":[{"name":"/Payment/404ID","event":[{"listen":"test","script":{"id":"e858918c-365e-4c16-bf06-5fcb8b629365","exec":["pm.test(\"Status code is 404\", function () {","    pm.response.to.have.status(404);","});","",""],"type":"text/javascript"}}],"request":{"method":"GET","header":[{"key":"Accept","value":"application/json"},{"key":"Content-Type","value":"application/json"},{"key":"Authorization","value":"Bearer 1321321"}],"body":{"mode":"raw","raw":""},"url":{"raw":"{{Payment}}payment/45d7aa75-8458-4b33-b659-c3c1d6278c4c","host":["{{Payment}}payment"],"path":["45d7aa75-8458-4b33-b659-c3c1d6278c4c"]},"description":"This operation search for one of the created Payment"},"response":[]}]}]}