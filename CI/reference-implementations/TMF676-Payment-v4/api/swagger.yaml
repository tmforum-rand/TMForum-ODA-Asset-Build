basePath: /paymentManagement/v4/
consumes: [application/json;charset=utf-8]
definitions:
  AccountRef:
    description: Account reference. A account may be a party account or a financial
      account.
    example: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
      '@type': '@type', description: description, href: href, id: id, name: name}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        type: string}
      '@referredType': {description: The actual type of the target instance when needed
          for disambiguation., type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name', type: string}
      description: {description: Detailed description of the account, type: string}
      href: {description: Reference of the account, type: string}
      id: {description: Unique identifier of the account, type: string}
      name: {description: Name of the account, type: string}
    required: [id]
    type: object
  Addressable:
    description: Base schema for adressable entities
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name', type: string}
      href: {description: Hyperlink reference, type: string}
      id: {description: unique identifier, type: string}
    type: object
  ChannelRef:
    description: The channel to which the resource reference to. e.g. channel for
      selling product offerings, channel for opening a trouble ticket etc..
    example: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
      '@type': VendorProductOffering, href: href, id: id, name: name}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        example: Place, type: string}
      '@referredType': {description: The actual type of the target instance when needed
          for disambiguation., type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, example: 'http://host/schemas/Subclass.schema.json',
        type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class Extensible
          name', example: VendorProductOffering, type: string}
      href: {description: Hyperlink reference, type: string}
      id: {description: unique identifier, type: string}
      name: {description: Name of the channel., type: string}
    required: [id]
    type: object
  EntityRef:
    description: Entity reference schema to be use for all entityRef class.
    example: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
      '@type': VendorProductOffering, href: href, id: id, name: name}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        example: Place, type: string}
      '@referredType': {description: The actual type of the target instance when needed
          for disambiguation., type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, example: 'http://host/schemas/Subclass.schema.json',
        type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class Extensible
          name', example: VendorProductOffering, type: string}
      href: {description: Hyperlink reference, type: string}
      id: {description: unique identifier, type: string}
      name: {description: Name of the related entity., type: string}
    required: [id]
    type: object
  Error:
    description: Used when an API throws an Error, typically with a HTTP error response-code
      (3xx, 4xx, 5xx)
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class.',
        type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name.', type: string}
      code: {description: 'Application relevant detail, defined in the API or a common
          list.', type: string}
      message: {description: More details and corrective actions related to the error
          which can be shown to a client user., type: string}
      reason: {description: Explanation of the reason for the error which can be shown
          to a client user., type: string}
      referenceError: {description: URI of documentation describing the error., format: uri,
        type: string}
      status: {description: HTTP Error code extension, type: string}
    required: [code, reason]
    type: object
  EventSubscription:
    description: Sets the communication endpoint address the service instance must
      use to deliver notification information
    example: {callback: callback, id: id, query: query}
    properties:
      callback: {description: The callback being registered., type: string}
      id: {description: Id of the listener, type: string}
      query: {description: additional data to be passed, type: string}
    required: [callback, id]
    type: object
  EventSubscriptionInput:
    description: Sets the communication endpoint address the service instance must
      use to deliver notification information
    example: {callback: callback, query: query}
    properties:
      callback: {description: The callback being registered., type: string}
      query: {description: additional data to be passed, type: string}
    required: [callback]
    type: object
  Extensible:
    description: Base Extensible schema for use in TMForum Open-APIs
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        example: Place, type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, example: 'http://host/schemas/Subclass.schema.json',
        type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class Extensible
          name', example: VendorProductOffering, type: string}
    type: object
  Money:
    description: A base / value business entity used to represent money
    example: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
      '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name', type: string}
      unit: {description: Currency (ISO4217 norm uses 3 letters to define the currency),
        type: string}
      value: {description: A positive floating point number, format: float, type: number}
    type: object
  Payment:
    description: The Payment resource represents a performed payment. It contains
      both information about the payment and the payment method used to perform it.
    example:
      '@baseType': '@baseType'
      '@schemaLocation': http://example.com/aeiou
      '@type': '@type'
      account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', description: description, href: href, id: id, name: name}
      amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
      authorizationCode: authorizationCode
      channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name}
      correlatorId: correlatorId
      description: description
      href: href
      id: id
      name: name
      payer: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
      paymentDate: '2000-01-23T04:56:07.000+00:00'
      paymentItem:
      - '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        id: id
        item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
      - '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        id: id
        item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
      paymentMethod:
        '@baseType': Place
        '@referredType': '@referredType'
        '@schemaLocation': http://host/schemas/Subclass.schema.json
        '@type': VendorProductOffering
        account:
        - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        description: description
        href: href
        id: id
        isPreferred: true
        name: name
        relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
      status: status
      statusDate: '2000-01-23T04:56:07.000+00:00'
      taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
      totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name', type: string}
      account: {$ref: '#/definitions/AccountRef'}
      amount: {$ref: '#/definitions/Money', description: Amount to be paid (net of
          taxes)}
      authorizationCode: {description: Authorization code retrieved from an external
          payment gateway that could be used for conciliation, type: string}
      channel: {$ref: '#/definitions/ChannelRef'}
      correlatorId: {description: Unique identifier in the client for the payment
          in case it is needed to correlate, type: string}
      description: {description: Text describing the contents of the payment, type: string}
      href: {description: Hypertext Reference of the Payment, type: string}
      id: {description: Unique identifier of Payment, type: string}
      name: {description: Screen name of the payment, type: string}
      payer: {$ref: '#/definitions/RelatedParty'}
      paymentDate: {description: Date when the payment was performed, format: date-time,
        type: string}
      paymentItem:
        items: {$ref: '#/definitions/PaymentItem'}
        type: array
      paymentMethod: {$ref: '#/definitions/PaymentMethodRefOrValue'}
      status: {description: Status of the payment, type: string}
      statusDate: {description: Date when the status was recorded, format: date-time,
        type: string}
      taxAmount: {$ref: '#/definitions/Money', description: Tax applied}
      totalAmount: {$ref: '#/definitions/Money', description: Amount to be paid (including
          taxes)}
    required: [account, paymentMethod]
    type: object
  PaymentAttributeValueChangeEvent:
    description: The notification data structure
    example:
      correlationId: correlationId
      description: description
      domain: domain
      event:
        payment:
          '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          authorizationCode: authorizationCode
          channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          correlatorId: correlatorId
          description: description
          href: href
          id: id
          name: name
          payer: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          paymentDate: '2000-01-23T04:56:07.000+00:00'
          paymentItem:
          - '@baseType': '@baseType'
            '@schemaLocation': http://example.com/aeiou
            '@type': '@type'
            amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            id: id
            item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name}
            taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
          - '@baseType': '@baseType'
            '@schemaLocation': http://example.com/aeiou
            '@type': '@type'
            amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            id: id
            item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name}
            taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
          paymentMethod:
            '@baseType': Place
            '@referredType': '@referredType'
            '@schemaLocation': http://host/schemas/Subclass.schema.json
            '@type': VendorProductOffering
            account:
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            description: description
            href: href
            id: id
            isPreferred: true
            name: name
            relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
            status: status
            statusDate: '2000-01-23T04:56:07.000+00:00'
            validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
      eventId: eventId
      eventTime: '2000-01-23T04:56:07.000+00:00'
      eventType: eventType
      fieldPath: fieldPath
      priority: priority
      timeOcurred: '2000-01-23T04:56:07.000+00:00'
      title: title
    properties:
      correlationId: {description: The correlation id for this event., type: string}
      description: {description: An explnatory of the event., type: string}
      domain: {description: The domain of the event., type: string}
      event: {$ref: '#/definitions/PaymentAttributeValueChangeEventPayload', description: The
          event payload linked to the involved resource object}
      eventId: {description: The identifier of the notification., type: string}
      eventTime: {description: Time of the event occurrence., format: date-time, type: string}
      eventType: {description: The type of the notification., type: string}
      fieldPath: {description: The path identifying the object field concerned by
          this notification., type: string}
      priority: {description: A priority., type: string}
      timeOcurred: {description: The time the event occured., format: date-time, type: string}
      title: {description: The title of the event., type: string}
    type: object
  PaymentAttributeValueChangeEventPayload:
    description: The event data structure
    example:
      payment:
        '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        authorizationCode: authorizationCode
        channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        correlatorId: correlatorId
        description: description
        href: href
        id: id
        name: name
        payer: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        paymentDate: '2000-01-23T04:56:07.000+00:00'
        paymentItem:
        - '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          id: id
          item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
        - '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          id: id
          item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
        paymentMethod:
          '@baseType': Place
          '@referredType': '@referredType'
          '@schemaLocation': http://host/schemas/Subclass.schema.json
          '@type': VendorProductOffering
          account:
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          description: description
          href: href
          id: id
          isPreferred: true
          name: name
          relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      payment: {$ref: '#/definitions/Payment', description: The involved resource
          data for the event}
    type: object
  PaymentCreateEvent:
    description: The notification data structure
    example:
      correlationId: correlationId
      description: description
      domain: domain
      event:
        payment:
          '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          authorizationCode: authorizationCode
          channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          correlatorId: correlatorId
          description: description
          href: href
          id: id
          name: name
          payer: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          paymentDate: '2000-01-23T04:56:07.000+00:00'
          paymentItem:
          - '@baseType': '@baseType'
            '@schemaLocation': http://example.com/aeiou
            '@type': '@type'
            amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            id: id
            item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name}
            taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
          - '@baseType': '@baseType'
            '@schemaLocation': http://example.com/aeiou
            '@type': '@type'
            amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            id: id
            item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name}
            taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
          paymentMethod:
            '@baseType': Place
            '@referredType': '@referredType'
            '@schemaLocation': http://host/schemas/Subclass.schema.json
            '@type': VendorProductOffering
            account:
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            description: description
            href: href
            id: id
            isPreferred: true
            name: name
            relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
            status: status
            statusDate: '2000-01-23T04:56:07.000+00:00'
            validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
      eventId: eventId
      eventTime: '2000-01-23T04:56:07.000+00:00'
      eventType: eventType
      priority: priority
      timeOcurred: '2000-01-23T04:56:07.000+00:00'
      title: title
    properties:
      correlationId: {description: The correlation id for this event., type: string}
      description: {description: An explnatory of the event., type: string}
      domain: {description: The domain of the event., type: string}
      event: {$ref: '#/definitions/PaymentCreateEventPayload', description: The event
          payload linked to the involved resource object}
      eventId: {description: The identifier of the notification., type: string}
      eventTime: {description: Time of the event occurrence., format: date-time, type: string}
      eventType: {description: The type of the notification., type: string}
      priority: {description: A priority., type: string}
      timeOcurred: {description: The time the event occured., format: date-time, type: string}
      title: {description: The title of the event., type: string}
    type: object
  PaymentCreateEventPayload:
    description: The event data structure
    example:
      payment:
        '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        authorizationCode: authorizationCode
        channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        correlatorId: correlatorId
        description: description
        href: href
        id: id
        name: name
        payer: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        paymentDate: '2000-01-23T04:56:07.000+00:00'
        paymentItem:
        - '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          id: id
          item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
        - '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          id: id
          item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
        paymentMethod:
          '@baseType': Place
          '@referredType': '@referredType'
          '@schemaLocation': http://host/schemas/Subclass.schema.json
          '@type': VendorProductOffering
          account:
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          description: description
          href: href
          id: id
          isPreferred: true
          name: name
          relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      payment: {$ref: '#/definitions/Payment', description: The involved resource
          data for the event}
    type: object
  PaymentDeleteEvent:
    description: The notification data structure
    example:
      correlationId: correlationId
      description: description
      domain: domain
      event:
        payment:
          '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          authorizationCode: authorizationCode
          channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          correlatorId: correlatorId
          description: description
          href: href
          id: id
          name: name
          payer: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          paymentDate: '2000-01-23T04:56:07.000+00:00'
          paymentItem:
          - '@baseType': '@baseType'
            '@schemaLocation': http://example.com/aeiou
            '@type': '@type'
            amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            id: id
            item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name}
            taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
          - '@baseType': '@baseType'
            '@schemaLocation': http://example.com/aeiou
            '@type': '@type'
            amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            id: id
            item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name}
            taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
          paymentMethod:
            '@baseType': Place
            '@referredType': '@referredType'
            '@schemaLocation': http://host/schemas/Subclass.schema.json
            '@type': VendorProductOffering
            account:
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            description: description
            href: href
            id: id
            isPreferred: true
            name: name
            relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
            status: status
            statusDate: '2000-01-23T04:56:07.000+00:00'
            validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
      eventId: eventId
      eventTime: '2000-01-23T04:56:07.000+00:00'
      eventType: eventType
      priority: priority
      timeOcurred: '2000-01-23T04:56:07.000+00:00'
      title: title
    properties:
      correlationId: {description: The correlation id for this event., type: string}
      description: {description: An explnatory of the event., type: string}
      domain: {description: The domain of the event., type: string}
      event: {$ref: '#/definitions/PaymentDeleteEventPayload', description: The event
          payload linked to the involved resource object}
      eventId: {description: The identifier of the notification., type: string}
      eventTime: {description: Time of the event occurrence., format: date-time, type: string}
      eventType: {description: The type of the notification., type: string}
      priority: {description: A priority., type: string}
      timeOcurred: {description: The time the event occured., format: date-time, type: string}
      title: {description: The title of the event., type: string}
    type: object
  PaymentDeleteEventPayload:
    description: The event data structure
    example:
      payment:
        '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        authorizationCode: authorizationCode
        channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        correlatorId: correlatorId
        description: description
        href: href
        id: id
        name: name
        payer: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        paymentDate: '2000-01-23T04:56:07.000+00:00'
        paymentItem:
        - '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          id: id
          item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
        - '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          id: id
          item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
        paymentMethod:
          '@baseType': Place
          '@referredType': '@referredType'
          '@schemaLocation': http://host/schemas/Subclass.schema.json
          '@type': VendorProductOffering
          account:
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          description: description
          href: href
          id: id
          isPreferred: true
          name: name
          relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      payment: {$ref: '#/definitions/Payment', description: The involved resource
          data for the event}
    type: object
  PaymentItem:
    description: The paymentItem is the result of lettering process. It enables to
      assign automatically or manually part of incoming payment amount to a bill
    example:
      '@baseType': '@baseType'
      '@schemaLocation': http://example.com/aeiou
      '@type': '@type'
      amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
      id: id
      item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name}
      taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
      totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name', type: string}
      amount: {$ref: '#/definitions/Money', description: Amount to be paid (net of
          taxes)}
      id: {description: Unique identifier of the payment Item, type: string}
      item: {$ref: '#/definitions/EntityRef'}
      taxAmount: {$ref: '#/definitions/Money', description: Tax applied}
      totalAmount: {$ref: '#/definitions/Money', description: Amount to be paid (including
          taxes)}
    required: [item]
    type: object
  PaymentMethod:
    description: Defines a specific method of payment (e.g. direct debit with all
      details associated)
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name', type: string}
      account:
        items: {$ref: '#/definitions/AccountRef'}
        type: array
      description: {description: Text describing the contents of the payment method,
        type: string}
      href: {description: A resource URI pointing to the resource in the server that
          stores the detailed information. This is typically the resource url to retrieve
          individual details for the specific payment method, type: string}
      id: {description: Unique Identifier within the server for the payment method.,
        type: string}
      isPreferred: {description: If the method is the preferred one by the owner.
          Typically used when querying for the payment methods of a specific customer
          or account, type: boolean}
      name: {description: Friendly name assigned to the payment method, type: string}
      relatedParty: {$ref: '#/definitions/RelatedParty'}
      status: {type: string}
      statusDate: {format: date-time, type: string}
      validFor: {$ref: '#/definitions/TimePeriod', description: Date interval in which
          the payment method is valid}
    type: object
  PaymentMethodRef:
    description: PaymentMethod reference. A payment method defines a specific mean
      of payment (e.g direct debit).
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        example: Place, type: string}
      '@referredType': {description: The actual type of the target instance when needed
          for disambiguation., type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, example: 'http://host/schemas/Subclass.schema.json',
        type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class Extensible
          name', example: VendorProductOffering, type: string}
      href: {description: Hyperlink reference, type: string}
      id: {description: unique identifier, type: string}
      name: {description: Name of the related entity., type: string}
    required: [id]
    type: object
  PaymentMethodRefOrValue:
    description: link to the resource that holds information about the payment mean
      used to complete the operation
    example:
      '@baseType': Place
      '@referredType': '@referredType'
      '@schemaLocation': http://host/schemas/Subclass.schema.json
      '@type': VendorProductOffering
      account:
      - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', description: description, href: href, id: id, name: name}
      - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', description: description, href: href, id: id, name: name}
      description: description
      href: href
      id: id
      isPreferred: true
      name: name
      relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
      status: status
      statusDate: '2000-01-23T04:56:07.000+00:00'
      validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        example: Place, type: string}
      '@referredType': {description: The actual type of the target instance when needed
          for disambiguation., type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, example: 'http://host/schemas/Subclass.schema.json',
        type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class Extensible
          name', example: VendorProductOffering, type: string}
      account:
        items: {$ref: '#/definitions/AccountRef'}
        type: array
      description: {description: Text describing the contents of the payment method,
        type: string}
      href: {description: A resource URI pointing to the resource in the server that
          stores the detailed information. This is typically the resource url to retrieve
          individual details for the specific payment method, type: string}
      id: {description: Unique Identifier within the server for the payment method.,
        type: string}
      isPreferred: {description: If the method is the preferred one by the owner.
          Typically used when querying for the payment methods of a specific customer
          or account, type: boolean}
      name: {description: Friendly name assigned to the payment method, type: string}
      relatedParty: {$ref: '#/definitions/RelatedParty'}
      status: {type: string}
      statusDate: {format: date-time, type: string}
      validFor: {$ref: '#/definitions/TimePeriod', description: Date interval in which
          the payment method is valid}
    type: object
  PaymentRef:
    description: If an immediate payment has been done at the product order submission,
      the payment information are captured and stored (as a reference) in the order.
    example: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
      '@type': VendorProductOffering, href: href, id: id, name: name}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        example: Place, type: string}
      '@referredType': {description: The actual type of the target instance when needed
          for disambiguation., type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, example: 'http://host/schemas/Subclass.schema.json',
        type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class Extensible
          name', example: VendorProductOffering, type: string}
      href: {description: Hyperlink reference, type: string}
      id: {description: unique identifier, type: string}
      name: {description: A name for the payment, type: string}
    required: [id]
    type: object
  PaymentStateChangeEvent:
    description: The notification data structure
    example:
      correlationId: correlationId
      description: description
      domain: domain
      event:
        payment:
          '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          authorizationCode: authorizationCode
          channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          correlatorId: correlatorId
          description: description
          href: href
          id: id
          name: name
          payer: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          paymentDate: '2000-01-23T04:56:07.000+00:00'
          paymentItem:
          - '@baseType': '@baseType'
            '@schemaLocation': http://example.com/aeiou
            '@type': '@type'
            amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            id: id
            item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name}
            taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
          - '@baseType': '@baseType'
            '@schemaLocation': http://example.com/aeiou
            '@type': '@type'
            amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            id: id
            item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name}
            taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
            totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', unit: unit, value: 0.8008282}
          paymentMethod:
            '@baseType': Place
            '@referredType': '@referredType'
            '@schemaLocation': http://host/schemas/Subclass.schema.json
            '@type': VendorProductOffering
            account:
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            description: description
            href: href
            id: id
            isPreferred: true
            name: name
            relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
            status: status
            statusDate: '2000-01-23T04:56:07.000+00:00'
            validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
      eventId: eventId
      eventTime: '2000-01-23T04:56:07.000+00:00'
      eventType: eventType
      priority: priority
      timeOcurred: '2000-01-23T04:56:07.000+00:00'
      title: title
    properties:
      correlationId: {description: The correlation id for this event., type: string}
      description: {description: An explnatory of the event., type: string}
      domain: {description: The domain of the event., type: string}
      event: {$ref: '#/definitions/PaymentStateChangeEventPayload', description: The
          event payload linked to the involved resource object}
      eventId: {description: The identifier of the notification., type: string}
      eventTime: {description: Time of the event occurrence., format: date-time, type: string}
      eventType: {description: The type of the notification., type: string}
      priority: {description: A priority., type: string}
      timeOcurred: {description: The time the event occured., format: date-time, type: string}
      title: {description: The title of the event., type: string}
    type: object
  PaymentStateChangeEventPayload:
    description: The event data structure
    example:
      payment:
        '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        authorizationCode: authorizationCode
        channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        correlatorId: correlatorId
        description: description
        href: href
        id: id
        name: name
        payer: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        paymentDate: '2000-01-23T04:56:07.000+00:00'
        paymentItem:
        - '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          id: id
          item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
        - '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          id: id
          item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
        paymentMethod:
          '@baseType': Place
          '@referredType': '@referredType'
          '@schemaLocation': http://host/schemas/Subclass.schema.json
          '@type': VendorProductOffering
          account:
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          description: description
          href: href
          id: id
          isPreferred: true
          name: name
          relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      payment: {$ref: '#/definitions/Payment', description: The involved resource
          data for the event}
    type: object
  PaymentStatusExampleType:
    description: Possible values for the status of a payment
    enum: [pendingAuthorization, authorized, captured, failed, canceled, denied, done]
    type: string
  Payment_Create:
    description: 'The Payment resource represents a performed payment. It contains
      both information about the payment and the payment method used to perform it.

      Skipped properties: id,href,status,statusDate,paymentDate'
    example:
      '@baseType': '@baseType'
      '@schemaLocation': http://example.com/aeiou
      '@type': '@type'
      account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', description: description, href: href, id: id, name: name}
      amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
      authorizationCode: authorizationCode
      channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name}
      correlatorId: correlatorId
      description: description
      name: name
      payer: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
      paymentItem:
      - '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        id: id
        item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
      - '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        id: id
        item: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
      paymentMethod:
        '@baseType': Place
        '@referredType': '@referredType'
        '@schemaLocation': http://host/schemas/Subclass.schema.json
        '@type': VendorProductOffering
        account:
        - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        description: description
        href: href
        id: id
        isPreferred: true
        name: name
        relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
      taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
      totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name', type: string}
      account: {$ref: '#/definitions/AccountRef'}
      amount: {$ref: '#/definitions/Money', description: Amount to be paid (net of
          taxes)}
      authorizationCode: {description: Authorization code retrieved from an external
          payment gateway that could be used for conciliation, type: string}
      channel: {$ref: '#/definitions/ChannelRef'}
      correlatorId: {description: Unique identifier in the client for the payment
          in case it is needed to correlate, type: string}
      description: {description: Text describing the contents of the payment, type: string}
      name: {description: Screen name of the payment, type: string}
      payer: {$ref: '#/definitions/RelatedParty'}
      paymentItem:
        items: {$ref: '#/definitions/PaymentItem'}
        type: array
      paymentMethod: {$ref: '#/definitions/PaymentMethodRefOrValue'}
      taxAmount: {$ref: '#/definitions/Money', description: Tax applied}
      totalAmount: {$ref: '#/definitions/Money', description: Amount to be paid (including
          taxes)}
    required: [account, paymentMethod, totalAmount]
    type: object
  Refund:
    description: The Refund resource represents a performed Refund. It contains both
      information about the refund and the payment method used to perform it.
    example:
      '@baseType': '@baseType'
      '@schemaLocation': http://example.com/aeiou
      '@type': '@type'
      account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', description: description, href: href, id: id, name: name}
      amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
      authorizationCode: authorizationCode
      channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name}
      correlatorId: correlatorId
      description: description
      href: href
      id: id
      name: name
      payment: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name}
      paymentMethod:
        '@baseType': Place
        '@referredType': '@referredType'
        '@schemaLocation': http://host/schemas/Subclass.schema.json
        '@type': VendorProductOffering
        account:
        - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        description: description
        href: href
        id: id
        isPreferred: true
        name: name
        relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
      refundDate: '2000-01-23T04:56:07.000+00:00'
      requestor: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
      status: status
      statusDate: '2000-01-23T04:56:07.000+00:00'
      taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
      totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name', type: string}
      account: {$ref: '#/definitions/AccountRef'}
      amount: {$ref: '#/definitions/Money', description: Amount to be refunded (net
          of taxes)}
      authorizationCode: {description: Authorization code retrieved from an external
          payment gateway that could be used for conciliation, type: string}
      channel: {$ref: '#/definitions/ChannelRef'}
      correlatorId: {description: Unique identifier in the client for the refund in
          case it is needed to correlate, type: string}
      description: {description: Text describing the contents of the refund, type: string}
      href: {description: Hypertext Reference of the refund, type: string}
      id: {description: Unique identifier of Refund, type: string}
      name: {description: Screen name of the refund, type: string}
      payment: {$ref: '#/definitions/PaymentRef'}
      paymentMethod: {$ref: '#/definitions/PaymentMethodRefOrValue'}
      refundDate: {description: Date when the refund was performed, format: date-time,
        type: string}
      requestor: {$ref: '#/definitions/RelatedParty'}
      status: {description: Status of the refund, type: string}
      statusDate: {description: Date when the status was recorded, format: date-time,
        type: string}
      taxAmount: {$ref: '#/definitions/Money', description: Tax applied}
      totalAmount: {$ref: '#/definitions/Money', description: Amount to be paid (including
          taxes)}
    required: [account, paymentMethod]
    type: object
  RefundAttributeValueChangeEvent:
    description: The notification data structure
    example:
      correlationId: correlationId
      description: description
      domain: domain
      event:
        refund:
          '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          authorizationCode: authorizationCode
          channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          correlatorId: correlatorId
          description: description
          href: href
          id: id
          name: name
          payment: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          paymentMethod:
            '@baseType': Place
            '@referredType': '@referredType'
            '@schemaLocation': http://host/schemas/Subclass.schema.json
            '@type': VendorProductOffering
            account:
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            description: description
            href: href
            id: id
            isPreferred: true
            name: name
            relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
            status: status
            statusDate: '2000-01-23T04:56:07.000+00:00'
            validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
          refundDate: '2000-01-23T04:56:07.000+00:00'
          requestor: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
      eventId: eventId
      eventTime: '2000-01-23T04:56:07.000+00:00'
      eventType: eventType
      fieldPath: fieldPath
      priority: priority
      timeOcurred: '2000-01-23T04:56:07.000+00:00'
      title: title
    properties:
      correlationId: {description: The correlation id for this event., type: string}
      description: {description: An explnatory of the event., type: string}
      domain: {description: The domain of the event., type: string}
      event: {$ref: '#/definitions/RefundAttributeValueChangeEventPayload', description: The
          event payload linked to the involved resource object}
      eventId: {description: The identifier of the notification., type: string}
      eventTime: {description: Time of the event occurrence., format: date-time, type: string}
      eventType: {description: The type of the notification., type: string}
      fieldPath: {description: The path identifying the object field concerned by
          this notification., type: string}
      priority: {description: A priority., type: string}
      timeOcurred: {description: The time the event occured., format: date-time, type: string}
      title: {description: The title of the event., type: string}
    type: object
  RefundAttributeValueChangeEventPayload:
    description: The event data structure
    example:
      refund:
        '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        authorizationCode: authorizationCode
        channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        correlatorId: correlatorId
        description: description
        href: href
        id: id
        name: name
        payment: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        paymentMethod:
          '@baseType': Place
          '@referredType': '@referredType'
          '@schemaLocation': http://host/schemas/Subclass.schema.json
          '@type': VendorProductOffering
          account:
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          description: description
          href: href
          id: id
          isPreferred: true
          name: name
          relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
        refundDate: '2000-01-23T04:56:07.000+00:00'
        requestor: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      refund: {$ref: '#/definitions/Refund', description: The involved resource data
          for the event}
    type: object
  RefundCreateEvent:
    description: The notification data structure
    example:
      correlationId: correlationId
      description: description
      domain: domain
      event:
        refund:
          '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          authorizationCode: authorizationCode
          channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          correlatorId: correlatorId
          description: description
          href: href
          id: id
          name: name
          payment: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          paymentMethod:
            '@baseType': Place
            '@referredType': '@referredType'
            '@schemaLocation': http://host/schemas/Subclass.schema.json
            '@type': VendorProductOffering
            account:
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            description: description
            href: href
            id: id
            isPreferred: true
            name: name
            relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
            status: status
            statusDate: '2000-01-23T04:56:07.000+00:00'
            validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
          refundDate: '2000-01-23T04:56:07.000+00:00'
          requestor: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
      eventId: eventId
      eventTime: '2000-01-23T04:56:07.000+00:00'
      eventType: eventType
      priority: priority
      timeOcurred: '2000-01-23T04:56:07.000+00:00'
      title: title
    properties:
      correlationId: {description: The correlation id for this event., type: string}
      description: {description: An explnatory of the event., type: string}
      domain: {description: The domain of the event., type: string}
      event: {$ref: '#/definitions/RefundCreateEventPayload', description: The event
          payload linked to the involved resource object}
      eventId: {description: The identifier of the notification., type: string}
      eventTime: {description: Time of the event occurrence., format: date-time, type: string}
      eventType: {description: The type of the notification., type: string}
      priority: {description: A priority., type: string}
      timeOcurred: {description: The time the event occured., format: date-time, type: string}
      title: {description: The title of the event., type: string}
    type: object
  RefundCreateEventPayload:
    description: The event data structure
    example:
      refund:
        '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        authorizationCode: authorizationCode
        channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        correlatorId: correlatorId
        description: description
        href: href
        id: id
        name: name
        payment: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        paymentMethod:
          '@baseType': Place
          '@referredType': '@referredType'
          '@schemaLocation': http://host/schemas/Subclass.schema.json
          '@type': VendorProductOffering
          account:
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          description: description
          href: href
          id: id
          isPreferred: true
          name: name
          relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
        refundDate: '2000-01-23T04:56:07.000+00:00'
        requestor: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      refund: {$ref: '#/definitions/Refund', description: The involved resource data
          for the event}
    type: object
  RefundDeleteEvent:
    description: The notification data structure
    example:
      correlationId: correlationId
      description: description
      domain: domain
      event:
        refund:
          '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          authorizationCode: authorizationCode
          channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          correlatorId: correlatorId
          description: description
          href: href
          id: id
          name: name
          payment: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          paymentMethod:
            '@baseType': Place
            '@referredType': '@referredType'
            '@schemaLocation': http://host/schemas/Subclass.schema.json
            '@type': VendorProductOffering
            account:
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            description: description
            href: href
            id: id
            isPreferred: true
            name: name
            relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
            status: status
            statusDate: '2000-01-23T04:56:07.000+00:00'
            validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
          refundDate: '2000-01-23T04:56:07.000+00:00'
          requestor: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
      eventId: eventId
      eventTime: '2000-01-23T04:56:07.000+00:00'
      eventType: eventType
      priority: priority
      timeOcurred: '2000-01-23T04:56:07.000+00:00'
      title: title
    properties:
      correlationId: {description: The correlation id for this event., type: string}
      description: {description: An explnatory of the event., type: string}
      domain: {description: The domain of the event., type: string}
      event: {$ref: '#/definitions/RefundDeleteEventPayload', description: The event
          payload linked to the involved resource object}
      eventId: {description: The identifier of the notification., type: string}
      eventTime: {description: Time of the event occurrence., format: date-time, type: string}
      eventType: {description: The type of the notification., type: string}
      priority: {description: A priority., type: string}
      timeOcurred: {description: The time the event occured., format: date-time, type: string}
      title: {description: The title of the event., type: string}
    type: object
  RefundDeleteEventPayload:
    description: The event data structure
    example:
      refund:
        '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        authorizationCode: authorizationCode
        channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        correlatorId: correlatorId
        description: description
        href: href
        id: id
        name: name
        payment: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        paymentMethod:
          '@baseType': Place
          '@referredType': '@referredType'
          '@schemaLocation': http://host/schemas/Subclass.schema.json
          '@type': VendorProductOffering
          account:
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          description: description
          href: href
          id: id
          isPreferred: true
          name: name
          relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
        refundDate: '2000-01-23T04:56:07.000+00:00'
        requestor: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      refund: {$ref: '#/definitions/Refund', description: The involved resource data
          for the event}
    type: object
  RefundStateChangeEvent:
    description: The notification data structure
    example:
      correlationId: correlationId
      description: description
      domain: domain
      event:
        refund:
          '@baseType': '@baseType'
          '@schemaLocation': http://example.com/aeiou
          '@type': '@type'
          account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          authorizationCode: authorizationCode
          channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          correlatorId: correlatorId
          description: description
          href: href
          id: id
          name: name
          payment: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name}
          paymentMethod:
            '@baseType': Place
            '@referredType': '@referredType'
            '@schemaLocation': http://host/schemas/Subclass.schema.json
            '@type': VendorProductOffering
            account:
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', description: description, href: href, id: id, name: name}
            description: description
            href: href
            id: id
            isPreferred: true
            name: name
            relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
              '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
            status: status
            statusDate: '2000-01-23T04:56:07.000+00:00'
            validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
              '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
          refundDate: '2000-01-23T04:56:07.000+00:00'
          requestor: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
          totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', unit: unit, value: 0.8008282}
      eventId: eventId
      eventTime: '2000-01-23T04:56:07.000+00:00'
      eventType: eventType
      priority: priority
      timeOcurred: '2000-01-23T04:56:07.000+00:00'
      title: title
    properties:
      correlationId: {description: The correlation id for this event., type: string}
      description: {description: An explnatory of the event., type: string}
      domain: {description: The domain of the event., type: string}
      event: {$ref: '#/definitions/RefundStateChangeEventPayload', description: The
          event payload linked to the involved resource object}
      eventId: {description: The identifier of the notification., type: string}
      eventTime: {description: Time of the event occurrence., format: date-time, type: string}
      eventType: {description: The type of the notification., type: string}
      priority: {description: A priority., type: string}
      timeOcurred: {description: The time the event occured., format: date-time, type: string}
      title: {description: The title of the event., type: string}
    type: object
  RefundStateChangeEventPayload:
    description: The event data structure
    example:
      refund:
        '@baseType': '@baseType'
        '@schemaLocation': http://example.com/aeiou
        '@type': '@type'
        account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        authorizationCode: authorizationCode
        channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        correlatorId: correlatorId
        description: description
        href: href
        id: id
        name: name
        payment: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name}
        paymentMethod:
          '@baseType': Place
          '@referredType': '@referredType'
          '@schemaLocation': http://host/schemas/Subclass.schema.json
          '@type': VendorProductOffering
          account:
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', description: description, href: href, id: id, name: name}
          description: description
          href: href
          id: id
          isPreferred: true
          name: name
          relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
            '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
          status: status
          statusDate: '2000-01-23T04:56:07.000+00:00'
          validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
            '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
        refundDate: '2000-01-23T04:56:07.000+00:00'
        requestor: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
        totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      refund: {$ref: '#/definitions/Refund', description: The involved resource data
          for the event}
    type: object
  RefundStatusExampleType:
    description: Possible values for the status of a refund
    enum: [pendingAuthorization, authorized, captured, failed, canceled, denied, done]
    type: string
  Refund_Create:
    description: 'The Refund resource represents a performed Refund. It contains both
      information about the refund and the payment method used to perform it.

      Skipped properties: id,href,status,statusDate,RefundDate'
    example:
      '@baseType': '@baseType'
      '@schemaLocation': http://example.com/aeiou
      '@type': '@type'
      account: {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', description: description, href: href, id: id, name: name}
      amount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
      authorizationCode: authorizationCode
      channel: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name}
      correlatorId: correlatorId
      description: description
      name: name
      payment: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name}
      paymentMethod:
        '@baseType': Place
        '@referredType': '@referredType'
        '@schemaLocation': http://host/schemas/Subclass.schema.json
        '@type': VendorProductOffering
        account:
        - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        - {'@baseType': '@baseType', '@referredType': '@referredType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', description: description, href: href, id: id, name: name}
        description: description
        href: href
        id: id
        isPreferred: true
        name: name
        relatedParty: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
          '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
        status: status
        statusDate: '2000-01-23T04:56:07.000+00:00'
        validFor: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
          '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
      refundDate: '2000-01-23T04:56:07.000+00:00'
      requestor: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
        '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
      taxAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
      totalAmount: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
        '@type': '@type', unit: unit, value: 0.8008282}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name', type: string}
      account: {$ref: '#/definitions/AccountRef'}
      amount: {$ref: '#/definitions/Money', description: Amount to be refunded (net
          of taxes)}
      authorizationCode: {description: Authorization code retrieved from an external
          payment gateway that could be used for conciliation, type: string}
      channel: {$ref: '#/definitions/ChannelRef'}
      correlatorId: {description: Unique identifier in the client for the refund in
          case it is needed to correlate, type: string}
      description: {description: Text describing the contents of the refund, type: string}
      name: {description: Screen name of the refund, type: string}
      payment: {$ref: '#/definitions/PaymentRef'}
      paymentMethod: {$ref: '#/definitions/PaymentMethodRefOrValue'}
      refundDate: {description: Date when the refund was performed, format: date-time,
        type: string}
      requestor: {$ref: '#/definitions/RelatedParty'}
      taxAmount: {$ref: '#/definitions/Money', description: Tax applied}
      totalAmount: {$ref: '#/definitions/Money', description: Amount to be paid (including
          taxes)}
    required: [account, paymentMethod, totalAmount]
    type: object
  RelatedParty:
    description: Related Entity reference. A related party defines party or party
      role linked to a specific entity.
    example: {'@baseType': Place, '@referredType': '@referredType', '@schemaLocation': 'http://host/schemas/Subclass.schema.json',
      '@type': VendorProductOffering, href: href, id: id, name: name, role: role}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        example: Place, type: string}
      '@referredType': {description: The actual type of the target instance when needed
          for disambiguation., type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, example: 'http://host/schemas/Subclass.schema.json',
        type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class Extensible
          name', example: VendorProductOffering, type: string}
      href: {description: Hyperlink reference, type: string}
      id: {description: unique identifier, type: string}
      name: {description: Name of the related entity., type: string}
      role: {description: Role played by the related party, type: string}
    required: ['@referredType', id]
    type: object
  TimePeriod:
    description: A period of time, either as a deadline (endDateTime only) a startDateTime
      only, or both
    example: {'@baseType': '@baseType', '@schemaLocation': 'http://example.com/aeiou',
      '@type': '@type', endDateTime: '1985-04-12T23:20:50.52Z', startDateTime: '1985-04-12T23:20:50.52Z'}
    properties:
      '@baseType': {description: 'When sub-classing, this defines the super-class',
        type: string}
      '@schemaLocation': {description: A URI to a JSON-Schema file that defines additional
          attributes and relationships, format: uri, type: string}
      '@type': {description: 'When sub-classing, this defines the sub-class entity
          name', type: string}
      endDateTime: {description: 'End of the time period, using IETC-RFC-3339 format',
        example: '1985-04-12T23:20:50.52Z', format: date-time, type: string}
      startDateTime: {description: 'Start of the time period, using IETC-RFC-3339
          format. If you define a start, you must also define an end', example: '1985-04-12T23:20:50.52Z',
        format: date-time, type: string}
    type: object
host: localhost:8080
info: {description: '## TMF API Reference : TMF 676 - Payment


    This API provides the standardized client interface to Payment Systems for managing
    performed payments or refunds. Examples of Payment API originators (clients) include
    Web servers, mobile app servers, Contact center dashboards or retail store systems.',
  title: Payment, version: 4.0.0}
paths:
  /hub:
    post:
      description: Sets the communication endpoint address the service instance must
        use to deliver information about its health state, execution state, failures
        and metrics.
      operationId: registerListener
      parameters:
      - description: Data containing the callback endpoint to deliver the information
        in: body
        name: data
        required: true
        schema: {$ref: '#/definitions/EventSubscriptionInput'}
      responses:
        201:
          description: Subscribed
          schema: {$ref: '#/definitions/EventSubscription'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Register a listener
      tags: [events subscription]
      x-swagger-router-controller: EventsSubscription
  /hub/{id}:
    delete:
      description: Resets the communication endpoint address the service instance
        must use to deliver information about its health state, execution state, failures
        and metrics.
      operationId: unregisterListener
      parameters:
      - {description: The id of the registered listener, in: path, name: id, required: true,
        type: string}
      responses:
        204: {description: Deleted}
        400:
          description: Bad request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method not allowed
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Unregister a listener
      tags: [events subscription]
      x-swagger-router-controller: EventsSubscription
  /listener/paymentAttributeValueChangeEvent:
    post:
      description: Example of a client listener for receiving the notification PaymentAttributeValueChangeEvent
      operationId: listenToPaymentAttributeValueChangeEvent
      parameters:
      - description: The event data
        in: body
        name: data
        required: true
        schema: {$ref: '#/definitions/PaymentAttributeValueChangeEvent'}
      responses:
        201:
          description: Notified
          schema: {$ref: '#/definitions/EventSubscription'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Client listener for entity PaymentAttributeValueChangeEvent
      tags: [notification listeners (client side)]
      x-swagger-router-controller: NotificationListenersClientSide
  /listener/paymentCreateEvent:
    post:
      description: Example of a client listener for receiving the notification PaymentCreateEvent
      operationId: listenToPaymentCreateEvent
      parameters:
      - description: The event data
        in: body
        name: data
        required: true
        schema: {$ref: '#/definitions/PaymentCreateEvent'}
      responses:
        201:
          description: Notified
          schema: {$ref: '#/definitions/EventSubscription'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Client listener for entity PaymentCreateEvent
      tags: [notification listeners (client side)]
      x-swagger-router-controller: NotificationListenersClientSide
  /listener/paymentDeleteEvent:
    post:
      description: Example of a client listener for receiving the notification PaymentDeleteEvent
      operationId: listenToPaymentDeleteEvent
      parameters:
      - description: The event data
        in: body
        name: data
        required: true
        schema: {$ref: '#/definitions/PaymentDeleteEvent'}
      responses:
        201:
          description: Notified
          schema: {$ref: '#/definitions/EventSubscription'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Client listener for entity PaymentDeleteEvent
      tags: [notification listeners (client side)]
      x-swagger-router-controller: NotificationListenersClientSide
  /listener/paymentStateChangeEvent:
    post:
      description: Example of a client listener for receiving the notification PaymentStateChangeEvent
      operationId: listenToPaymentStateChangeEvent
      parameters:
      - description: The event data
        in: body
        name: data
        required: true
        schema: {$ref: '#/definitions/PaymentStateChangeEvent'}
      responses:
        201:
          description: Notified
          schema: {$ref: '#/definitions/EventSubscription'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Client listener for entity PaymentStateChangeEvent
      tags: [notification listeners (client side)]
      x-swagger-router-controller: NotificationListenersClientSide
  /listener/refundAttributeValueChangeEvent:
    post:
      description: Example of a client listener for receiving the notification RefundAttributeValueChangeEvent
      operationId: listenToRefundAttributeValueChangeEvent
      parameters:
      - description: The event data
        in: body
        name: data
        required: true
        schema: {$ref: '#/definitions/RefundAttributeValueChangeEvent'}
      responses:
        201:
          description: Notified
          schema: {$ref: '#/definitions/EventSubscription'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Client listener for entity RefundAttributeValueChangeEvent
      tags: [notification listeners (client side)]
      x-swagger-router-controller: NotificationListenersClientSide
  /listener/refundCreateEvent:
    post:
      description: Example of a client listener for receiving the notification RefundCreateEvent
      operationId: listenToRefundCreateEvent
      parameters:
      - description: The event data
        in: body
        name: data
        required: true
        schema: {$ref: '#/definitions/RefundCreateEvent'}
      responses:
        201:
          description: Notified
          schema: {$ref: '#/definitions/EventSubscription'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Client listener for entity RefundCreateEvent
      tags: [notification listeners (client side)]
      x-swagger-router-controller: NotificationListenersClientSide
  /listener/refundDeleteEvent:
    post:
      description: Example of a client listener for receiving the notification RefundDeleteEvent
      operationId: listenToRefundDeleteEvent
      parameters:
      - description: The event data
        in: body
        name: data
        required: true
        schema: {$ref: '#/definitions/RefundDeleteEvent'}
      responses:
        201:
          description: Notified
          schema: {$ref: '#/definitions/EventSubscription'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Client listener for entity RefundDeleteEvent
      tags: [notification listeners (client side)]
      x-swagger-router-controller: NotificationListenersClientSide
  /listener/refundStateChangeEvent:
    post:
      description: Example of a client listener for receiving the notification RefundStateChangeEvent
      operationId: listenToRefundStateChangeEvent
      parameters:
      - description: The event data
        in: body
        name: data
        required: true
        schema: {$ref: '#/definitions/RefundStateChangeEvent'}
      responses:
        201:
          description: Notified
          schema: {$ref: '#/definitions/EventSubscription'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Client listener for entity RefundStateChangeEvent
      tags: [notification listeners (client side)]
      x-swagger-router-controller: NotificationListenersClientSide
  /payment:
    get:
      description: This operation list or find Payment entities
      operationId: listPayment
      parameters:
      - {description: Comma-separated properties to be provided in response, in: query,
        name: fields, required: false, type: string}
      - {description: Requested index for start of resources to be provided in response,
        in: query, name: offset, required: false, type: integer}
      - {description: Requested number of resources to be provided in response, in: query,
        name: limit, required: false, type: integer}
      responses:
        200:
          description: Success
          headers:
            X-Result-Count: {description: Actual number of items returned in the response
                body, type: integer}
            X-Total-Count: {description: Total number of items matching criteria,
              type: integer}
          schema:
            items: {$ref: '#/definitions/Payment'}
            type: array
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: List or find Payment objects
      tags: [payment]
      x-swagger-router-controller: Payment
    post:
      description: This operation creates a Payment entity.
      operationId: createPayment
      parameters:
      - description: The Payment to be created
        in: body
        name: payment
        required: true
        schema: {$ref: '#/definitions/Payment_Create'}
      responses:
        201:
          description: Created
          schema: {$ref: '#/definitions/Payment'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Creates a Payment
      tags: [payment]
      x-swagger-router-controller: Payment
  /payment/{id}:
    get:
      description: This operation retrieves a Payment entity. Attribute selection
        is enabled for all first level attributes.
      operationId: retrievePayment
      parameters:
      - {description: Identifier of the Payment, in: path, name: id, required: true,
        type: string}
      - {description: Comma-separated properties to provide in response, in: query,
        name: fields, required: false, type: string}
      responses:
        200:
          description: Success
          schema: {$ref: '#/definitions/Payment'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Retrieves a Payment by ID
      tags: [payment]
      x-swagger-router-controller: Payment
  /refund:
    get:
      description: This operation list or find Refund entities
      operationId: listRefund
      parameters:
      - {description: Comma-separated properties to be provided in response, in: query,
        name: fields, required: false, type: string}
      - {description: Requested index for start of resources to be provided in response,
        in: query, name: offset, required: false, type: integer}
      - {description: Requested number of resources to be provided in response, in: query,
        name: limit, required: false, type: integer}
      responses:
        200:
          description: Success
          headers:
            X-Result-Count: {description: Actual number of items returned in the response
                body, type: integer}
            X-Total-Count: {description: Total number of items matching criteria,
              type: integer}
          schema:
            items: {$ref: '#/definitions/Refund'}
            type: array
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: List or find Refund objects
      tags: [refund]
      x-swagger-router-controller: Refund
    post:
      description: This operation creates a Refund entity.
      operationId: createRefund
      parameters:
      - description: The Refund to be created
        in: body
        name: refund
        required: true
        schema: {$ref: '#/definitions/Refund_Create'}
      responses:
        201:
          description: Created
          schema: {$ref: '#/definitions/Refund'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Creates a Refund
      tags: [refund]
      x-swagger-router-controller: Refund
  /refund/{id}:
    get:
      description: This operation retrieves a Refund entity. Attribute selection is
        enabled for all first level attributes.
      operationId: retrieveRefund
      parameters:
      - {description: Identifier of the Refund, in: path, name: id, required: true,
        type: string}
      - {description: Comma-separated properties to provide in response, in: query,
        name: fields, required: false, type: string}
      responses:
        200:
          description: Success
          schema: {$ref: '#/definitions/Refund'}
        400:
          description: Bad Request
          schema: {$ref: '#/definitions/Error'}
        401:
          description: Unauthorized
          schema: {$ref: '#/definitions/Error'}
        403:
          description: Forbidden
          schema: {$ref: '#/definitions/Error'}
        404:
          description: Not Found
          schema: {$ref: '#/definitions/Error'}
        405:
          description: Method Not allowed
          schema: {$ref: '#/definitions/Error'}
        409:
          description: Conflict
          schema: {$ref: '#/definitions/Error'}
        500:
          description: Internal Server Error
          schema: {$ref: '#/definitions/Error'}
      summary: Retrieves a Refund by ID
      tags: [refund]
      x-swagger-router-controller: Refund
produces: [application/json;charset=utf-8]
scheme: [http]
schemes: [https]
swagger: '2.0'
tags:
- {name: payment}
- {name: refund}
- {name: notification listeners (client side)}
- {name: events subscription}
